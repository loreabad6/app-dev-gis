[
  {
    "objectID": "License.html",
    "href": "License.html",
    "title": "R for reproducible spatial analysis",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\n wiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public:\n wiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org.\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for reproducible spatial analysis",
    "section": "",
    "text": "Syllabus",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "R for reproducible spatial analysis",
    "section": "Overview",
    "text": "Overview\nThese are the course materials for the IP: Application Development Course (GIS) - Part 1 where you will learn how to develop reproducible R workflows for spatial analysis. What you can expect:\n\nIntroduction to R and its ecosystem\nSpatial data handling in R (raster and vector data)\nConnecting to GIS software for spatial workflow automation\nSpatial visualization with R (static and interactive)\nDevelop R packages and Quarto dashboards",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#objectives",
    "href": "index.html#objectives",
    "title": "R for reproducible spatial analysis",
    "section": "Objectives",
    "text": "Objectives\nBy the end of the course you should be able:\n\nto read and write R code and to navigate the R-spatial package ecosystem\nto perform spatial analysis with vector and raster datasets in R\nto design maps programmatically\nto create reproducible workflows for spatial analysis in R",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#schedule-and-format",
    "href": "index.html#schedule-and-format",
    "title": "R for reproducible spatial analysis",
    "section": "Schedule and format",
    "text": "Schedule and format\nThis is the tentative course schedule of the lessons and assignments.\n\n\n\n\n\n\n\n\n\n\nDATE\nTOPIC\nACTIVITY\nDUE DATE\n\n\n\n\n07.03.25\nIntro to R, RStudio, Quarto; how to ask for help?\n\n\n\n\n14.03.25\nFundamentals of R; functional programming\nPractical 1\nEnd of class\n\n\n21.03.25\n(Spatial) data cleaning, wrangling & plotting\nHands-on;Practical 21\n05.05.25\n\n\n28.03.25\nR-spatial ecosystem, vector, raster, data cubes\nPractical 3\nEnd of class\n\n\n04.04.25\nGIS: in-house and bridges\nHands-on\n\n\n\n11.04.25\nR package development\nPractical 4\nEnd of class\n\n\n09.05.25\nQuarto interactive dashboards\nPractical 2 showcase\n\n\n\n\n\nThe lessons are meant to give you a broad overview of the basics and of what is possible with R for spatial analysis. Learning by yourself is highly encouraged and expected!\nThe Complementary course materials section lists a number of additional resources for your self-learning, and at the end of the lessons you will have references to the relevant chapters for you to go through.\nIn class, we will work with hand-on practicals that will allow you to develop R skills from the first lesson.\nIf you find yourself taking longer or having trouble with concepts, please ask for help on the course’s Blackboard message board or in class (there is an excellent chance someone else has the same question!) rather than via e-mail.\n\nAbout the use of AI\nUsing AI in this course is not discouraged if it helps you understand code or discover new ways of doing a task. Think of AI as an extended version of googling your issues or a Stack Overflow entry. However, beware to always test the code that you receive as an output, and also think about the logic that the AI tool follows. I expect that you learn from this course as much as possible, and copy pasting solutions generated by a LLM without critical thinking is unfortunately not going to meet those expectations.\n\n\n\n\n\n\nWarning\n\n\n\nIf you select a final project using R, please add a disclaimer section explaining if you used AI for the completion of the project and how you used it.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#assignments-and-grading",
    "href": "index.html#assignments-and-grading",
    "title": "R for reproducible spatial analysis",
    "section": "Assignments and grading",
    "text": "Assignments and grading\n\nPractical exercises (~4) – 30%\n\nTo be submitted by the end of the class or by a specific date\n\nEnd-of-term assignment – 50%\n\nProgramming project, either R or Python or both\n\nActive participation – 20%",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#required-course-materials",
    "href": "index.html#required-course-materials",
    "title": "R for reproducible spatial analysis",
    "section": "Required course materials",
    "text": "Required course materials\nR, RStudio, and Rtools will be installed in the lab computers. If you use your own laptop, see the Complementary course materials section below.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#sec-compmaterials",
    "href": "index.html#sec-compmaterials",
    "title": "R for reproducible spatial analysis",
    "section": "Complementary course materials",
    "text": "Complementary course materials\n\nInstall R and Co.\nTo work on your own laptop, you need to install R, RStudio and Quarto to follow the course materials.\n\nInstall R (&gt;= 4.0) and RStudio (&gt;= 2024.04.x with Quarto). You can follow the steps in Appendix 1 of Hands-On Programming with R.\nIf you are on Windows, install Rtools for the R version you have.\nInstalling R spatial packages in Windows (Rtools is required, see above) and Mac should be straightforward, and we will do it together. If you have a Linux system, please read this blogpost.\n\nIf you have any problems with installation, please reach out via Blackboard.\n\n\nR programming resources\n\nIntro & Basics\n\nRYouWithMe from R-Ladies Sydney.\nfasteR: Fast Lane to Learning R! by Norm Matloff.\nTeacups, Giraffes, & Statistics by Hasse Walum and Desiree de Leon.\n\n\nInteractive R learning\n\nLearn or freshen up R basics interactively with swirl\n\nFollow the instructions to start interactive courses from the R console.\nCheck Step 5 for instructions to download more courses, in different languages available at the Swirl Course Network.\n\n\n\n\n\nBooks\n\nEntry-level\n\nHands-on programming with R by Garrett Grolemund.\nR for Data Science (2e) by Hadley Wickham, Mine Çetinkaya-Rundel and Garrett Grolemund.\n\n\n\nR-Spatial\n\nGeocomputation with R by Robin Lovelace, Jakub Nowosad and Jannes Muenchow.\nSpatial Data Science: With Applications in R by Edzer Pebesma and Roger Bivand.\nSpatial Data Science with R and “terra” by Robert Hijmans.\n\n\n\nAdvanced\n\nAdvanced R (2e) by Hadley Wickham\nR Packages (2e) by Hadley Wickham and Jennifer Bryan\n\nAll links to these materials are also included in Blackboard.\n\n\n\n\n\n\nDisclaimer\n\n\n\nPlease note that the specifics of this Course Syllabus can be changed at any time, and you will be responsible for abiding by any such changes. Any changes will be communicated in class, via e-mail, or course announcement via Blackboard.\n\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "R for reproducible spatial analysis",
    "section": "",
    "text": "Explanation of assignment↩︎",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "lessons/session_1.html",
    "href": "lessons/session_1.html",
    "title": "1  Intro to R and Co.",
    "section": "",
    "text": "1.1 What is R?\nFrom the R project website:",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#what-is-r",
    "href": "lessons/session_1.html#what-is-r",
    "title": "1  Intro to R and Co.",
    "section": "",
    "text": "R is a language and environment for statistical computing and graphics.\n\n\nR provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, clustering, …) and graphical techniques, and is highly extensible.\n\n\nOne of R’s strengths is the ease with which well-designed publication-quality plots can be produced, including mathematical symbols and formulae where needed. Great care has been taken over the defaults for the minor design choices in graphics, but the user retains full control.\n\n\nR is available as Free Software under the terms of the Free Software Foundation’s GNU General Public License in source code form. It compiles and runs on a wide variety of UNIX platforms and similar systems (including FreeBSD and Linux), Windows and MacOS.\n\n\n\n\n\n\n\nSoftware checks & downloads\n\n\n\nIf you are working in your own laptop!\n\nTo check if you have R and its version, go to your terminal and type R --version. If you get an error, you don’t have R installed. If you get a printed output make a note of the version. If it is lower than 4, please upgrade. You can download R here.\nIf you are using Windows, you will need RTools, which provides toolchains for building R and R packages from source on Windows. Install it for the corresponding R version you downloaded or have.\n\nFind more info in the complementary course materials (Section 6 of the Syllabus).",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#some-quick-facts-and-good-to-knows",
    "href": "lessons/session_1.html#some-quick-facts-and-good-to-knows",
    "title": "1  Intro to R and Co.",
    "section": "1.2 Some quick facts and good-to-know’s",
    "text": "1.2 Some quick facts and good-to-know’s\n\nDifferent to compiled language, like C or JAVA, R’s default implementation is an interpreted language. R is a dynamic programming language, which means R automatically interprets your code as you run it.\nR packages are organized via The Comprehensive R Archive Network (CRAN). Mature R packages are submitted to CRAN where checks are performed on their backward compatibility against other packages and R versions and operating systems.\n\n\nCRAN is a network of ftp and web servers around the world that store identical, up-to-date, versions of code and documentation for R 1.\n\n\nR uses a particular assign operator: &lt;-. However, you will see code and in particular in this lessons using: =. You can use them interchangeably and this won’t affect your code. So if you are used to Python, you can stick to =.\nR has different coding paradigms, most importantly base or vanilla R, tidyverse and data.table.\nPiping: if you are familiar with the R tidyverse, you might have seen the use of the %&gt;% operator to concatenate functions. Since R 4.1.0 R introduced a native pipe operator |&gt; and that is what we use in this course. If you are curious about how the native pipe works and differences with the magrittr pipe, see here and here.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#why-r",
    "href": "lessons/session_1.html#why-r",
    "title": "1  Intro to R and Co.",
    "section": "1.3 Why R?",
    "text": "1.3 Why R?\n\n\n\n\nFree and open-source software\nReproducibility\nGood package maintenance\nStatistical capabilities\nHandling geographic and non-geographic data\nVisualisation",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#rstudio",
    "href": "lessons/session_1.html#rstudio",
    "title": "1  Intro to R and Co.",
    "section": "1.4 RStudio",
    "text": "1.4 RStudio\nThe most well-known IDE to work with R is RStudio, which we will be using throughout this course.\n\n\nIf you are feeling adventurous and would like to be a beta tester of new IDEs, feel free to explore Positron. Beware though, Positron is an early stage project under active development. Get to know if Positron is a good fit for you here.\nDisclaimer: I might not be able to help much if you decide to use Positron.\n\n\n\n\n\n\nSoftware checks & downloads\n\n\n\n\nLook for RStudio on your computer, and check its version. To do so, open RStudio, go to Help &gt; About Rstudio. Check your version and that Quarto is also mentioned. You should be having a version higher than RStudio v2022.07, but I recommend to upgrade to the latest version to minimize errors.\nDownload the latest RStudio version here.\n\nFind more info in the complementary course materials (Section 6 of the Syllabus).\n\n\n\nThe things that I usually change straight away in Tools &gt; Global Options…\n\nStrongly recommended:\n\nIn General, make sure that:\n\n“Restore .RData into workspace ar startup” is unticked\n“Save workspace to .RData on exit” is set to Never\n“Always save history” is unticked\n\nIn Code, tick “Use native pipe operator, |&gt; (requires R 4.1+)”\n\nOptional:\n\nIn Appearance, you can change your Editor theme and font size\nIn Pane Layout, you can move the panel order. I usually have the console on the top right and the Environment on the bottom left.\n\n\n\n1.4.1 RStudio projects\nFor this course, I would like you to get used to working with projects. Projects are a great way to help you stay organised and have all your scripts, data and output documents and figures in one single place.\nYou can create a project for this class with the following steps:\n\nGo to the File &gt; New Project….\nSpecify if you would like to create the project in a new directory, or in an existing directory. Select “New Directory”\nRStudio offers dedicated project types if you are working on an R package, or a Shiny Web Application. Here we select “New Project”, which creates an R project\nGive your project a name, something like app_dev_gis and choose the location to save your project\n\n\nYou will see that the project name is in the top-right corner and that there is a .Rproj in the files tab. Any new file you add to the directory will appear here.\nI suggest you to use a folder structure that makes sense for your work. In the course, we will have a set of hands-on exercises and practicals, so you can create two sub-directories to store each.\n\n\nYou can also save your final project inside this project if you choose R, however, I suggest you use a completely new project for that, to keep all files separated and a single environment for that.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#quarto",
    "href": "lessons/session_1.html#quarto",
    "title": "1  Intro to R and Co.",
    "section": "1.5 Quarto",
    "text": "1.5 Quarto\nIn this course, we will be using Quarto documents for the practicals. This website itself is created using Quarto.\n\nQuarto is an open-source scientific and technical publishing system.\nIt allows you to combine code, results and text in a single document.\nIt uses Markdown syntax.\nWith Quarto, you can create reproducible documents in several output formats like PDF, HTML, Word, presentations with Reveal.js, etc.\nIt has native support for multiple programming languages like Python and Julia in addition to R.\nIt can also render Jupyter notebooks.\n\n\n1.5.1 Anatomy of a Quarto file\nA plain text file that has the extension .qmd is a Quarto file:\n\n\n---\ntitle: I am a Quarto file\ndate: today\nformat: html\n---\n\nIn this document, we will load a *spatial dataset* with the `sf` package.\n\n```{r}\n#| label: setup\n#| message: false\nlibrary(sf)\nnc = read_sf(system.file(\"shape/nc.shp\", package=\"sf\"))\n```\n\nWe can see how the `nc` object looks like:\n\n```{r}\nnc\n```\n\nAnd we can also **plot** it:\n\n```{r}\n#| label: plot\n#| echo: false\nplot(nc['AREA'])\n```\n\n\nYou will notice three basic components of the file:\n\nMetadata: YAML\n\n“Yet Another Markup Language” or “YAML Ain’t Markup Language” is used to provide metadata. Depending on the type of document you are authoring, several parameters are available. Parameters can be nested and therefore indentation is important. It is kept between --- in the form:\n---\nkey: value\n---\n\nText: Markdown\n\nText is done with Markdown syntax. If you are not familiar with this, here are some basics: Text section of Intro to Quarto by Charlotte Wickham.\n\nCode: R executed via knitr\n\nExecutable code is contained in chunks surrounded by ```.\nThe more you get familiar with Quarto documents, the more you will be able to do. Interactive documents, including dashboards are also supported by Quarto. Your final project should be reported using Quarto.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#further-reading",
    "href": "lessons/session_1.html#further-reading",
    "title": "1  Intro to R and Co.",
    "section": "1.6 Further reading:",
    "text": "1.6 Further reading:\n\nThe very basics chapter (Grolemund, 2014)\nRStudio projects chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nQuarto chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#footnotes",
    "href": "lessons/session_1.html#footnotes",
    "title": "1  Intro to R and Co.",
    "section": "",
    "text": "https://cran.r-project.org/↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to R and Co.</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html",
    "href": "lessons/session_2.html",
    "title": "2  R basics & functions",
    "section": "",
    "text": "2.1 I come from Python, how will I adapt to R?\nSome results from the survey last week:\nWhat is your experience with the following programming languages?\nThe very good thing is that if you come from a Python or any other interpreted language, adapting to R should not be that hard. Code syntax is of course different. For instance, Python indexes from 0 and R from 1. Unfold the note below for cheatsheet, based on Watson (n.d.) of the main peculiarities.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#i-come-from-python-how-will-i-adapt-to-r",
    "href": "lessons/session_2.html#i-come-from-python-how-will-i-adapt-to-r",
    "title": "2  R basics & functions",
    "section": "",
    "text": "Source and interesting read: Agarwal (2023)\n\n\n\n\n\nSource: Allison Horst\n\n\n\n\n\n\n\n\n\nR vs. Python syntax\n\n\n\n\n\n\n\n\n```{r}\n#| eval: false\n# Packages\nlibrary(dplyr)\n\n# Strings\npaste('Hello', 'World')\npaste(c('Hello', 'World'), collapse = '')\n\n# Booleans\nTRUE && FALSE == FALSE\nFALSE || TRUE == TRUE\n!TRUE == FALSE\n\n# Loops\nfor (i in 1:10) {\n  print(i)\n}\nwhile (x &gt; 0) {\n  x = x - 1\n}\n\n# Conditionals\nif (x &gt; 0) {\n  print('x is positive')\n} else if (x == 0) {\n  print('x is zero')\n} else {\n  print('x is negative')\n}\n\nifelse(x&gt;0, 1, -1)\n\n# Functions\nf = function(x,y) {\n  x2 = x * x\n  x2 + sqrt(y*x2+1)\n}\n{\\(x) x^2 + sqrt(y*x^2+1)}()\n\n# Lists\nmyList = list(1, 2, \"a\", c(10,8,9))\nmyList[3] == \"a\"\nmyList[[4]][2] == 8\nmyList[length(myList)] # returns list(10,8,9)\n2 %in% myList\n\n# Ranges\n\nseq(0, 2*pi, by = 0.1)\nseq(0, 2*pi, length = 100)\n0:5 == c(0, 1, 2, 3, 4, 5)\n\n# Vectors and Matrices\nA = matrix(c(1,3,2,4),nrow=2) # column-wise!\nb = c(1,2)\nt(A)\ndim(A)\nsolve(A,b)\nb &gt; 0 # elementwise comparison\nA^2 # elementwise product\nA %*% A # matrix product\nwhich(b &gt; 0)\nmatrix(rep(2,100), nrow=10)\ndiag(4)\ncbind(A,b)\nrbind(A,b)\n\n# Random numbers\nset.seed(1234)\nmatrix(runif(100),nrow=10)\nrnorm(10)\nsample(10:99,1)\n\n# Plot\n\nplot(runif(100))\n```\n\n\n\n\n```{python}\n#| eval: false\n# Packages\nimport pandas as pd\n\n# Strings\n'Hello' + 'World'\n','.join(['Hello', 'World'])\n\n# Booleans\nTrue and False == False\nFalse or True == True\nnot True == False\n\n# Loops\nfor i in range(1,11):\n  print(i)\n  \nwhile x &gt; 0:\n  x -= 1\n\n\n# Conditionals\nif x &gt; 0:\n  print('x is positive')\nelif x == 0:\n  print('x is zero')\nelse:\n  print('x is negative')\n\n\n1 if x &gt; 0 else -1\n\n# Functions\ndef f(x,y):\n  x2 = x * x\n  return x2 + (y*x2+1)**(1/2)\n\nlambda x: x**2 + (y*x**2+1)**(1/2)\n\n# Lists\nmyList = [1, 2, \"a\", [10,8,9]]\nmyList[2] == \"a\"\nmyList[3][2] == 9\nmyList[-1] == [10, 8, 9]\n2 in myList\n\n# Ranges\nimport numpy as np\nnp.arrange(0, 2*np.pi, step=0.1)\nnp.linespace(0, 2*np.pi, num=100)\nlist(range(5)) == [0,1,2,3,4]\n\n# Vectors and Matrices\nA = np.array([[1, 2], [3, 4]])\nb = np.array([1, 2])\nnp.transpose(A) # or A.T\nA.shape\nnp.linalg.solve(A, b)\nb &gt; 0 # elementwise comparison\nb**2 # elementwise function application\nA @ A # matrix product\nnp.where(b &gt; 0)\nnp.full((10,10), 2)\nnp.eye(4) # 4 x 4 identity matrix\nnp.hstack((A,b[:,np.newaxis]))\nnp.vstack((A,b))\n\n# Random numbers\nnp.random.seed(1234)\nnp.random.rand(10,10)\nnp.random.randn(10)\nnp.random.randint(10,100)\n\n# Plot\nimport matplotlib.pyplot as plt\nplt.plot(np.random.uniform(0, 1, 100))\n```",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#base-or-vanilla-r",
    "href": "lessons/session_2.html#base-or-vanilla-r",
    "title": "2  R basics & functions",
    "section": "2.2 Base or “vanilla” R",
    "text": "2.2 Base or “vanilla” R\nOn the note above you find several examples of code syntax for base or “vanilla” R. R has several coding syntax. Knowing the basics of base R allows you to write R code without having to depend on other packages. However, most data science workflows are facilitated by other coding syntaxes such as tidyverse and data.table. Later in this lesson, you will be solving a practical using base R (Practical 1). In coming lessons, we will include the tidyverse into our workflows.\nFind some info on coding basics right here.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#basics-and-good-practice",
    "href": "lessons/session_2.html#basics-and-good-practice",
    "title": "2  R basics & functions",
    "section": "2.3 Basics and good practice",
    "text": "2.3 Basics and good practice\n\n2.3.1 R objects\nThe fundamental building blocks of R programming are objects. They can be vectors, matrices, data frames, lists and even functions.\n\n(my_vector = c(1, 2, 3, 4))\n\n[1] 1 2 3 4\n\n(my_matrix = matrix(1:9, nrow = 3, ncol = 3))\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n(my_data_frame = data.frame(\n  name = c(\"Alice\", \"Bob\"),\n  age = c(25, 30)\n))\n\n   name age\n1 Alice  25\n2   Bob  30\n\n(my_list = list(name = \"Alice\", age = 25, scores = c(90, 85, 88)))\n\n$name\n[1] \"Alice\"\n\n$age\n[1] 25\n\n$scores\n[1] 90 85 88\n\n(my_function = function(x) {\n  return(x * 2)\n})\n\nfunction (x) \n{\n    return(x * 2)\n}\n\n\n\n\n2.3.2 Object naming\nYou can create objects in R by assigning a value to a string.\n\na = 5\na\n\n[1] 5\n\n\nProbably a is not the object name you will be using as this is not very explanatory.\nThere are certain rules to follow when naming objects in R:\n\nIt should start with a letter\n\n\n1 = 2\n1_my_object = \"foo\"\n\nError in parse(text = input): &lt;text&gt;:2:2: unexpected input\n1: 1 = 2\n2: 1_\n    ^\n\n\n\nIt can only contain letters, numbers, _, and .\n\n\npa$$word = 1234\n\nError in parse(text = input): &lt;text&gt;:1:4: unexpected '$'\n1: pa$$\n       ^\n\n\nOnce you have followed these rules, you probably want your object names to be descriptive. There are different styles for naming.\nIf you are unfamiliar, I recommend:\n\nusing long names that describe your object\nusing snakecase (i.e. _) to separate words\nstarting with a prefix for related objects (will help you when you use autocompletion)\n\n\n\n\n\n\nSource: Allison Horst\n\n\n\nroads_salzburg\nroads_linz\nroads_salzburg_clean_topology\nroads_salzburg_routing\n\n\n\n2.3.3 Comments\nEverything that is behind a # will be ignored by R inside code chunks and in R scripts. You can use this feature to document what you are doing, especially for complex code that you need to revisit or send to someone else.\nTo comment out text on a Quarto file you can use &lt;!-- text to comment out --&gt;\nKeyboard shortcut for commenting code or text: Cmd/Ctrl + Shift + C\n\n\n2.3.4 RStudio diagnostics\nA useful tool in RStudio is that it tells you when there is something wrong in a line of code. This will show as a red x or a warning sign on the left side of your code chunk, next to the line number, as well as a squiggly line under the potential conflict. You can hover over them to see what the issue is.\n\n\n\nmy object = \"foo\"\n\n45 == NA\n\n\n\n\n\n\n\n\n\n2.3.5 Saving R scripts or Quarto files\nSince we did the important settings last class to never save our Environment or History, every time you open RStudio, you will start from a fresh session. That means you need to save your work. This will either happen in a script (.R) or Quarto file (.qmd). Here are some tips to name your saved files:\n\nMake your files machine readable\n\nAvoid spaces, symbols and special characters\nDon’t rely on case sensitivity to distinguish files (e.g. MyScript.R and myscript.R might be the same depending on your OS)\n\nMake your files human readable\n\nBe descriptive about what is in the file\nYou can play with the names to influence ordering in your directory, e.g. with numbers or a prefix+numbers to classify certain parts of your workflow (e.g. 01_load_data.R, 02_esda.R, 03_model.R, report1_methods.qmd, report2_validation.qmd)\n\n\nHow do you make sure that your R script holds all the objects in your Environment?\n\nSave your R script (with hopefully all your work)\nRestart R (keyboard shortcut Cmd/Ctrl + Shift + 0/F10)\nRe-run the script (keyboard shortcut Cmd/Ctrl + Shift + S)\n\nFor Quarto files, a simple solution is to Render your Quarto file. The file won’t render if it does not have all the information contained in it, and you will get an error.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#r-functions",
    "href": "lessons/session_2.html#r-functions",
    "title": "2  R basics & functions",
    "section": "2.4 R functions",
    "text": "2.4 R functions\n\n2.4.1 Calling functions\nSeveral built-in functions are available in base R, and are also the basis of any other library that you import into R.\n\nfunction_name(argument1 = value1, argument2 = value2, ...)\n\nFor instance, to generate random numbers we can use the function rnorm. To learn the rnorm arguments you can type ?rnorm in your R console\n\nrnorm(n = 20, mean = 3, sd = 2)\n\n [1]  2.8059944 -0.1953521  2.2891290  8.3652667  0.8563811  3.0705451\n [7]  5.4577635  2.4143865  3.8744313  2.9963317  1.9907451  5.9161842\n[13]  1.0668969  5.1442755  3.6077046  0.7060836  7.2908007  4.1771496\n[19]  0.5669602  0.8667552\n\n\nIt is not necessary to name the arguments, when you follow the intended function order. This is useful when you call functions often and already know what to expect. But be careful, this could be a source of errors.\n\nrnorm(20, 3, 2)\n\n [1]  2.0597969  4.8950365  3.0948333  4.9303275 -1.6426487  6.1719643\n [7] -0.8327930  3.3158708  2.3631542  2.1803738  3.2318045 -0.4350599\n[13]  3.3324682  2.6419460  4.2544517 -2.5581995  2.6061132  3.1359110\n[19]  2.2541915  2.7964142\n\n\nSome functions have default values for certain arguments. That means you don’t need to explicitely define each argument, but the function is coded with a default in mind. For rnorm, mean and sd have the defaults 0 and 1 respectively. So you can do:\n\nrnorm(20)\n\n [1] -1.63238405 -0.72797084  0.11828294  0.60894821  1.40986253  0.33823546\n [7] -0.42970050  1.29934066  0.62877588 -1.86495047 -1.97189298 -1.43562378\n[13]  0.29350793  0.05250639  0.95307690 -0.36127500  1.31868992  1.12272655\n[19]  1.04792285 -1.16473385\n\n\nYou can use autocompletion tools to help you find function names or the arguments. For this you can use TAB when typing a function. Read more on RStudio helpful functionalities here or discover them yourself on the go!\n\n\n2.4.2 Iteration\nWhen you repeatedly perform on action on different objects, you might find that iteration will become a useful tool.\nR already does this in a way, with its recycling1 behavior.\n\nx = seq(1:10)\nx\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nx * 2\n\n [1]  2  4  6  8 10 12 14 16 18 20\n\nx * c(2,3)\n\n [1]  2  6  6 12 10 18 14 24 18 30\n\nx * c(2,3,4)\n\nWarning in x * c(2, 3, 4): longer object length is not a multiple of shorter\nobject length\n\n\n [1]  2  6 12  8 15 24 14 24 36 20\n\n\nIn a more general sense, we can make use of tools within functional programming that in essence take other functions as inputs.\n\n2.4.2.1 apply family\nThe apply family of functions apply a function to each element of an object.\n\nis.numeric(x)\n\n[1] TRUE\n\n# returns a list, hence *l*apply\nlapply(x, is.numeric)\n\n[[1]]\n[1] TRUE\n\n[[2]]\n[1] TRUE\n\n[[3]]\n[1] TRUE\n\n[[4]]\n[1] TRUE\n\n[[5]]\n[1] TRUE\n\n[[6]]\n[1] TRUE\n\n[[7]]\n[1] TRUE\n\n[[8]]\n[1] TRUE\n\n[[9]]\n[1] TRUE\n\n[[10]]\n[1] TRUE\n\n\nFamily members of *apply() are:\n\n# returns a simplified output, usually a vector or matrix, hence *s*apply\nsapply(x, is.numeric)\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n# short for *v*ector apply, takes one mor argument to specify expected type\nvapply(x, is.numeric, logical(1)) \n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\n# applies a function to subsets of a vector, based on a factor, \n# useful to compute a single grouped summary\ntapply(mtcars$mpg, mtcars$cyl, mean) \n\n       4        6        8 \n26.66364 19.74286 15.10000 \n\n(mat = matrix(1:9, nrow = 3, ncol = 3))\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n# works with matrices and arrays, applies a function to the margins of an array or matrix\napply(mat, 1, sum) \n\n[1] 12 15 18\n\n\n\n\nIf you are wondering where mtcars came from, this is a base R dataset, useful for examples, that is already pre-loaded every time you start R!\nMost of the functions above will have equivalents in other coding styles like the tidyverse, which will be introduced next session. The most useful function from this set however, is lapply() since it can help you run your own functions over a list, so keep it in mind.\n\n\n2.4.2.2 for loops\nfor loops is what is being used under the hood in the apply family.\n\nfor (element in vector) {\n  # do something with element\n}\n\nAlthough powerful, for loops are usually discouraged in favor of apply functions in R because:\n\nPerformance: apply functions are generally faster than for loops because they are optimized for vectorized operations. This can lead to significant performance improvements, especially with large datasets.\nReadability: apply functions can make code more concise and easier to read. They abstract away the loop mechanics, allowing you to focus on the operation being performed.\nLess error-prone: for loops can be more prone to errors, such as off-by-one errors or incorrect indexing. You may end up if an infinite loop if there is a mistake in your code. apply functions reduce the risk of such mistakes by handling the iteration internally.\n\nThis does not mean that there will be times when they are used, but probably this is done only once the alternatives are not good enough.\n\n\n\n2.4.3 Creating functions\nFunctions let you automate tasks and make your code more organized. If you find yourself repeating a piece of code over and over and just changing one parameter, then you can probably replace that workflow with a function.\nReasons to create a function, as explained in Wickham, Çetinkaya-Rundel, et al. (2023):\n\nWhen requirements change, you only update code once.\nEliminate errors from copy-pasting. e.g. you won’t forget to update a variable name in all the places you use it.\nOrganized code: you can name your function something intuitive to remind you of the task you are undertaking.\nReuse workflows between projects, making you more efficient.\n\nAn R function has three elements:\n\nname = function(arguments) {\n  # body\n}\n\n\nname\narguments: elements that vary across calls\nbody: code that is repeated across calls",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#further-reading",
    "href": "lessons/session_2.html#further-reading",
    "title": "2  R basics & functions",
    "section": "2.5 Further reading:",
    "text": "2.5 Further reading:\n\nWorkflow basics chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nWorkflow scripts and projects chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nBase R chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nFunctions chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nIteration chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nR vs Python: Which Programming Language is Better For Data Science in 2023 by Agarwal (2023)\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#footnotes",
    "href": "lessons/session_2.html#footnotes",
    "title": "2  R basics & functions",
    "section": "",
    "text": "Read more about recycling in R here.↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R basics & functions</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html",
    "href": "lessons/session_3.html",
    "title": "3  Tidy (spatial) data",
    "section": "",
    "text": "3.1 Installing packages\nLast session, we mostly worked with base R. In this session we will be using dedicated packages that are particularly helpful for data science and spatial analysis.\nStable packages are usually installed from CRAN. The function install.packages() takes a vector of names and a destination library, downloads the packages from the repositories and installs them.\nYou can also install packages not on CRAN or “development” versions of packages using the {remotes} R package. Packages from GitHub, GitLab, Bitbucket as well as local packages are supported.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#installing-packages",
    "href": "lessons/session_3.html#installing-packages",
    "title": "3  Tidy (spatial) data",
    "section": "",
    "text": "💻 Code at Work: Your Turn to Execute\n\n\n\n\nOpen RStudio\nGo to the console\nCopy paste the following code (you can do line by line or just everything at once and R will run it line by line)\n\n\ninstall.packages(\"tidyverse\") # data science package bundle\ninstall.packages(\"sf\") # simple features in R\ninstall.packages(\"stars\") # spatio-temporal arrays\ninstall.packages(\"mapview\") # fast interactive maps\ninstall.packages(\"rnaturalearth\") # access to base layers\ninstall.packages(\"rnaturalearthdata\") # access to base layers\ninstall.packages(\"remotes\") # install packages in remote repositories\nremotes::install_github(\"r-tmap/tmap\") # data visualisation, static and interactive\n\n\nWait ☕\nGot stuck? Ask for help ✋",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#tidy-data",
    "href": "lessons/session_3.html#tidy-data",
    "title": "3  Tidy (spatial) data",
    "section": "3.2 Tidy data",
    "text": "3.2 Tidy data\n\n\n\n\n\n\n💐 Acknowledgements\n\n\n\nIllustrations from the Openscapes blog Tidy Data for reproducibility, efficiency, and collaboration by Julia Lowndes and Allison Horst.\n\n\nTIdy data is data organised in a particular, rectangular structure with one observation per row and one variable per column (Wickham, 2014).\n\nDoes this look familiar? Think about your standard GIS GUI.\nBut the data you find in the wild is not always tidy.\n\nThe tidyverse group of packages collects the main workbench of functions you can use to clean, wrangle and manipulate your data.\nThe ultimate goal of tidy workflows is that you can turn any untidy dataset into a tidy one and then be able to apply reproducible workflows.\n\n\n3.2.1 Tidyverse packages\n\n\n\n\n\n\n\n\n{readr} reads rectangular data from delimited files\n\n\n\n\n\n\n\n{tibble} is a modern reimagining of the data.frame\n\n\n\n\n\n\n\n{tidyr} helps you create tidy data\n\n\n\n\n\n\n\n{dplyr} is a grammar of data manipulation\n\n\n\n\n\n\n\n\n\n{stringr} makes working with strings as easy as possible\n\n\n\n\n\n\n\n{forcats} has tools that solve common problems with factors\n\n\n\n\n\n\n\n{purrr} enhances R’s functional programming with tools for working with functions and vectors\n\n\n\n\n\n\n\n{ggplot2} creates plots based on the grammar of graphics\n\n\n\n\n\n\nFigure 3.1: Tidyverse packages\n\n\n\n\n\n3.2.2 A typical data analysis workflow\n\n\n\nImage from Wickham, Çetinkaya-Rundel, et al. (2023)\n\n\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\nOpen a new QMD file in your course RStudio project\nCreate a new code chunk\n\n\n```{r}\n# you will be writing your code in this space\n```\n\n\nType the code below, you can use the keyboard shortcut CTRL+ALT+I\n\n\n# Call the tidyverse packages\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Read data with {readr} (already loaded with the code above)\ndata = read_csv(\"https://raw.githubusercontent.com/loreabad6/app-dev-gis/main/data/data_session3.csv\")\n\nRows: 81344 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): ident, type, name, continent, iso_country, iso_region, municipalit...\ndbl  (4): id, latitude_deg, longitude_deg, elevation_ft\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nExplore your data with the function glimpse(), what do you have? What is this data about? How many observations do you have? How many columns?\n\n\nglimpse(data)\n\nRows: 81,344\nColumns: 18\n$ id                &lt;dbl&gt; 6523, 323361, 6524, 6525, 506791, 6526, 322127, 6527…\n$ ident             &lt;chr&gt; \"00A\", \"00AA\", \"00AK\", \"00AL\", \"00AN\", \"00AR\", \"00AS…\n$ type              &lt;chr&gt; \"heliport\", \"small_airport\", \"small_airport\", \"small…\n$ name              &lt;chr&gt; \"Total RF Heliport\", \"Aero B Ranch Airport\", \"Lowell…\n$ latitude_deg      &lt;dbl&gt; 40.07099, 38.70402, 59.94773, 34.86480, 59.09329, 35…\n$ longitude_deg     &lt;dbl&gt; -74.93369, -101.47391, -151.69252, -86.77030, -156.4…\n$ elevation_ft      &lt;dbl&gt; 11, 3435, 450, 820, 80, 237, 1100, 3810, 3038, 87, 3…\n$ continent         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ iso_country       &lt;chr&gt; \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\"…\n$ iso_region        &lt;chr&gt; \"US-PA\", \"US-KS\", \"US-AK\", \"US-AL\", \"US-AK\", \"US-AR\"…\n$ municipality      &lt;chr&gt; \"Bensalem\", \"Leoti\", \"Anchor Point\", \"Harvest\", \"Kin…\n$ scheduled_service &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\"…\n$ gps_code          &lt;chr&gt; \"K00A\", \"00AA\", \"00AK\", \"00AL\", \"00AN\", NA, \"00AS\", …\n$ iata_code         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ local_code        &lt;chr&gt; \"00A\", \"00AA\", \"00AK\", \"00AL\", \"00AN\", NA, \"00AS\", \"…\n$ home_link         &lt;chr&gt; \"https://www.penndot.pa.gov/TravelInPA/airports-pa/P…\n$ wikipedia_link    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, \"https://en.wikipedi…\n$ keywords          &lt;chr&gt; NA, NA, NA, NA, NA, \"00AR\", NA, NA, NA, NA, NA, \"00C…\n\n\n\nSome columns are not really so interesting, let’s get rid of them. Use the select() function from the {dplyr} package to do so.\n\n\n# To select a set of columns you can use the `c()` function\n# To keep all the columns except a set you can use a `-` sign in front\n# Remove the columns: wikipedia_link, keywords, continent, home_link\n# by replacing the `...` below\n# Remember to save your data, either overwriting it or creating a new object\n# data = select(data, -c(wikipedia_link, keywords, continent, home_link))\n# You can also use a pipe syntax `|&gt;` to concatenate your functions\ndata = data |&gt; \n  select(-c(wikipedia_link, keywords, continent, home_link))\n\ndata\n\n# A tibble: 81,344 × 14\n       id ident type   name  latitude_deg longitude_deg elevation_ft iso_country\n    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;        &lt;dbl&gt;         &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt;      \n 1   6523 00A   helip… Tota…         40.1         -74.9           11 US         \n 2 323361 00AA  small… Aero…         38.7        -101.          3435 US         \n 3   6524 00AK  small… Lowe…         59.9        -152.           450 US         \n 4   6525 00AL  small… Epps…         34.9         -86.8          820 US         \n 5 506791 00AN  small… Katm…         59.1        -156.            80 US         \n 6   6526 00AR  closed Newp…         35.6         -91.3          237 US         \n 7 322127 00AS  small… Fult…         34.9         -97.8         1100 US         \n 8   6527 00AZ  small… Cord…         34.3        -112.          3810 US         \n 9   6528 00CA  small… Gold…         35.4        -117.          3038 US         \n10 324424 00CL  small… Will…         39.4        -122.            87 US         \n# ℹ 81,334 more rows\n# ℹ 6 more variables: iso_region &lt;chr&gt;, municipality &lt;chr&gt;,\n#   scheduled_service &lt;chr&gt;, gps_code &lt;chr&gt;, iata_code &lt;chr&gt;, local_code &lt;chr&gt;\n\n\n\nFocus on a particular subset of your data. Can you filter the dataset (filter()) to only show those in your home country? You will find the column iso_country with a ISO 3166 alpha-2 coding. If you don’t know the corresponding code, take a look at the Wikipedia link.\n\n\n# In the `...` below you can add boolean comparisons per column, \n# the function will check for each row if the comparison is \n# true or false and will only keep the trues\ndata_ec = data |&gt; filter(iso_country == \"EC\")\ndata_ec\n\n# A tibble: 357 × 14\n       id ident  type  name  latitude_deg longitude_deg elevation_ft iso_country\n    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        &lt;dbl&gt;         &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt;      \n 1  41595 EC-00… smal… Cara…       -3.63          -80.2          126 EC         \n 2 308084 EC-00… clos… Seym…       -0.472         -90.3           NA EC         \n 3 317181 EC-00… clos… Old …       -3.44          -80.0          170 EC         \n 4 323803 EC-00… smal… Nuev…       -0.928         -75.4           NA EC         \n 5 323805 EC-00… smal… Loro…       -1.62          -76.0          630 EC         \n 6 323806 EC-00… smal… Pava…       -1.58          -76.4           NA EC         \n 7 323808 EC-00… smal… Jaim…       -1.38          -77.0          849 EC         \n 8 323809 EC-00… smal… Tara…       -1.37          -76.9           NA EC         \n 9 323810 EC-00… smal… Yuca…       -1.50          -77.5           NA EC         \n10 323811 EC-00… smal… Paca…       -1.65          -77.6           NA EC         \n# ℹ 347 more rows\n# ℹ 6 more variables: iso_region &lt;chr&gt;, municipality &lt;chr&gt;,\n#   scheduled_service &lt;chr&gt;, gps_code &lt;chr&gt;, iata_code &lt;chr&gt;, local_code &lt;chr&gt;\n\n\n\nNow let’s take a look at the variable type. It seems to have categorical information. We can do a check of its categories by calling the unique() function.\n\n\n# The unique() function is from base R.\n# You can use retrieval operators from base R to select the column you want to check\nunique(data_ec$type)\n\n[1] \"small_airport\"  \"closed\"         \"heliport\"       \"medium_airport\"\n[5] \"large_airport\" \n\n# You can also use functions from dplyr such as select() to select a column but keep the tibble structure and pull() to extract the column as a vector\ndata_ec |&gt; \n  pull(type) |&gt; \n  unique()\n\n[1] \"small_airport\"  \"closed\"         \"heliport\"       \"medium_airport\"\n[5] \"large_airport\" \n\n\n\nCan you find how many of these types are present in your country? You can use the function count().\n\n\n# In the count() function you can pass your column of interest\n# and get a frequency table\n# This is a convenience function to performing \ndata |&gt; group_by(type) |&gt; summarise(n = n())\n\n# A tibble: 7 × 2\n  type               n\n  &lt;chr&gt;          &lt;int&gt;\n1 balloonport       57\n2 closed         12029\n3 heliport       21125\n4 large_airport    475\n5 medium_airport  4697\n6 seaplane_base   1196\n7 small_airport  41765\n\ndata_ec |&gt; count(type)\n\n# A tibble: 5 × 2\n  type               n\n  &lt;chr&gt;          &lt;int&gt;\n1 closed            12\n2 heliport          28\n3 large_airport      2\n4 medium_airport    14\n5 small_airport    301\n\n\n\nShall we make a plot of that info? Let’s use ggplot() functions to do that, in this case a bar plot would be a good fit.\n\n\n# ggplot functions concatenate layers by using the `+` operator\n# usually the data you want to plot is stated in the first line \n# as the argument for ggplot()\n# the next layer will be in this case the bar plot\n# the aesthetics (aes()) are the ones that map information of the data\n# source to the plot. Here you can pass the arguments a plot needs.\n# whatever is not mapped to the dataset is passed outside of aes()\n# you can see R color guides here: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\nggplot(data_ec, aes(y = type)) +\n  geom_bar(fill = \"deepskyblue3\")\n\n\n\n\n\n\n\n\n\nYou can go a step further and create subplots based on a variable of interest.\n\n\nggplot(data_ec, aes(y = type)) +\n  geom_bar(fill = \"deepskyblue3\") + \n  facet_wrap(facets = vars(iso_region))\n\n\n\n\n\n\n\n\nData source.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#spatial-data",
    "href": "lessons/session_3.html#spatial-data",
    "title": "3  Tidy (spatial) data",
    "section": "3.3 Spatial data",
    "text": "3.3 Spatial data\nSpatial data is special, you already know this. Coordinates, projections and transformations, geometries, vector data types, raster and gridded data: these are a sample of the characteristics spatial software has to take into account.\nSpatial data in R has had a long history and evolution. Spatial packages were developed already from the time R’s predecessor, the S language, was around in the 1990s. Many package developments have taken place until getting to the current state of R-Spatial packages. We will take a look at the current package ecosystem next session.\n\n3.3.1 The {sf} package\nSimple Features for R {sf} (E. Pebesma, 2018) is currently the main R package to handle spatial data. Simple features are a formal OGC standard (ISO 19125-1:2004) that describes how objects in the real world can be represented in computers.\nGeometry types: points, lines, polygons, or their derivatives are represented by this OGC hierarchical data model. {sf} supports the following geometry types:\n\n\n\nSimple features supported by {sf} from Lovelace et al. (2019)\n\n\nThe {sf} package was designed to fit tidy data workflows. To do so, it keeps the philosophy of one row per observation, one column per variable. As such, the geometry of each observation is treated as a variable and is place in a geometry column.\nBut the geometry column in a sf object is special in different ways:\n\nit is a “sticky” column, which means it is not easily dropped by any data operations you perform, e.g. when you select a column in a sf object, the geometry column will stay there.\nit is a “list-column”, which means it is a nested column.\nit has its own class: sfc, which is a standalone class where methods for sfc objects can be applied.\n\n\n\nsfc methods\nlibrary(sf)\nmethods(class = \"sfc\")\n##  [1] [                            [&lt;-                         \n##  [3] as.data.frame                c                           \n##  [5] coerce                       format                      \n##  [7] fortify                      identify                    \n##  [9] initialize                   obj_sum                     \n## [11] Ops                          points                      \n## [13] print                        rep                         \n## [15] scale_type                   show                        \n## [17] slotsFromS3                  st_area                     \n## [19] st_as_binary                 st_as_grob                  \n## [21] st_as_s2                     st_as_sf                    \n## [23] st_as_text                   st_bbox                     \n## [25] st_boundary                  st_break_antimeridian       \n## [27] st_buffer                    st_cast                     \n## [29] st_centroid                  st_collection_extract       \n## [31] st_concave_hull              st_convex_hull              \n## [33] st_coordinates               st_crop                     \n## [35] st_crs                       st_crs&lt;-                    \n## [37] st_difference                st_exterior_ring            \n## [39] st_geometry                  st_inscribed_circle         \n## [41] st_intersection              st_intersects               \n## [43] st_is_full                   st_is_valid                 \n## [45] st_is                        st_line_merge               \n## [47] st_m_range                   st_make_valid               \n## [49] st_minimum_bounding_circle   st_minimum_rotated_rectangle\n## [51] st_nearest_points            st_node                     \n## [53] st_normalize                 st_point_on_surface         \n## [55] st_polygonize                st_precision                \n## [57] st_reverse                   st_sample                   \n## [59] st_segmentize                st_set_precision            \n## [61] st_shift_longitude           st_simplify                 \n## [63] st_snap                      st_sym_difference           \n## [65] st_transform                 st_triangulate_constrained  \n## [67] st_triangulate               st_union                    \n## [69] st_voronoi                   st_wrap_dateline            \n## [71] st_write                     st_z_range                  \n## [73] st_zm                        str                         \n## [75] summary                      text                        \n## [77] type_sum                     vec_cast.sfc                \n## [79] vec_ptype2.sfc              \n## see '?methods' for accessing help and source code\n\n\n\n\n\nArtwork from Allison Horst\n\n\n\n\n3.3.2 Turning X/Y data into a sf\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\nConvert your data object to a spatial object. For this we will use the sf package.\n\n\n# The `st_as_sf()` function is used to convert a foreign object into a sf object\n# If you have a tabular dataset with X/Y or lat/long columns, this can be \n# turned into a sf by passing it as a vector to the `coords` parameter\n# Don't forget to also assign the correct `crs` to your object\nlibrary(sf)\ndata_sf = st_as_sf(\n  data_ec,\n  coords = c(\"longitude_deg\", \"latitude_deg\"),\n  crs = \"EPSG:4326\" # this is the projection the data is in\n)\n\n\nTake a look at the new spatial object you created, how is it different from the tabular format we had before?\n\n\ndata_sf\n\nSimple feature collection with 357 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.953 ymin: -4.37823 xmax: -75.39438 ymax: 1.264791\nGeodetic CRS:  WGS 84\n# A tibble: 357 × 13\n       id ident   type    name  elevation_ft iso_country iso_region municipality\n *  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;       \n 1  41595 EC-0001 small_… Cara…          126 EC          EC-O       Carabon     \n 2 308084 EC-0002 closed  Seym…           NA EC          EC-W       Isla Baltra \n 3 317181 EC-0003 closed  Old …          170 EC          EC-R       Santa Rosa  \n 4 323803 EC-0004 small_… Nuev…           NA EC          EC-D       Nuevo Rocaf…\n 5 323805 EC-0005 small_… Loro…          630 EC          EC-Y       Lorocachi   \n 6 323806 EC-0006 small_… Pava…           NA EC          EC-Y       Pavacachi   \n 7 323808 EC-0007 small_… Jaim…          849 EC          EC-Y       Quilloalpa  \n 8 323809 EC-0008 small_… Tara…           NA EC          EC-Y       Taracoa     \n 9 323810 EC-0009 small_… Yuca…           NA EC          EC-Y       &lt;NA&gt;        \n10 323811 EC-0010 small_… Paca…           NA EC          EC-Y       Pacayacu    \n# ℹ 347 more rows\n# ℹ 5 more variables: scheduled_service &lt;chr&gt;, gps_code &lt;chr&gt;, iata_code &lt;chr&gt;,\n#   local_code &lt;chr&gt;, geometry &lt;POINT [°]&gt;\n\n\n\nWe can have a quick visual of the dataset now that we have given it coordinates. You can use the base R function plot() for this.\n\n\n# This function will plot the first 9 parameters of the sf object, \n# unless specified otherwise\n# This might take a bit depending on how good your computer is, \n# as we are plotting 80 thousand points ;)\nplot(data_sf)\n\nWarning: plotting the first 10 out of 12 attributes; use max.plot = 12 to plot\nall\n\n\n\n\n\n\n\n\n# You can also create a quick interactive map\nlibrary(mapview)\nmapview(data_sf)\n\n\n\n\n\n\nBut this basic plot is not really a map just yet. Let’s make a map again for the airports in your home country. You will need to filter the data again, which is something you can do also in sf objects.\n\n\n# We can use ggplot again to create a map! Here the `geom_sf()` function will be of use\nggplot(data_sf) +\n  geom_sf(aes(color = elevation_ft)) +\n  # to do projections on the fly\n  coord_sf(crs = 24817)\n\n\n\n\n\n\n\n\n\nOne extra feature we can add is a country base layer to help locate the information. For this we can use the rnaturalearth package.\n\n\nlibrary(rnaturalearth)\n# You can add the name of your country \ncountry = ne_countries(scale = 50, country = \"Ecuador\")\ncountry |&gt; mapview()\n\n\n\n\n\n\nHere we plot both layers in one map\n\n\n# Here we will call the ggplot function again but with different spatial layers\n# Since we want to have the country boundary in the background\n# we will call that function first and then the data object we filtered above\nggplot() +\n  geom_sf(data = country) +\n  geom_sf(data = data_sf, aes(color = type)) +\n  coord_sf(crs = 24817)\n\n\n\n\n\n\n\n\n\nCustomise your map, play a bit with the options you have. It makes sense you are not familiar with everything but you can start exploring. I customised my map you can see the full code to create it in the next section.\n\n\n\n\n\n3.3.3 A customised map\n\n\nFull code for a more customised map\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\n# Read in the data\ndata = read_csv(\"https://raw.githubusercontent.com/loreabad6/app-dev-gis/main/data/data_session3.csv\")\ndata_sf_ec = data |&gt; \n  # Directly transform to sf\n  st_as_sf(coords = c(\"longitude_deg\", \"latitude_deg\"), crs = 4326) |&gt; \n  # Filter for my home country\n  filter(iso_country == \"EC\") |&gt;\n  # Transform airport type to nice labels by capitalising the first letter and removing the snakecase\n  mutate(type = str_to_sentence(str_replace_all(type, \"_\", \" \"))) |&gt; \n  # Relevel or reorder the types to have them in a more logical order\n  mutate(type = fct_relevel(type, \"Large airport\", \"Medium airport\",\n                            \"Small airport\", \"Heliport\", \"Closed\")) \n# Obtain Ecuador but also surrounding countries for context\ncountries = ne_countries(scale = 50, country = c(\"Colombia\",\"Ecuador\",\"Peru\"))\n# Extract Ecuador to obtain its bounding box and focus on it in coord_sf\necuador = countries |&gt; filter(sovereignt == \"Ecuador\")\nec_bbox = ecuador |&gt; \n  # Transform before getting the bounding box to match the CRS in the plot\n  st_transform(24817) |&gt; st_bbox()\n\nggplot() +\n  # add the country layer\n  geom_sf(data = countries, fill = \"grey90\", color = \"white\") +\n  # add the data, changed the shape to a dot with a fill and border color, \n  # assigned an alpha or opacity to not oclude the points\n  # you can find the shape codes here:\n  # https://www.sthda.com/sthda/RDoc/figure/graphs/r-plot-pch-symbols-points-in-r.png\n  geom_sf(data = data_sf_ec, aes(fill = type, size = type),\n          shape = 21, alpha = 0.8) +\n  # Change the fill palette\n  scale_fill_brewer(\"Airport type\", palette = \"Dark2\") +\n  # Manually assign point sizes\n  scale_size_manual(\"Airport type\", values = c(6, 4, 2, 1, 0.25)) +\n  # Change the CRS to a projected one to avoid distorsions. \n  # Focus the map on Ecuador by using the bounding box extent\n  coord_sf(\n    crs = 24817,\n    xlim = c(ec_bbox[\"xmin\"], ec_bbox[\"xmax\"]),\n    ylim = c(ec_bbox[\"ymin\"], ec_bbox[\"ymax\"])\n  ) +\n  # use a more minimal theme\n  theme_bw() +\n  # change the legend to the bottom\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to try at home…\n\n\n\n… you know, if you are bored.\n\n\n\n\n\nYou can keep playing with your map to get familiar with the ggplot package, customise it further, add scale and north arrows… your imagination (and maybe the ggplot extensions available) is the limit.\nAnother thing you can try is to create a function that automatically generates the map for a given country.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#further-reading",
    "href": "lessons/session_3.html#further-reading",
    "title": "3  Tidy (spatial) data",
    "section": "3.4 Further reading:",
    "text": "3.4 Further reading:\n\nData import chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nTidy data chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nHistory of R-Spatial section (Lovelace et al., 2019)\nSpatial data section, chapters 1-6 (E. Pebesma & Bivand, 2023)\nGeographic Data in R chapter (Lovelace et al., 2019)\nSimple Features for R vignette (E. Pebesma, 2025)\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html",
    "href": "lessons/session_4.html",
    "title": "4  R-spatial ecosystem",
    "section": "",
    "text": "4.1 R-spatial ecosystem\nThe R-spatial organization attempts to harmonise packages for spatial analysis in R, with a large number of R packages depending on {sf}, the core package for spatial data handling.\nA good overview of the available spatial libraries can be found in the CRAN Task View: Analysis of Spatial Data",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#r-spatial-ecosystem",
    "href": "lessons/session_4.html#r-spatial-ecosystem",
    "title": "4  R-spatial ecosystem",
    "section": "",
    "text": "R-Spatial can be loosely defined as the ecosystem of code, projects and people using R for working with and adding value to spatial data.1\n\n\n\n\n\n\n\n\n\n\nR-spatial ecosystem from E. Pebesma & Bivand (2023)\n\n\n\n4.1.1 Rspatial counterpart\nNot to be confused with R-spatial, the Rspatial resources include a different way to handle geospatial data in R. The main package {terra} provides classes and methods to represent raster and vector objects. It works well on large data sets and is a fast implementation mainly because it is written directly in C++. This means that, for example, a Python module could also be built on top of this library2. {terra} is based on C++ modules like gdal, geos and ncdf and builds it’s own spat module on C++ that interacts with R via the Rcpp module3.\n\n\n\n\n\n\n\n{terra} set-up from Hijmans (2020)",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#geometries-r2",
    "href": "lessons/session_4.html#geometries-r2",
    "title": "4  R-spatial ecosystem",
    "section": "4.2 Geometries (R2)",
    "text": "4.2 Geometries (R2)\nAs the name of the package says, {sf} is meant to deal with simple features. Polygon geometries in particular also have to follow certain rules in order to be valid simple features.\n\n\n\n\n\n\n❓ Why are they called simple?\n\n\n\n\n\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE\n\n(ls &lt;- st_linestring(rbind(c(0,0), c(1,1), c(2,2), c(0,2), c(1,1), c(2,0))))\n\nLINESTRING (0 0, 1 1, 2 2, 0 2, 1 1, 2 0)\n\nplot(ls)\n\n\n\n\n\n\n\nst_is_simple(ls)\n\n[1] FALSE\n\n\nIs the ls object valid?\n\nst_is_valid(ls)\n\n[1] TRUE\n\n\nRead more here\n\n\n\n{sf} also supports a number of spatial concepts:\n\nZ and M coordinates (Z referes to elevation and M referes to any other measure)\nEmpty geometries\nText and binary encodings (WKT and WKB)\n\n\nls # wkt\n\nLINESTRING (0 0, 1 1, 2 2, 0 2, 1 1, 2 0)\n\nls |&gt; st_as_binary() # wkb\n\n  [1] 01 02 00 00 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n [26] 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 00 40 00\n [51] 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00\n [76] 00 00 00 00 f0 3f 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 00 40 00 00 00\n[101] 00 00 00 00 00\n\n\n\n4.2.1 Operations on geometries\nOperations can be applied to a single geometry (unary), to a pair of geometries (binary) and to a set of geometries (n-ary operation).\nResults of this operations include:\n\nlogical (predicates)\na quantity (measures) area, length, distance\na new geometry (transformations) e.g. centroid, buffer, bounding box, intersection, union, etc.\n\nBinary topological relations are represented by the binary predicates. They are implementations of the Dimensionally Extended Nine-Intersection Model (DE-9IM).\n\n\n\nExamples of topological relations from Lovelace et al. (2019)\n\n\nRead more about binary predicates here.\nUnderstanding the DE-9IM relations allow you to establish your own relations. See how in section 4.2.4 of the Spatial Data Operations chapter of Lovelace et al. (2019).",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#spherical-geometries-s2",
    "href": "lessons/session_4.html#spherical-geometries-s2",
    "title": "4  R-spatial ecosystem",
    "section": "4.3 Spherical geometries (S2)",
    "text": "4.3 Spherical geometries (S2)\nThe R2 geometries explained above are defined on the plane. When we consider geometries on the sphere, we are talking about spherical geometries.\nMost of the geospatial libraries that apply spatial operations (GDAL, GEOS, etc.) do not really consider the ellipsoidal shape of the Earth. This is why the s2geometry4 library was built, to apply operations on the sphere, a better representation of the ellipsoid than the plane.\n\n\n\n\n\n\n\n\nStraight lines don’t really exist. The shortest line connecting two points is a great circle segment.\n\n\n\n\n\n\n\nWe can define a full polygon which comprises the entire surface of the Earth. Source: E. Pebesma & Bivand (2023)\n\n\n\n\n\n\n\nBounding boxes and rectangles crossing the antimeridean and validity on the sphere. Source: E. Pebesma & Bivand (2023)\n\n\n\n\n\n\nFigure 4.1: Particularities of spherical geometries\n\n\n\n\n4.3.1 Switching between S2 and R2\nAlthough S2 is a more accurate way of performing spatial operations, not every operation is implemented fully yet. To switch between using GEOS (R2) or s2 you can do:\n\nsf_use_s2(FALSE)\n\nSpherical geometry (s2) switched off\n\n\n\n\n4.3.2 Operations on geodetic (unprojected) data\nWhen sf_use_s2() is FALSE, operations like st_area(), st_distance() and st_length() will compute on the geoid using GEOS instead of on the sphere, which is the default. The former is a slower computation.\nFor unary operations that receive a distance argument, such as st_buffer() the distance argument is taken in meters when sf_use_s2() is TRUE and in degrees when FALSE, which also gives a warning.\n\nIn case x has geodetic coordinates (lon/lat) and sf_use_s2() is TRUE, a numeric dist is taken as distance in meters and a units object in dist is converted to meters. In case x has geodetic coordinates (lon/lat) and sf_use_s2() is FALSE, a numeric dist is taken as degrees, and a units object in dist is converted to arc_degree (and warnings are issued). In case x does not have geodetic coordinates (projected) then numeric dist is assumed to have the units of the coordinates, and a units dist is converted to those if st_crs(x) is not NA.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#raster-arrays-and-data-cubes",
    "href": "lessons/session_4.html#raster-arrays-and-data-cubes",
    "title": "4  R-spatial ecosystem",
    "section": "4.4 Raster, arrays and data cubes",
    "text": "4.4 Raster, arrays and data cubes\n\n\n\nRaster types. Source: E. Pebesma & Bivand (2023)\n\n\nThe packages {stars} (E. Pebesma, 2024) and {terra} (Hijmans, 2024b) are the engines to handle raster datasets in R.\nDue to its performance, {terra} took a significant role in the spatial handling of raster data.\n\nlibrary(terra)\n\nterra 1.8.29\n\ntif = system.file(\"tif/L7_ETMs.tif\", package = \"stars\")\n(rast1 = rast(tif))\n\nclass       : SpatRaster \ndimensions  : 352, 349, 6  (nrow, ncol, nlyr)\nresolution  : 28.5, 28.5  (x, y)\nextent      : 288776.3, 298722.8, 9110729, 9120761  (xmin, xmax, ymin, ymax)\ncoord. ref. : SIRGAS 2000 / UTM zone 25S (EPSG:31985) \nsource      : L7_ETMs.tif \nnames       : L7_ETMs_1, L7_ETMs_2, L7_ETMs_3, L7_ETMs_4, L7_ETMs_5, L7_ETMs_6 \n\n\nNevertheless, the {stars} package is not only designed to handle raster data, but mainly array representations (list of matrices), which makes it powerful for data cube representations, both for vector and raster datasets.\n\nlibrary(stars)\n\nLoading required package: abind\n\n(rast2 = read_stars(tif))\n\nstars object with 3 dimensions and 1 attribute\nattribute(s):\n             Min. 1st Qu. Median     Mean 3rd Qu. Max.\nL7_ETMs.tif     1      54     69 68.91242      86  255\ndimension(s):\n     from  to  offset delta                     refsys point x/y\nx       1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE [x]\ny       1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE [y]\nband    1   6      NA    NA                         NA    NA    \n\n(rast3 = read_stars(c(tif,tif), along = \"time\"))\n\nstars object with 4 dimensions and 1 attribute\nattribute(s), summary of first 1e+05 cells:\n             Min. 1st Qu. Median    Mean 3rd Qu. Max.\nL7_ETMs.tif    47      65     76 77.3419      87  255\ndimension(s):\n     from  to  offset delta                     refsys point x/y\nx       1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE [x]\ny       1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE [y]\nband    1   6      NA    NA                         NA    NA    \ntime    1   2      NA    NA                         NA    NA    \n\n\nRaster-vector operations work well with both packages, where {terra} and {stars} can both interact with sf objects.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#further-reading",
    "href": "lessons/session_4.html#further-reading",
    "title": "4  R-spatial ecosystem",
    "section": "4.5 Further reading:",
    "text": "4.5 Further reading:\n\nSpatial data section, chapters 1-6 (E. Pebesma & Bivand, 2023)\nIntroduction to sf and stars chapter (E. Pebesma & Bivand, 2023)\nSpatial data with terra section (Hijmans, 2024a)\nSpherical geometry in sf using s2geometry vignette (E. Pebesma, 2018)\n{stars} articles in package documentation (E. Pebesma, 2024)\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#footnotes",
    "href": "lessons/session_4.html#footnotes",
    "title": "4  R-spatial ecosystem",
    "section": "",
    "text": "https://www.osgeo.org/projects/r-spatial/↩︎\nIn theory, but has not been implemented yet↩︎\nEven though a C++ implementation is in many cases faster, it is harder to understand, debug or modify.↩︎\nThe C++ s2geometry library was written by Google and is used in many of its products (e.g. Google Maps, Google Earth Engine, Bigquery GIS).↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html",
    "href": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html",
    "title": "Practical 1",
    "section": "",
    "text": "Part One: Setup\nEach of the following R chunks will cause an error and/or do the desired task incorrectly. Find the mistake, and correct it to complete the intended action.\nlower_case &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n\nupper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \":\", \";\", \"—\")\n\nError in parse(text = input): &lt;text&gt;:3:56: unexpected string constant\n2: \n3: upper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\"\n                                                          ^\nmy_symbols &lt;- cbind(lower_case, upper_case, punctuation)\n\nError: object 'lower_case' not found\nmy_symbols &lt;- dataframe(my_symbols)\n\nError in dataframe(my_symbols): could not find function \"dataframe\"\n\nnames(my_symbols) = Symbol\n\nError: object 'Symbol' not found\nlen &lt;- length(my_symbols)\n\nError: object 'my_symbols' not found\nmy_symbols%Num &lt;- 1:len\n\nError in parse(text = input): &lt;text&gt;:1:11: unexpected input\n1: my_symbols%Num &lt;- 1:len\n              ^",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-one-setup",
    "href": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-one-setup",
    "title": "Practical 1",
    "section": "",
    "text": "Create vectors containing the upper case letters, lower case letters, and some punctuation marks.\n\n\n\nMake one long vector containing all the symbols.\n\n\n\nTurn the my_symbols vector into a data frame, with the variable name “Symbol”\n\n\n\nFind the total number of symbols we have in our data frame.\n\n\n\nCreate a new variable in your dataframe that assigns a number to each symbol.",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-two-creating-functions",
    "href": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-two-creating-functions",
    "title": "Practical 1",
    "section": "Part Two: Creating functions",
    "text": "Part Two: Creating functions\nWrite your own function which includes the steps below.\n\nAdd 14 to every number (already done for you 😉)\nMultiply every number by 18, then subtract 257.\nExponentiate every number. (That is, do e^[number].)\nSquare every number.\n\n\narithmetics = function(x) {\n  # step 0\n  x = x + 14\n  # step 1\n  x = ... # write your solution to prompt 1\n  # step 2\n  x = ... # write your solution to prompt 2\n  # step 3\n  x = ... # write your solution to prompt 3\n  # print output\n  x\n}\n\nTest your function, do you get any errors when applying it?\n\ntest = seq(0, 1, length.out = 5)\narithmetics(test)\n\nError in arithmetics(test): '...' used in an incorrect context",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-three-decoding-the-secret-message",
    "href": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-three-decoding-the-secret-message",
    "title": "Practical 1",
    "section": "Part Three: Decoding the secret message",
    "text": "Part Three: Decoding the secret message\nThis chunk (which should NOT have errors) will load up the encoded secret message as a vector:\n\ntop_secret &lt;- read.csv(\n  \"https://raw.githubusercontent.com/loreabad6/app-dev-gis/main/practicals/Practical1/Secret_Code_AppDev\",\n  header = TRUE)$x\n\nBy altering this top secret set of numbers, you will be able to create a message. Use your function above to alter the top_secret object.\n\n# apply your function to the top_secret object and overwrite top_secret\ntop_secret = ... \n\nError: '...' used in an incorrect context\n\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nHeadquarters has informed you that at this stage of decoding, there should be 552 numbers in the secret message that are below 17.\n\n\nHint: This is what is called a “relational” comparison, where you compare an object to a number and R will give you a vector of TRUEs and FALSEs based on whether the comparison is / is not met. You can then use these TRUEs and FALSEs as numbers, since TRUE = 1 and FALSE = 0 in R land. This is called a Boolean variable type.\n\n# Write code to verify that there are 552 numbers with values **below** 17\n\n\nTurn your vector of numbers into a matrix with 5 columns, fill the values by column and not by row.\n\n\n# write your solution to prompt 4\n\n\nSeparately from your top_secret numbers, create a new vector called “evens” of all the even numbers between 1 and 552. That is, “evens” should contain 2, 4, 6, 8 …, 552.\n\n\n# write your solution to prompt 5\n\n\nSubtract the “evens” vector from the first column of your secret message matrix.\n\n\n# write your solution to prompt 6\n\n\nSubtract 100 from all numbers 18-24th rows of the 3rd column.\n\n\n# write your solution to prompt 7\n\n\nMultiply all numbers in the 4th and 5th column by 2.\n\n\n# write your solution to prompt 8\n\n\nTurn your matrix back into a vector.\n\n\n# write your solution to prompt 9\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nHeadquarters has informed you that at this stage of decoding, all numbers in indices 500 and beyond are below 70.\n\n\nHint: Use a relational comparison similar to what you used in the last checkpoint, but here you will need to subset values from your vector! It may be helpful to think of below as not equal to or smaller than 70.\n\n# Write code to verify that indices 500 and beyond have values **below** 70\n\n\nTake the square root of all numbers in indices 38 to 465.\n\n\n# write your solution to prompt 10\n\n\nRound all numbers to the nearest whole number.\n\n\n# write your solution to prompt 11\n\n\nReplace all instances of the number 39 with 20.\n\n\n# write your solution to prompt 12\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nHeadquarters has informed you that your final message should have 507 even numbers.\n\n\nHint: Checking for divisibility is an interesting operation that isn’t done much in R. Modulus is the operation you are interested in, where you are checking for whether the numbers are divisible by 2, with no remainder. See what you can find about modulus in R!\n\n# Code to verify how many even numbers are in your top_secret vector\n# Should be 507!",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-four-the-secret-message",
    "href": "practicals/Practical1/preparation/Practical1-Base-R-Functions.html#part-four-the-secret-message",
    "title": "Practical 1",
    "section": "Part Four: The secret message!",
    "text": "Part Four: The secret message!\nUse your final vector of numbers as indices for my_symbols to discover the final message! The code to do so is already there for you:\n\ncat(my_symbols$Symbol[top_secret], sep = \"\")\nError: object 'my_symbols' not found\n\nGoogle the message, if you do not recognize it, and find its title and author.\n\n\n\n\n\n\nSolution 🎉\n\n\n\nWrite the title and author here!\n\n\nUpload the .qmd doc and the rendered html to Blackboard (don’t forget to add all your teammates names!). The first team receives an extra point each in class participation 🏃\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-DataViz.html",
    "href": "practicals/Practical2/Practical2-DataViz.html",
    "title": "Practical 2",
    "section": "",
    "text": "Data visualisation packages",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-DataViz.html#data-visualisation-packages",
    "href": "practicals/Practical2/Practical2-DataViz.html#data-visualisation-packages",
    "title": "Practical 2",
    "section": "",
    "text": "{ggplot2}\nPart of the tidyverse, ggplot2 is one of the go to packages for data visualisation in R.\nThere are plenty of tutorials out there on how to use ggplot2 for your data visualisation. Here is a very nice one by Cedric Scherer and another three-part one focused on maps by Mel Moreno and Mathieu Basille.\nYou will find native support to plot both sf (geom_sf()) and stars (raster; geom_stars()) objects.\nChoosing ggplot will allow you to use some of its many extensions. For example, the package {ggtext} let’s you customise colors in the text in your plot. For spatial elements such as north arrows and scales you can check out {ggspatial}.\nTo save your ggplot you can use the following:\n\nmymap = ggplot() +\n  geom_sf(...) +\n  theme(...)\n\nggsave(filename = \"path/to/your/plot/location/mymap.png\", plot = mymap,\n       width = 15, height = 10, units = \"cm\", dpi = 300) # adjust as necessary\n\n\n\n{tmap}\nAn R package for drawing thematic maps. This package tries to follow on the grammar of graphics principles of {ggplot2} but also provides a bit more flexibility. I personally use it for its versatility in switching between static and interactive, for its ease to build facet plots with free spatial axes and for the thought they put in particular cartography principles.\nVersion 4.0 has been cooking for a while and you will find the documentation here. You will also find a guide for making maps with {tmap} in the Geocomputation with R book.\nTo save your tmap you can use the following:\n\nmymap = tm_shape() +\n  tm_fill()\n\ntmap_save(tm = mymap, filename = \"path/to/your/plot/location/mymap.png\",\n       width = 15, height = 10, units = \"cm\", dpi = 300) # adjust as necessary\n\n\n\nBase R\nAlthough not the easiest to customise, you can definitely make nice maps using base R. Can you also make ugly maps with it?\nYou will find some basics on plotting sf objects in the {sf} plotting vignette in the package documentation here.\nTo save your plot to disk you can use the following code:\n\npng(filename = \"path/to/your/plot/location/mymap.png\",\n    width = 15, height = 10, units = \"cm\") # adjust as necessary\n\nplot(...) # the code for your plot goes here\n\ndevice.off()\n\nWith this code your plot will not render on the RStudio viewer but directly on the file you created. I recommend you to wrap your plot() code at the complete end, once you are done with your editing.\n\n\nMore resources\n\nR packages for visualising spatial data blogpost by Nicola Rennie",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-DataViz.html#data-packages",
    "href": "practicals/Practical2/Practical2-DataViz.html#data-packages",
    "title": "Practical 2",
    "section": "Data packages",
    "text": "Data packages\n\n{rnaturalearth}\nNatural Earth is a public domain map dataset including vector country and other administrative boundaries. With the package you can access the data easily within R and load it as an sf object. See the package documentation here.\n\n\n{osmdata}\nTo fetch data from OpenStreetMap you can use this package. Check the documentation on how to query data for your area here. If your data is very large you can also use the package {osmextract} to not exhaust the OSM API.\n\n\n{elevatr}\nTo get elevation data you can use this package. See the package vignettes here and the GitHub repository here\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html",
    "href": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html",
    "title": "Practical 3",
    "section": "",
    "text": "Part 1: Data import\nIn this section we will load a spatial dataset of mountain huts into R and clean it before using it in the next section.\nWe can use the sf package to load data into R. In the background, sf will use GDAL to identify the driver to properly load the data. As you will see, you can load data directly from an URL but also local files.\nlibrary(sf)\nhuts = read_sf(\"https://github.com/loreabad6/app-dev-gis/raw/refs/heads/main/data/huts.gpkg\")\nNow we will start our data wrangling and cleaning workflows. For this we will use packages from the tidyverse but you can use base R or data.table if you have experience and feel more familiar with those.\nlibrary(tidyverse)\nsf is designed to work with base R but also with tidy workflows, so we can directly use tidyverse verbs to wrangle the data.\nIf we glimpse into the data we can have an idea of what we are dealing with.\nhuts |&gt; \n  glimpse()\nNow that is a long file! You might have noticed some interesting patterns here and there, but what gives this data away is the first column: osm_id.\nNow if this is a spatial file, where are the coordinates? Take a look at the last column of the data: geom.\nhuts$geom\nThese are basically the locations of our huts, and sf already knows to look for those coordinates in this column.\nTo have a quick view of where your data is located, you can use the mapview() function from the {mapview} package.\nlibrary(mapview)\nmapview(huts)",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-1-data-import",
    "href": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-1-data-import",
    "title": "Practical 3",
    "section": "",
    "text": "Note how loading the sf library also links the underlying software to your R session: GDAL, GEOS, PROJ.\nsf_use_s2(TRUE) is also active which means that sf will use spherical geometries. Read more about it here and here.\n\n\nYou will see that 9 packages have been now attached to your workspace by calling the library(tidyverse) package bundle. You don’t need to worry about the “conflicted packages”, it is a warning to let you know there are functions in loaded packages with the same names.",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-2-data-cleaning",
    "href": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-2-data-cleaning",
    "title": "Practical 3",
    "section": "Part 2: Data cleaning",
    "text": "Part 2: Data cleaning\nIf you are interested in how to query data from OSM with R you can check the code I used here as well as the documentation for osmdata for small queries and osmextract for larger queries.\nSo now you know this is OpenStreetMap data. If you have ever worked with OSM data before you will know that their nodes have several tags with their properties attached to them. When querying the data with R, you will get in this case the queried huts in each row with all the tags in different columns forming a data frame.\nUsing this messy data you will be wrangling and tidying a bit so that you can work with a more manageable dataset in the next section.\n\n\n\n\n\n\nWatch out!\n\n\n\nFrom now on, each of the code chunks below will cause and error and/or will do the desired task incorrectly. (Even the chunks that run without error are not correct!) You will need to find the mistake, and correct it, to complete the intended action.\n\n\nYou will see a big amount of NA values in the huts data. That is because not all OSM tags are filled for every mountain hut, but if one hut has it, then it is included in the dataset.\n\nLet’s reduce the number of variables in the dataset. Let’s narrow the dataset to:\n\n\nName of the hut\nElevation of the hut\nCapacity (no. of beds)\nAmenity (is it a restaurant, a bar, a self-service hut?)\nOperator of the hut (Alpenverein, Naturfreunde, etc.)\nLocation of the hut (the coordinates)\n\n\nhuts_clean = huts &gt; \n  select(name, ele, capacity, beds, amenity, cuisine, operator)\nhuts_clean\n\n\n\n\n\n\n\nTip\n\n\n\nTake a close look at the result of your selection, are all the columns that you asked for there? What about the geom column? Did you ask for it? Is it anyway there? Let’s try to get rid of it.\n\n# THIS CHUNK HAS NO ERROR!!!!\nhuts_clean |&gt; select(-geom)\n\nOh no! It is still there! Well, that is because of how sf objects work. The geometry column is a “sticky” column, meaning that it cannot be dropped with tidyverse verbs. But, we want to work with spatial data, so we are not really going to remove that column. 😉\n\n\n\n\nIf you really want to remove the column you would need to do something like st_drop_geometry(huts_clean) or st_geometry(huts_clean) = NULL.\n\n\nNow, let’s adjust the proper variables to be numeric. We use the mutate() function which helps you change existing columns (if you save the result with the same column name) or to create new columns (by giving it a new column name).\n\n\nhuts_clean = huts_clean |&gt; \n  mutate(\n    ele = numeric(ele),\n    capacity = numeric(capacity),\n    beds = numeric(beds)\n  )\n\n\nWe will next create a new variable called “capacity_overall”. This column will combine the columns “capacity” and “beds”. When there is no capacity value, then the beds value will be taken. Otherwise the capacity value is taken. If both columns are NA, then the column will also have an NA. For this we can use the function case_when() inside the mutate() function.\n\n\nhuts_clean = huts_clean |&gt; \n  capacity_overall = case_when(is.na(capacity) ~ beds, TRUE ~ capacity)\n\n\nConsidering that the huts are located in Europe, we can project the data from WGS84 to a more appropriate CRS. Let’s use the European Equal Area “EPSG:3035”.\n\n\nhuts_clean = huts_clean |&gt; \n  st_set_crs(\"EPSG:3035\")\n\n\nFinally, note how we started each code chunk with: huts_clean = huts_clean |&gt;.\n\nThat is very redundant and can cause you trouble if you are recreating your object over and over again.\nWe can pipe all these steps together to have one single workflow for data cleaning. In the code chunk below, combine the (fixed!) code.\n\nhuts_clean = huts # add your fixed code here...\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nUp to this point, your clean dataset should have 4.6% of the number of columns in the original dataset.\n\n\n\n# Write code to verify that your huts_clean dataset has 4.6% \n# of the number of columns in the huts dataset",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-3-enrich-your-data",
    "href": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-3-enrich-your-data",
    "title": "Practical 3",
    "section": "Part 3: Enrich your data",
    "text": "Part 3: Enrich your data\nSo far we have used only wrangling and cleaning functions. Now, we are going to enrich our dataset with other spatial datasets.\n\n\n\n\n\n\nWatch out!\n\n\n\nIn this section, you will get a series of instructions, you should implement code to fulfil the task.\n\n\n\nThe huts are located in different regions. You have a regions dataset here: https://github.com/loreabad6/app-dev-gis/raw/refs/heads/main/data/regions.gpkg. Load the data using the sf package.\n\n\nregions = # load the data with the sf package. We did something similar before in Part 1.\n\n\nNow, we will perform a spatial join of the “huts_clean” data and the “regions” data. For this you can use the function st_join(). Remember you can check for function documentation by typing ?st_join on the console.\n\nHint: you most likely get an error when you first try to do your join. READ THE ERROR MESSAGE CAREFULLY! What does it tell you?\n\n# Write code using the st_join function to join in the information on \n# the regions dataset to the huts_clean dataset. \nhuts_enrich = huts_clean |&gt; \n  st_join(...)\n\n\n\nNote that the default join predicate used is st_intersects. For point data, any other predicate does not really make sense, but when joining other type of data (polygons or lines), you can use other type of predicates e.g. st_covered_by.\n\nNow let’s add some data about maximum temperature. For this you will find a .tif file here: https://github.com/loreabad6/app-dev-gis/raw/refs/heads/main/data/AUT_wc2.1_30s_tmax.tif. You can load this raster dataset using the rast() function from the {terra} package.\n\n\n\nNote how when you load {terra} you get a conflict warning. There is another package {tidyr} from the tidyverse with a function extract(). We will be using that function, so when we call it, we will use terra::extract() to be specific.\nThe maximum temperature dataset is from Wordclim data. To download it with R, I used the package {geodata} and the function worldclim_country(). See the script here.\n\nlibrary(terra)\ntmax = rast()\ntmax\n\n\n\nNotice, how this dataset is printed. Raster datasets in R are represented as matrices and arrays (remember Practical 1?). The print method is a specific way to print objects from the terra package.\n\nNote that there are 12 layers in this dataset. These correspond to the 12 months in the year. We can change the names of the layers with:\n\n\n# you don't need to change anything here!\nnames(tmax) = month.abb\n\n\nWe are interested in the summer months (June, July, August, September). Let’s get the mean tmax for these months.\n\n\ntmax_mean = mean(tmax[[c(...)]]) # add the summer months to subset.\n\n\n\nTo subset layers with a terra object we use [[. The mean() function applied to terra objects returns another raster. It applies the function per pixel. In this way you can do raster algebra!\n\nNow, let’s actually add the temperature information to the hut dataset. We can use the terra::extract() function to do this.\n\n\n# We need to add the `terra::` in front of the function \n# because of the conflict with the package tidyr\n# The first argument is the raster object and \n# the second one can be an sf object.\n# You can include the huts_enrich object here.\ntmax_mean_huts = terra::extract()\n\nIf you print this data you will notice that this is a data frame with the exact number of points as the sf object. The order is the same as the one in your dataset. Therefore, you can add this information directly as a new column to the “huts_enrich” dataset.\n\n\nDid you get a warning? Even if you did not transform your temperature to the correct CRS, the transformation was done internally by {terra}.\n\n# add the summer mean tmax here, note that it is the second column in the data\nhuts_enrich = huts_enrich |&gt; \n  mutate(tmax_summer = ) \n\n\n\n\n\n\n\nCheckpoint\n\n\n\nUp to this point, your enriched dataset should have mean “tmax” temperatures between 1.15 °C and 21.4 °C.\n\n\n\n# Write code to verify that the tmax_summer column in \n# the huts_enrich dataset ranges between the above values",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-4-find-the-dream-summer-hut",
    "href": "practicals/Practical3/preparation/Practical3-Spatial-Data-Analysis.html#part-4-find-the-dream-summer-hut",
    "title": "Practical 3",
    "section": "Part 4: Find the dream summer hut!",
    "text": "Part 4: Find the dream summer hut!\nRemember Lucia? She is very excited to find the perfect hut for her. Now that you have a clean and enriched dataset, you can help her find it!\nHere are her requirements:\n\nThe hut should be at a good enough altitude to enjoy the views, she thinks huts above 800 m should be good enough!\nTemperature is also an important factor for Lucia. She wants to escape the heat from the valley but not freeze at the top! The maximum temperature should be higher than 15 °C on average over the summer months.\nShe wants to stay in a small hut, nothing with too many other guests (otherwise it gets so hot!), but she doesn’t want to be completely alone either. Something between 10 and 30 overall capacity sounds good for her.\nShe needs to be sure she can actually eat at the hut, are there huts with restaurants?\nShe will start close to the train station and doesn’t want to drive long… what is the closest hut from Salzburg Hbf?\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nHints for the last point…\n\nYou can find distances with sf::st_distance(). Create a sf object as sbg_hbf = st_sfc(st_point(c(\"x\", \"y\")), crs = \"EPSG\").\nDon’t forget to handle the CRS correctly! (Set CRS and transform).\nYou may want to create a new column first and then filter on it…\n\n\n\n\nUse your huts_enrich object and filter for Lucia’s requirements. After filtering, you should have only one hut as a result.\n\nresult = huts_enrich |&gt; \n  filter(...) \n\nWhere is the hut located? Make an interactive map!\n\nmapview(result)\n\n\n\n\n\n\n\nSolution 🎉\n\n\n\nWrite the name and region of the hut here!\n\n\nUpload the .qmd and PDF to Blackboard (don’t forget to add all your teammates/your name(s)!). The first team receives an extra point each in class participation 🏃\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "misc/x_error-handling.html",
    "href": "misc/x_error-handling.html",
    "title": "Dealing with errors",
    "section": "",
    "text": "Advice for dealing with errors\nErrors can be sneaky - check results often\nIf a chunk of code runs smoothly without giving you any error or warnings this does not necessarily mean it accomplished the desired task.\nIt is a good habit to check the results of your code every time you finish a task.\nTwo heads are better than one\nIt can be hard to spot bugs in code that you wrote.\nWork with those around you - if something goes wrong, ask a friend to take a peek at your code and see if any glaring errors (like syntax error) pop out.\nExplain your code out loud\nThe best way to troubleshoot a sneaky but is to explain out loud each step of your code, and what you hoped to accomplish.\nIf you are alone, try Rubber Duck Debugging!\nGoogle is your friend\nThe whole of the internet is at your disposal! Use it early, use it often.\nSome tricks:",
    "crumbs": [
      "Annex",
      "Dealing with errors"
    ]
  },
  {
    "objectID": "misc/x_error-handling.html#advice-for-dealing-with-errors",
    "href": "misc/x_error-handling.html#advice-for-dealing-with-errors",
    "title": "Dealing with errors",
    "section": "",
    "text": "In the text before the code chunk, make sure to briefly state what the point of the chunk is. This will remind later readers - which might be your future self! - what the desired output is.\nIf you created a new object, take a look at it, either by clicking its name in your Environment tab or by typing its name into the console. Make sure it looks about how you expect.\nIf you created or updated a data frame, make sure your edits did what you hoped. Use the Environment or the head() function to investigate your changes.\nMake sure you don’t have any overwritten objects between your error and your attempts to solve it. If you are updating objects, it is probably safer to re-run all code chunks to see if the error persists.\n\n\n\n\n\n\n\n\n\n\n\nCopy-paste the exact error message into Google. Chances are, somebody else had a similar problem and got a similar message.\nInclude package names in your search terms. For example, “bar plot in ggplot” is a better search than “bar plot in R”.\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Annex",
      "Dealing with errors"
    ]
  },
  {
    "objectID": "misc/x_ask_help.html",
    "href": "misc/x_ask_help.html",
    "title": "Asking for help",
    "section": "",
    "text": "Option 1 - dump it all on the lecturer (not recommended):\nYou can send me all your data sources and scripts, explain very well where the error is located and I can try to reproduce your error and check how to help. This might take a while since I will need to go through all your files and data to be able to locate what is going on.\nAt the very least, besides including all your data and scripts, please also include your session information so I know which packages you have loaded and your operating system.\nHere is how I get my session info:\nsessioninfo::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.3 (2025-02-28)\n os       Ubuntu 24.04.1 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Etc/UTC\n date     2025-03-25\n pandoc   3.6.3 @ /usr/bin/ (via rmarkdown)\n quarto   1.5.57 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cli           3.6.4   2025-02-13 [1] RSPM (R 4.4.0)\n digest        0.6.37  2024-08-19 [1] RSPM (R 4.4.0)\n evaluate      1.0.3   2025-01-10 [1] RSPM (R 4.4.0)\n fastmap       1.2.0   2024-05-15 [1] RSPM (R 4.4.0)\n htmltools     0.5.8.1 2024-04-04 [1] RSPM (R 4.4.0)\n htmlwidgets   1.6.4   2023-12-06 [1] RSPM (R 4.4.0)\n jsonlite      1.9.0   2025-02-19 [1] RSPM (R 4.4.0)\n knitr         1.49    2024-11-08 [1] RSPM (R 4.4.0)\n rlang         1.1.5   2025-01-17 [1] RSPM (R 4.4.0)\n rmarkdown     2.29    2024-11-04 [1] RSPM (R 4.4.0)\n rstudioapi    0.17.1  2024-10-22 [1] RSPM (R 4.4.0)\n sessioninfo   1.2.3   2025-02-05 [1] RSPM (R 4.4.0)\n xfun          0.51    2025-02-19 [1] RSPM (R 4.4.0)\n\n [1] /usr/local/lib/R/site-library\n [2] /usr/local/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────",
    "crumbs": [
      "Annex",
      "Asking for help"
    ]
  },
  {
    "objectID": "misc/x_ask_help.html#option-2---isolate-your-problem-recommended",
    "href": "misc/x_ask_help.html#option-2---isolate-your-problem-recommended",
    "title": "Asking for help",
    "section": "Option 2 - isolate your problem (recommended):",
    "text": "Option 2 - isolate your problem (recommended):\nIt is very likely that your problem comes from one single function that is giving you errors. In this case, you will need to create a reproducible example (reprex) of your code and share it. This option is not only going to help you ask for help in this course, but also on any open forum or issue tracker of open source software. Remember to always include your session info as shown above!\nThe main parts of a reprex include (source):\n\nbackground information - Describe what you are trying to do. What have you already done?\ncomplete set up - include any library() calls and data to reproduce your issue.\ndata for a reprex Here’s a discussion on setting up data for a reprex\nmake it run - include the minimal code required to reproduce your error on the data provided. People should be able to copy and paste your code chunk and get the same error. How do I format my text so it has nice code chunks?\nminimal - strip away everything that is not directly related to your problem. This usually involves creating a much smaller and simpler set of code and data compared to that which created your issue.\n\nUse the reprex-package to Build Your Reproducible Example\n\n\n\nSource: Allison Horst\n\n\nWhen creating a reprex by hand, it’s easy to accidentally miss something that means your code can’t be run on someone else’s computer. Avoid this problem by using the reprex-package. The reprex package will save effort for you and others who want to help.\n\nFurther resources:\n\nHow to use reprex\nreprex documentation\nFAQ: What’s a reproducible example (reprex) and how do I create one?\n\n\n\n\n\nAgarwal, A. (2023). R vs python: Which is better for data science in 2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly Media, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Annex",
      "Asking for help"
    ]
  },
  {
    "objectID": "refs/references.html",
    "href": "refs/references.html",
    "title": "References",
    "section": "",
    "text": "Agarwal, A. (2023). R vs python: Which is better for data science in\n2023. https://externlabs.com/blogs/r-vs-python/.\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to\nquarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass\npackage. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from\nsatellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes\nfrom satellite image collections with the gdalcubes library.\nData, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based\nprocessing of satellite image collections in r using STAC, COGs, and\non-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023).\nMapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine\nAPI. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point\npatterns: Methodology and applications with R.\nChapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing\nspatial point patterns. Journal of Statistical Software,\n12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of\ngibbs point process models and their implementation. Journal of\nStatistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting\nbarn-raised OSGeo libraries and the evolving r.*spatial package\necosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical\ninformation system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes,\nstatistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied\nspatial data analysis with R, second edition.\nSpringer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets\nfor spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of\nglobal and local indicators of spatial association. TEST,\n27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade,\nP., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on\nEarth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a).\nQgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b).\nR package qgisprocess: Use QGIS processing algorithms. Version\n0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r\nobjects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal\ninterpolation using gstat. The R Journal, 8, 204–218.\nhttps://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G. (2014). Hands-on programming with r. \"O’Reilly\nMedia, Inc.\".\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with\nlubridate. Journal of Statistical\nSoftware, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly\nMedia.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable\ngeospatial data analysis. Big Data in Agriculture - 2020\nConvention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started |\nhappy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data\nanalysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M.,\nMaitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez,\nL., Thuiller, W., & Violle, C. (2020). Global distribution and\nconservation status of ecologically rare mammal and bird species.\nNature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation\nwith R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite\nimagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite\nimagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation.\nTransport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map\ndata from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in\nr. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data\nframes. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr:\nDistances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for\nsimple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS\nsoftware. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R:\nStandardized Support for Spatial Vector Data. The R\nJournal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector\ndata cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S:\nThe gstat package. Computers & Geosciences, 30,\n683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial\nData Science: With applications in R. Chapman and\nHall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and\nspatio-temporal geostatistical modelling, prediction and\nsimulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph\nmanipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in\ns and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and\nnonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine\nmultidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical\ncomputing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A\ncomparative case study with areal data. Geographical Analysis,\n54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R\nPackage for Retrieving Satellite Imagery and Calculating Spectral\nIndices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L.,\nCarvalho, A., & Ferreira, K. (2021). Satellite image time series\nanalysis for big earth observation data. Remote Sensing,\n13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits:\nSatellite image time series analysis for earth observation data\ncubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024).\nRstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., &\nFerreira, K. (2021). Rstac: An r package to access spatiotemporal asset\ncatalog satellite imagery. 2021 IEEE International Geoscience and\nRemote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make\ndealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive\npartitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025).\nSfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r\npackage. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing\nresearch products as r packages. Behavior Research Methods,\n53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R\nreference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R\nJournal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software,\n59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data\nanalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC\nPress.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical\nvariables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common\nstring operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the\ntidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D.,\nFrançois, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M.,\nPedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J.,\nRobinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to\nthe tidyverse. Journal of Open Source\nSoftware, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024).\nUsethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for\ndata science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K.,\nWilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T.\n(2024). ggplot2: Create elegant data visualisations using the\ngrammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024).\nroxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D.\n(2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming\ntools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S.\n(2024). Pkgdown: Make static HTML documentation for a package.\nhttps://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read\nrectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022).\nDevtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy\nmessy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in\nR. In V. Stodden, F. Leisch, & R. D. Peng (Eds.),\nImplementing reproducible computational research. Chapman;\nHall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr\n(2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report\ngeneration in r. https://yihui.org/knitr/",
    "crumbs": [
      "References"
    ]
  }
]