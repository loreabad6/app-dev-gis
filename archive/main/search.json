[
  {
    "objectID": "License.html",
    "href": "License.html",
    "title": "R for reproducible spatial analysis",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\n wiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public:\n wiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org.\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for reproducible spatial analysis",
    "section": "",
    "text": "Syllabus",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "R for reproducible spatial analysis",
    "section": "Overview",
    "text": "Overview\nThese are the course materials for the IP: Application Development Course (GIS) - Part 2 where you will learn how to develop reproducible R workflows for spatial analysis. What you can expect:\n\nIntroduction to R and its ecosystem\nSpatial data handling in R (raster and vector data)\nConnecting to GIS software for spatial workflow automation\nSpatial visualization with R (static and interactive)",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#objectives",
    "href": "index.html#objectives",
    "title": "R for reproducible spatial analysis",
    "section": "Objectives",
    "text": "Objectives\nBy the end of the course you should be able:\n\nto read and write R code and to navigate the R-spatial package ecosystem\nto perform spatial analysis with vector and raster datasets in R\nto design maps programmatically\nto create reproducible workflows for spatial analysis in R",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#schedule-and-format",
    "href": "index.html#schedule-and-format",
    "title": "R for reproducible spatial analysis",
    "section": "Schedule and format",
    "text": "Schedule and format\nThis is the tentative course schedule of the lessons and assignments.\n\n\n\n\n\n\n\n\n\n\nDATE\nTOPIC\nACTIVITY\nDUE DATE\n\n\n\n\n25.11.24\nGetting started with R\nPractical 1\n01.12.24\n\n\n02.12.24\nFundamentals of R; Intro to Quarto\nPractical 2 / Practical 3\nEnd of class\n\n\n09.12.24\n(Spatial) data cleaning, wrangling & plotting\nPractical 4\n09.01.25\n\n\n16.12.24\nR-spatial ecosystem, vector, raster, data cubes\nPractical 5, final project ideas\nEnd of class\n\n\n13.01.25\nGIS: in-house and bridges\nData visualisation showcase\n\n\n\n20.01.25\nR package development\n\n\n\n\n27.01.25\nQuarto interactive dashboards\n\n\n\n\n\n\nThe lessons are meant to give you a broad overview of the basics and of what is possible with R for spatial analysis. Learning by yourself is highly encouraged and expected!\nThe Complementary course materials section lists a number of additional resources for your self-learning, and at the end of the lessons you will have references to the relevant chapters for you to go through.\nIn class, we will work with hand-on practicals that will allow you to develop R skills from the first lesson.\nIf you find yourself taking longer or having trouble with concepts, please ask for help on the course’s Blackboard message board or in class (there is an excellent chance someone else has the same question!) rather than via e-mail.\n\nAbout the use of AI\nUsing AI in this course is not discouraged if it helps you understand code or discover new ways of doing a task. Think of AI as an extended version of googling your issues or a Stack Overflow entry. However, beware to always test the code that you receive as an output, and also think about the logic that the AI tool follows. I expect that you learn from this course as much as possible, and copy pasting solutions generated by a LLM without critical thinking is unfortunately not going to meet those expectations.\n\n\n\n\n\n\nWarning\n\n\n\nIf you select a final project using R, please add a disclaimer section explaining if you used AI for the completion of the project and how you used it.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#assignments-and-grading",
    "href": "index.html#assignments-and-grading",
    "title": "R for reproducible spatial analysis",
    "section": "Assignments and grading",
    "text": "Assignments and grading\n\nPractical exercises (~5) – 30%\n\nTo be submitted by the end of the class or by a specific date\n\nEnd-of-term assignment – 50%\n\nProgramming project, either R or Python or both\n\nActive participation – 20%",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#required-course-materials",
    "href": "index.html#required-course-materials",
    "title": "R for reproducible spatial analysis",
    "section": "Required course materials",
    "text": "Required course materials\nR, RStudio, and Rtools will be installed in the lab computers. If you use your own laptop, see the Complementary course materials section below.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "index.html#sec-compmaterials",
    "href": "index.html#sec-compmaterials",
    "title": "R for reproducible spatial analysis",
    "section": "Complementary course materials",
    "text": "Complementary course materials\n\nInstall R and Co.\nTo work on your own laptop, you need to install R, RStudio and Quarto to follow the course materials.\n\nInstall R (&gt;= 4.0) and RStudio (&gt;= 2024.04.x with Quarto). You can follow the steps in Appendix 1 of Hands-On Programming with R.\nIf you are on Windows, install Rtools for the R version you have.\nInstalling R spatial packages in Windows (Rtools is required, see above) and Mac should be straightforward, and we will do it together. If you have a Linux system, please read this blogpost.\n\nIf you have any problems with installation, please reach out via Blackboard.\n\n\nR programming resources\n\nIntro & Basics\n\nRYouWithMe from R-Ladies Sydney.\nfasteR: Fast Lane to Learning R! by Norm Matloff.\nTeacups, Giraffes, & Statistics by Hasse Walum and Desiree de Leon.\n\n\nInteractive R learning\n\nLearn or freshen up R basics interactively with swirl\n\nFollow the instructions to start interactive courses from the R console.\nCheck Step 5 for instructions to download more courses, in different languages available at the Swirl Course Network.\n\n\n\n\n\nBooks\n\nEntry-level\n\nHands-on programming with R by Garrett Grolemund.\nR for Data Science (2e) by Hadley Wickham, Mine Çetinkaya-Rundel and Garrett Grolemund.\n\n\n\nR-Spatial\n\nGeocomputation with R by Robin Lovelace, Jakub Nowosad and Jannes Muenchow.\nSpatial Data Science: With Applications in R by Edzer Pebesma and Roger Bivand.\nSpatial Data Science with R and “terra” by Robert Hijmans.\n\n\n\nAdvanced\n\nAdvanced R (2e) by Hadley Wickham\nR Packages (2e) by Hadley Wickham and Jennifer Bryan\n\nAll links to these materials are also included in Blackboard.\n\n\n\n\n\n\nDisclaimer\n\n\n\nPlease note that the specifics of this Course Syllabus can be changed at any time, and you will be responsible for abiding by any such changes. Any changes will be communicated in class, via e-mail, or course announcement via Blackboard.\n\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "lessons/session_1.html",
    "href": "lessons/session_1.html",
    "title": "1  Fundamentals of R",
    "section": "",
    "text": "1.1 Are R and Python really that different?",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of R</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#are-r-and-python-really-that-different",
    "href": "lessons/session_1.html#are-r-and-python-really-that-different",
    "title": "1  Fundamentals of R",
    "section": "",
    "text": "Different to compiled language, like C or JAVA, R’s default implementation is an interpreted language. R is a dynamic programming language, which means R automatically interprets your code as you run it. Python is tipically first compiled and then interpreted, but the compilation is hidden from the user.\nR packages are organized via The Comprehensive R Archive Network (CRAN). Mature R packages are submitted to CRAN where checks are performed on their backward compatibility against other packages and R versions and operating systems. There is no CRAN for Python packages, which sometimes makes it harder to handle versioning of the packages you work with.\n\n\nCRAN is a network of ftp and web servers around the world that store identical, up-to-date, versions of code and documentation for R.\n\n\nR uses a particular assign operator: &lt;-. However, you will see code and in particular in this lessons using: =. You can use them interchangeably and this won’t affect your code. So if you are used to Python, you can stick to =.\nR has different coding paradigms, most importantly base or vanilla R, tidyverse and data.table.\nPiping: if you are familiar with the R tidyverse, you might have seen the use of the %&gt;% operator to concatenate functions. Since R 4.1.0 R introduced a native pipe operator |&gt; and that is what we use in this course. If you are curious about how the native pipe works and differences with the magrittr pipe, see here and here.\nCode syntax is of course different. For instance, Python indexes from 0 and R from 1. Unfold the note below for cheatsheet, based on Watson (n.d.) of the main peculiarities.\n\n\n\n\n\n\n\nR vs. Python syntax\n\n\n\n\n\n\n\n\n\n# Packages\nlibrary(dplyr)\n\n# Strings\npaste('Hello', 'World')\npaste(c('Hello', 'World'), collapse = '')\n\n# Booleans\nTRUE && FALSE == FALSE\nFALSE || TRUE == TRUE\n!TRUE == FALSE\n\n# Loops\nfor (i in 1:10) {\n  print(i)\n}\nwhile (x &gt; 0) {\n  x = x - 1\n}\n\n# Conditionals\nif (x &gt; 0) {\n  print('x is positive')\n} else if (x == 0) {\n  print('x is zero')\n} else {\n  print('x is negative')\n}\n\nifelse(x&gt;0, 1, -1)\n\n# Functions\nf = function(x,y) {\n  x2 = x * x\n  x2 + sqrt(y*x2+1)\n}\n{\\(x) x^2 + sqrt(y*x^2+1)}()\n\n# Lists\nmyList = list(1, 2, \"a\", c(10,8,9))\nmyList[3] == \"a\"\nmyList[[4]][2] == 8\nmyList[length(myList)] # returns list(10,8,9)\n2 %in% myList\n\n# Ranges\n\nseq(0, 2*pi, by = 0.1)\nseq(0, 2*pi, length = 100)\n0:5 == c(0, 1, 2, 3, 4, 5)\n\n# Vectors and Matrices\nA = matrix(c(1,3,2,4),nrow=2) # column-wise!\nb = c(1,2)\nt(A)\ndim(A)\nsolve(A,b)\nb &gt; 0 # elementwise comparison\nA^2 # elementwise product\nA %*% A # matrix product\nwhich(b &gt; 0)\nmatrix(rep(2,100), nrow=10)\ndiag(4)\ncbind(A,b)\nrbind(A,b)\n\n# Random numbers\nset.seed(1234)\nmatrix(runif(100),nrow=10)\nrnorm(10)\nsample(10:99,1)\n\n# Plot\n\nplot(runif(100))\n\n\n\n\n\n\n# Packages\nimport pandas as pd\n\n# Strings\n'Hello' + 'World'\n','.join(['Hello', 'World'])\n\n# Booleans\nTrue and False == False\nFalse or True == True\nnot True == False\n\n# Loops\nfor i in range(1,11):\n  print(i)\n  \nwhile x &gt; 0:\n  x -= 1\n\n\n# Conditionals\nif x &gt; 0:\n  print('x is positive')\nelif x == 0:\n  print('x is zero')\nelse:\n  print('x is negative')\n\n\n1 if x &gt; 0 else -1\n\n# Functions\ndef f(x,y):\n  x2 = x * x\n  return x2 + (y*x2+1)**(1/2)\n\nlambda x: x**2 + (y*x**2+1)**(1/2)\n\n# Lists\nmyList = [1, 2, \"a\", [10,8,9]]\nmyList[2] == \"a\"\nmyList[3][2] == 9\nmyList[-1] == [10, 8, 9]\n2 in myList\n\n# Ranges\nimport numpy as np\nnp.arrange(0, 2*np.pi, step=0.1)\nnp.linespace(0, 2*np.pi, num=100)\nlist(range(5)) == [0,1,2,3,4]\n\n# Vectors and Matrices\nA = np.array([[1, 2], [3, 4]])\nb = np.array([1, 2])\nnp.transpose(A) # or A.T\nA.shape\nnp.linalg.solve(A, b)\nb &gt; 0 # elementwise comparison\nb**2 # elementwise function application\nA @ A # matrix product\nnp.where(b &gt; 0)\nnp.full((10,10), 2)\nnp.eye(4) # 4 x 4 identity matrix\nnp.hstack((A,b[:,np.newaxis]))\nnp.vstack((A,b))\n\n# Random numbers\nnp.random.seed(1234)\nnp.random.rand(10,10)\nnp.random.randn(10)\nnp.random.randint(10,100)\n\n# Plot\nimport matplotlib.pyplot as plt\nplt.plot(np.random.uniform(0, 1, 100))",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of R</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#base-or-vanilla-r",
    "href": "lessons/session_1.html#base-or-vanilla-r",
    "title": "1  Fundamentals of R",
    "section": "1.2 Base or “vanilla” R",
    "text": "1.2 Base or “vanilla” R\nOn the note above you find several examples of code syntax for base or “vanilla” R. R has several coding syntax. Knowing the basics of base R allows you to write R code without having to depend on other packages. However, most data science workflows are facilitated by other coding syntaxes such as tidyverse and data.table. In this lesson, you will be solving a practical using base R (Practical 2). In coming lessons, we will include the tidyverse into our workflows.\nFind some info on coding basics right here.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of R</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#r-functions",
    "href": "lessons/session_1.html#r-functions",
    "title": "1  Fundamentals of R",
    "section": "1.3 R functions",
    "text": "1.3 R functions\nFunctions let you automate tasks and make your code more organized. If you find yourself repeating a piece of code over and over and just changing one parameter, then you can probably replace that workflow with a function.\nReasons to create a function, as explained in Wickham, Çetinkaya-Rundel, et al. (2023):\n\nWhen requirements change, you only update code once.\nEliminate errors from copy-pasting. e.g. you won’t forget to update a variable name in all the places you use it.\nOrganized code: you can name your function something intuitive to remind you of the task you are undertaking.\nReuse workflows between projects, making you more efficient.\n\nAn R function has three elements:\n\nname = function(arguments) {\n  body\n}\n\n\nname\narguments: elements that vary across calls\nbody: code that is repeated across calls\n\nYou will find fundamentals of calling functions in R right here.\nPractical 3 is about writing functions in R. There you will practice this function syntax.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of R</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#quarto-crash-course",
    "href": "lessons/session_1.html#quarto-crash-course",
    "title": "1  Fundamentals of R",
    "section": "1.4 Quarto crash course",
    "text": "1.4 Quarto crash course\nIn this course, we will be using Quarto documents for the practicals. This website itself is created using Quarto.\n\nQuarto is an open-source scientific and technical publishing system.\nIt allows you to combine code, results and text in a single document.\nIt uses Markdown syntax.\nWith Quarto, you can create reproducible documents in several output formats like PDF, HTML, Word, presentations with Reveal.js, etc.\nIt has native support for multiple programming languages like Python and Julia in addition to R.\nIt can also render Jupyter notebooks.\n\n\n1.4.1 Anatomy of a Quarto file\nA plain text file that has the extension .qmd is a Quarto file:\n\n\n---\ntitle: I am a Quarto file\ndate: today\nformat: html\n---\n\nIn this document, we will load a *spatial dataset* with the `sf` package.\n\n```{r}\n#| label: setup\n#| message: false\nlibrary(sf)\nnc = read_sf(system.file(\"shape/nc.shp\", package=\"sf\"))\n```\n\nWe can see how the `nc` object looks like:\n\n```{r}\nnc\n```\n\nAnd we can also **plot** it:\n\n```{r}\n#| label: plot\n#| echo: false\nplot(nc['AREA'])\n```\n\n\nYou will notice three basic components of the file:\n\nMetadata: YAML\n\n“Yet Another Markup Language” or “YAML Ain’t Markup Language” is used to provide metadata. Depending on the type of document you are authoring, several parameters are available. Parameters can be nested and therefore indentation is important. It is kept between --- in the form:\n---\nkey: value\n---\n\nText: Markdown\n\nText is done with Markdown syntax. If you are not familiar with this, here are some basics: Text section of Intro to Quarto by Charlotte Wickham.\n\nCode: R executed via knitr\n\nExecutable code is contained in chunks surrounded by ```.\nThe more you get familiar with Quarto documents, the more you will be able to do. Interactive documents, including dashboards are also supported by Quarto. Your final project should be reported using Quarto.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of R</span>"
    ]
  },
  {
    "objectID": "lessons/session_1.html#further-reading",
    "href": "lessons/session_1.html#further-reading",
    "title": "1  Fundamentals of R",
    "section": "1.5 Further reading:",
    "text": "1.5 Further reading:\n\nWorkflow basics chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nBase R chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nFunctions chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nQuarto chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of R</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html",
    "href": "lessons/session_2.html",
    "title": "2  Tidy (spatial) data",
    "section": "",
    "text": "2.1 Installing packages\nLast session, we mostly worked with base R. In this session we will be using dedicated packages that are particularly helpful for data science and spatial analysis.\nStable packages are usually installed from CRAN. The function install.packages() takes a vector of names and a destination library, downloads the packages from the repositories and installs them.\nYou can also install packages not on CRAN or “development” versions of packages using the {remotes} R package. Packages from GitHub, GitLab, Bitbucket as well as local packages are supported.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#installing-packages",
    "href": "lessons/session_2.html#installing-packages",
    "title": "2  Tidy (spatial) data",
    "section": "",
    "text": "💻 Code at Work: Your Turn to Execute\n\n\n\n\nOpen RStudio\nGo to the console\nCopy paste the following code (you can do line by line or just everything at once and R will run it line by line)\n\n\ninstall.packages(\"tidyverse\") # data science package bundle\ninstall.packages(\"sf\") # simple features in R\ninstall.packages(\"stars\") # spatio-temporal arrays\ninstall.packages(\"mapview\") # fast interactive maps\ninstall.packages(\"rnaturalearth\") # access to base layers\ninstall.packages(\"rnaturalearthdata\") # access to base layers\ninstall.packages(\"remotes\") # install packages in remote repositories\nremotes::install_github(\"r-tmap/tmap\") # data visualisation, static and interactive\n\n\nWait ☕\nGot stuck? Ask for help ✋",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#tidy-data",
    "href": "lessons/session_2.html#tidy-data",
    "title": "2  Tidy (spatial) data",
    "section": "2.2 Tidy data",
    "text": "2.2 Tidy data\n\n\n\n\n\n\n💐 Acknowledgements\n\n\n\nIllustrations from the Openscapes blog Tidy Data for reproducibility, efficiency, and collaboration by Julia Lowndes and Allison Horst.\n\n\nTIdy data is data organised in a particular, rectangular structure with one observation per row and one variable per column (Wickham, 2014).\n\nDoes this look familiar? Think about your standard GIS GUI.\nBut the data you find in the wild is not always tidy.\n\nThe tidyverse group of packages collects the main workbench of functions you can use to clean, wrangle and manipulate your data.\nThe ultimate goal of tidy workflows is that you can turn any untidy dataset into a tidy one and then be able to apply reproducible workflows.\n\n\n2.2.1 Tidyverse packages\n\n\n\n\n\n\n\n\n{readr} reads rectangular data from delimited files\n\n\n\n\n\n\n\n{tibble} is a modern reimagining of the data.frame\n\n\n\n\n\n\n\n{tidyr} helps you create tidy data\n\n\n\n\n\n\n\n{dplyr} is a grammar of data manipulation\n\n\n\n\n\n\n\n\n\n{stringr} makes working with strings as easy as possible\n\n\n\n\n\n\n\n{forcats} has tools that solve common problems with factors\n\n\n\n\n\n\n\n{purrr} enhances R’s functional programming with tools for working with functions and vectors\n\n\n\n\n\n\n\n{ggplot2} creates plots based on the grammar of graphics\n\n\n\n\n\n\nFigure 2.1: Tidyverse packages\n\n\n\n\n\n2.2.2 A typical data analysis workflow\n\n\n\nImage from Wickham, Çetinkaya-Rundel, et al. (2023)\n\n\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\nOpen a new QMD file in your course RStudio project\nCreate a new code chunk and type the code below, you can use the keyboard shortcut CTRL+ALT+I\n\n\n# Call the tidyverse packages\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Read data with {readr} (already loaded with the code above)\ndata = read_csv(\"https://raw.githubusercontent.com/loreabad6/app-dev-gis/main/data/data_lesson2.csv\")\n\nRows: 81344 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): ident, type, name, continent, iso_country, iso_region, municipalit...\ndbl  (4): id, latitude_deg, longitude_deg, elevation_ft\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nExplore your data with the function glimpse(), what do you have? What is this data about? How many observations do you have? How many columns?\n\n\nglimpse(data)\n\nRows: 81,344\nColumns: 18\n$ id                &lt;dbl&gt; 6523, 323361, 6524, 6525, 506791, 6526, 322127, 6527…\n$ ident             &lt;chr&gt; \"00A\", \"00AA\", \"00AK\", \"00AL\", \"00AN\", \"00AR\", \"00AS…\n$ type              &lt;chr&gt; \"heliport\", \"small_airport\", \"small_airport\", \"small…\n$ name              &lt;chr&gt; \"Total RF Heliport\", \"Aero B Ranch Airport\", \"Lowell…\n$ latitude_deg      &lt;dbl&gt; 40.07099, 38.70402, 59.94773, 34.86480, 59.09329, 35…\n$ longitude_deg     &lt;dbl&gt; -74.93369, -101.47391, -151.69252, -86.77030, -156.4…\n$ elevation_ft      &lt;dbl&gt; 11, 3435, 450, 820, 80, 237, 1100, 3810, 3038, 87, 3…\n$ continent         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ iso_country       &lt;chr&gt; \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\"…\n$ iso_region        &lt;chr&gt; \"US-PA\", \"US-KS\", \"US-AK\", \"US-AL\", \"US-AK\", \"US-AR\"…\n$ municipality      &lt;chr&gt; \"Bensalem\", \"Leoti\", \"Anchor Point\", \"Harvest\", \"Kin…\n$ scheduled_service &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\"…\n$ gps_code          &lt;chr&gt; \"K00A\", \"00AA\", \"00AK\", \"00AL\", \"00AN\", NA, \"00AS\", …\n$ iata_code         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ local_code        &lt;chr&gt; \"00A\", \"00AA\", \"00AK\", \"00AL\", \"00AN\", NA, \"00AS\", \"…\n$ home_link         &lt;chr&gt; \"https://www.penndot.pa.gov/TravelInPA/airports-pa/P…\n$ wikipedia_link    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, \"https://en.wikipedi…\n$ keywords          &lt;chr&gt; NA, NA, NA, NA, NA, \"00AR\", NA, NA, NA, NA, NA, \"00C…\n\n\n\nSome columns are not really so interesting, let’s get rid of them. Use the select() function from the {dplyr} package to do so.\n\n\n# To select a set of columns you can use the `c()` function\n# To keep all the columns except a set you can use a `-` sign in front\n# Remove the columns: wikipedia_link, keywords, continent, home_link\n# by replacing the `...` below\n# Remember to save your data, either overwriting it or creating a new object\n# data = select(data, -c(wikipedia_link, keywords, continent, home_link))\n# You can also use a pipe syntax `|&gt;` to concatenate your functions\ndata = data |&gt; \n  select(-c(wikipedia_link, keywords, continent, home_link))\n\n\nFocus on a particular subset of your data. Can you filter the dataset (filter()) to only show those in your home country? You will find the column iso_country with a ISO 3166 alpha-2 coding. If you don’t know the corresponding code, take a look at the Wikipedia link.\n\n\n# In the `...` below you can add boolean comparisons per column, \n# the function will check for each row if the comparison is \n# true or false and will only keep the trues\ndata_ec = data |&gt; filter(iso_country == \"EC\")\n\n\nNow let’s take a look at the variable type. It seems to have categorical information. We can do a check of its categories by calling the unique() function.\n\n\n# The unique() function is from base R.\n# You can use retrieval operators from base R to select the column you want to check\n# You can also use functions from dplyr such as select() to select a column but keep the tibble structure and pull() to extract the column as a vector\nunique(data_ec$type)\n\n[1] \"small_airport\"  \"closed\"         \"heliport\"       \"medium_airport\"\n[5] \"large_airport\" \n\n\n\nCan you find how many of these types are present in your country? You can use the function count().\n\n\n# In the count() function you can pass your column of interest\n# and get a frequency table\n# This is a convenience function to performing \n# data |&gt; group_by(type) |&gt; summarise(n = n())\ndata_ec |&gt; count(type)\n\n# A tibble: 5 × 2\n  type               n\n  &lt;chr&gt;          &lt;int&gt;\n1 closed            12\n2 heliport          28\n3 large_airport      2\n4 medium_airport    14\n5 small_airport    301\n\n\n\nShall we make a plot of that info? Let’s use ggplot() functions to do that, in this case a bar plot would be a good fit.\n\n\n# ggplot functions concatenate layers by using the `+` operator\n# usually the data you want to plot is stated in the first line \n# as the argument for ggplot()\nggplot(data_ec) +\n# the next layer will be in this case the bar plot\n# the aesthetics (aes()) are the ones that map information of the data\n# source to the plot. Here you can pass the arguments a plot needs.\n# whatever is not mapped to the dataset is passed outside of aes()\n# you can see R color guides here: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\n  geom_bar(aes(x = type), fill = \"deepskyblue\") +\n  xlab(\"Airport type\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nYou can go a step further and create subplots based on a variable of interest.\n\n\nggplot(data_ec) +\n  geom_bar(aes(y = type), fill = \"deepskyblue\") +\n  facet_wrap(~iso_region, ncol = 6) +\n  ylab(\"Airport type\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nData source.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#spatial-data",
    "href": "lessons/session_2.html#spatial-data",
    "title": "2  Tidy (spatial) data",
    "section": "2.3 Spatial data",
    "text": "2.3 Spatial data\nSpatial data is special, you already know this. Coordinates, projections and transformations, geometries, vector data types, raster and gridded data: these are a sample of the characteristics spatial software has to take into account.\nSpatial data in R has had a long history and evolution. Spatial packages were developed already from the time R’s predecessor, the S language, was around in the 1990s. Many package developments have taken place until getting to the current state of R-Spatial packages. We will take a look at the current package ecosystem next session.\n\n2.3.1 The {sf} package\nSimple Features for R {sf} (E. Pebesma, 2018) is currently the main R package to handle spatial data. Simple features are a formal OGC standard (ISO 19125-1:2004) that describes how objects in the real world can be represented in computers.\nGeometry types: points, lines, polygons, or their derivatives are represented by this OGC hierarchical data model. {sf} supports the following geometry types:\n\n\n\nSimple features supported by {sf} from Lovelace et al. (2019)\n\n\nThe {sf} package was designed to fit tidy data workflows. To do so, it keeps the philosophy of one row per observation, one column per variable. As such, the geometry of each observation is treated as a variable and is place in a geometry column.\nBut the geometry column in a sf object is special in different ways:\n\nit is a “sticky” column, which means it is not easily dropped by any data operations you perform, e.g. when you select a column in a sf object, the geometry column will stay there.\nit is a “list-column”, which means it is a nested column.\nit has its own class: sfc, which is a standalone class where methods for sfc objects can be applied.\n\n\n\nsfc methods\nlibrary(sf)\nmethods(class = \"sfc\")\n##  [1] [                            [&lt;-                         \n##  [3] as.data.frame                c                           \n##  [5] coerce                       format                      \n##  [7] fortify                      identify                    \n##  [9] initialize                   obj_sum                     \n## [11] Ops                          points                      \n## [13] print                        rep                         \n## [15] scale_type                   show                        \n## [17] slotsFromS3                  st_area                     \n## [19] st_as_binary                 st_as_grob                  \n## [21] st_as_s2                     st_as_sf                    \n## [23] st_as_text                   st_bbox                     \n## [25] st_boundary                  st_break_antimeridian       \n## [27] st_buffer                    st_cast                     \n## [29] st_centroid                  st_collection_extract       \n## [31] st_concave_hull              st_convex_hull              \n## [33] st_coordinates               st_crop                     \n## [35] st_crs                       st_crs&lt;-                    \n## [37] st_difference                st_exterior_ring            \n## [39] st_geometry                  st_inscribed_circle         \n## [41] st_intersection              st_intersects               \n## [43] st_is_full                   st_is_valid                 \n## [45] st_is                        st_line_merge               \n## [47] st_m_range                   st_make_valid               \n## [49] st_minimum_bounding_circle   st_minimum_rotated_rectangle\n## [51] st_nearest_points            st_node                     \n## [53] st_normalize                 st_point_on_surface         \n## [55] st_polygonize                st_precision                \n## [57] st_reverse                   st_sample                   \n## [59] st_segmentize                st_set_precision            \n## [61] st_shift_longitude           st_simplify                 \n## [63] st_snap                      st_sym_difference           \n## [65] st_transform                 st_triangulate_constrained  \n## [67] st_triangulate               st_union                    \n## [69] st_voronoi                   st_wrap_dateline            \n## [71] st_write                     st_z_range                  \n## [73] st_zm                        str                         \n## [75] summary                      text                        \n## [77] type_sum                     vec_cast.sfc                \n## [79] vec_ptype2.sfc              \n## see '?methods' for accessing help and source code\n\n\n\n\n\nArtwork from Allison Horst\n\n\n\n\n2.3.2 Turning X/Y data into a sf\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\nConvert your data object to a spatial object. For this we will use the sf package.\n\n\n# The `st_as_sf()` function is used to convert a foreign object into a sf object\n# If you have a tabular dataset with X/Y or lat/long columns, this can be \n# turned into a sf by passing it as a vector to the `coords` parameter\n# Don't forget to also assign the correct `crs` to your object\ndata_sf = st_as_sf(\n  data_ec,\n  coords = c(\"longitude_deg\", \"latitude_deg\"),\n  crs = 4326 # this is the projection the data is in\n)\n\n\nTake a look at the new spatial object you created, how is it different from the tabular format we had before?\n\n\ndata_sf\n\nSimple feature collection with 357 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -90.953 ymin: -4.37823 xmax: -75.39438 ymax: 1.264791\nGeodetic CRS:  WGS 84\n# A tibble: 357 × 13\n       id ident   type    name  elevation_ft iso_country iso_region municipality\n *  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;       \n 1  41595 EC-0001 small_… Cara…          126 EC          EC-O       Carabon     \n 2 308084 EC-0002 closed  Seym…           NA EC          EC-W       Isla Baltra \n 3 317181 EC-0003 closed  Old …          170 EC          EC-R       Santa Rosa  \n 4 323803 EC-0004 small_… Nuev…           NA EC          EC-D       Nuevo Rocaf…\n 5 323805 EC-0005 small_… Loro…          630 EC          EC-Y       Lorocachi   \n 6 323806 EC-0006 small_… Pava…           NA EC          EC-Y       Pavacachi   \n 7 323808 EC-0007 small_… Jaim…          849 EC          EC-Y       Quilloalpa  \n 8 323809 EC-0008 small_… Tara…           NA EC          EC-Y       Taracoa     \n 9 323810 EC-0009 small_… Yuca…           NA EC          EC-Y       &lt;NA&gt;        \n10 323811 EC-0010 small_… Paca…           NA EC          EC-Y       Pacayacu    \n# ℹ 347 more rows\n# ℹ 5 more variables: scheduled_service &lt;chr&gt;, gps_code &lt;chr&gt;, iata_code &lt;chr&gt;,\n#   local_code &lt;chr&gt;, geometry &lt;POINT [°]&gt;\n\n\n\nWe can have a quick visual of the dataset now that we have given it coordinates. You can use the base R function plot() for this.\n\n\n# This function will plot the first 9 parameters of the sf object, \n# unless specified otherwise\n# This might take a bit depending on how good your computer is, \n# as we are plotting 80 thousand points ;)\nplot(data_sf)\n\nWarning: plotting the first 10 out of 12 attributes; use max.plot = 12 to plot\nall\n\n\n\n\n\n\n\n\n# You can also create a quick interactive map\nlibrary(mapview)\nmapview(data_sf)\n\n\n\n\n\n\nBut this basic plot is not really a map just yet. Let’s make a map again for the airports in your home country. You will need to filter the data again, which is something you can do also in sf objects.\n\n\n# We can use ggplot again to create a map! Here the `geom_sf()` function will be of use\nggplot(data_sf) +\n  geom_sf(aes(color = type)) +\n  # to do projections on the fly\n  coord_sf(crs = 24817)\n\n\n\n\n\n\n\n\n\nOne extra feature we can add is a country base layer to help locate the information. For this we can use the rnaturalearth package.\n\n\nlibrary(rnaturalearth)\n# You can add the name of your country \ncountry = ne_countries(scale = 50, country = \"Ecuador\")\n\n\nHere we plot both layers in one map\n\n\n# Here we will call the ggplot function again but with different spatial layers\n# Since we want to have the country boundary in the background\n# we will call that function first and then the data object we filtered above\nggplot() +\n  geom_sf(data = country) +\n  geom_sf(data = data_sf, aes(color = type)) +\n  coord_sf(crs = 24817)\n\n\n\n\n\n\n\n\n\nCustomise your map, play a bit with the options you have. It makes sense you are not familiar with everything but you can start exploring. I customised my map you can see the full code to create it in the next section.\n\n\n\n\n\n2.3.3 A customised map\n\n\nFull code for a more customised map\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\n# Read in the data\ndata = read_csv(\"https://raw.githubusercontent.com/loreabad6/app-dev-gis/main/data/data_lesson2.csv\")\ndata_sf_ec = data |&gt; \n  # Directly transform to sf\n  st_as_sf(coords = c(\"longitude_deg\", \"latitude_deg\"), crs = 4326) |&gt; \n  # Filter for my home country\n  filter(iso_country == \"EC\") |&gt;\n  # Transform airport type to nice labels by capitalising the first letter and removing the snakecase\n  mutate(type = str_to_sentence(str_replace_all(type, \"_\", \" \"))) |&gt; \n  # Relevel or reorder the types to have them in a more logical order\n  mutate(type = fct_relevel(type, \"Large airport\", \"Medium airport\",\n                            \"Small airport\", \"Heliport\", \"Closed\")) \n# Obtain Ecuador but also surrounding countries for context\ncountries = ne_countries(scale = 50, country = c(\"Colombia\",\"Ecuador\",\"Peru\"))\n# Extract Ecuador to obtain its bounding box and focus on it in coord_sf\necuador = countries |&gt; filter(sovereignt == \"Ecuador\")\nec_bbox = ecuador |&gt; \n  # Transform before getting the bounding box to match the CRS in the plot\n  st_transform(24817) |&gt; st_bbox()\n\nggplot() +\n  # add the country layer\n  geom_sf(data = countries, fill = \"grey90\", color = \"white\") +\n  # add the data, changed the shape to a dot with a fill and border color, \n  # assgined an alpha or opacity to not oclude the points\n  geom_sf(data = data_sf_ec, aes(fill = type, size = type),\n          shape = 21, alpha = 0.8) +\n  # Change the fill palette\n  scale_fill_brewer(\"Airport type\", palette = \"Dark2\") +\n  # Manually assign point sizes\n  scale_size_manual(\"Airport type\", values = c(6, 4, 2, 1, 0.25)) +\n  # Change the CRS to a projected one to avoid distorsions. \n  # Focus the map on Ecuador by using the bounding box extent\n  coord_sf(\n    crs = 24817,\n    xlim = c(ec_bbox[\"xmin\"], ec_bbox[\"xmax\"]),\n    ylim = c(ec_bbox[\"ymin\"], ec_bbox[\"ymax\"])\n  ) +\n  # use a more minimal theme\n  theme_bw() +\n  # change the legend to the bottom\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to try at home…\n\n\n\n… you know, if you are bored.\n\n\n\n\n\nYou can keep playing with your map to get familiar with the ggplot package, customise it further, add scale and north arrows… your imagination (and maybe the ggplot extensions available) is the limit.\nAnother thing you can try is to create a function that automatically generates the map for a given country.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_2.html#further-reading",
    "href": "lessons/session_2.html#further-reading",
    "title": "2  Tidy (spatial) data",
    "section": "2.4 Further reading:",
    "text": "2.4 Further reading:\n\nData import chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nTidy data chapter (Wickham, Çetinkaya-Rundel, et al., 2023)\nHistory of R-Spatial section (Lovelace et al., 2019)\nSpatial data section, chapters 1-6 (E. Pebesma & Bivand, 2023)\nGeographic Data in R chapter (Lovelace et al., 2019)\nSimple Features for R vignette (E. Pebesma, 2025)\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tidy (spatial) data</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html",
    "href": "lessons/session_3.html",
    "title": "3  R-spatial ecosystem",
    "section": "",
    "text": "3.1 R-spatial ecosystem\nThe R-spatial organization attempts to harmonise packages for spatial analysis in R, with a large number of R packages depending on {sf}, the core package for spatial data handling.\nA good overview of the available spatial libraries can be found in the CRAN Task View: Analysis of Spatial Data",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#r-spatial-ecosystem",
    "href": "lessons/session_3.html#r-spatial-ecosystem",
    "title": "3  R-spatial ecosystem",
    "section": "",
    "text": "R-Spatial can be loosely defined as the ecosystem of code, projects and people using R for working with and adding value to spatial data.1\n\n\n\n\n\n\n\n\n\n\nR-spatial ecosystem from E. Pebesma & Bivand (2023)\n\n\n\n3.1.1 Rspatial counterpart\nNot to be confused with R-spatial, the Rspatial resources include a different way to handle geospatial data in R. The main package {terra} provides classes and methods to represent raster and vector objects. It works well on large data sets and is a fast implementation mainly because it is written directly in C++. This means that, for example, a Python module could also be built on top of this library2. {terra} is based on C++ modules like gdal, geos and ncdf and builds it’s own spat module on C++ that interacts with R via the Rcpp module3.\n\n\n\n\n\n\n\n{terra} set-up from Hijmans (2020)",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#geometries-r2",
    "href": "lessons/session_3.html#geometries-r2",
    "title": "3  R-spatial ecosystem",
    "section": "3.2 Geometries (R2)",
    "text": "3.2 Geometries (R2)\nAs the name of the package says, {sf} is meant to deal with simple features. Polygon geometries in particular also have to follow certain rules in order to be valid simple features.\n\n\n\n\n\n\n❓ Why are they called simple?\n\n\n\n\n\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE\n\n(ls &lt;- st_linestring(rbind(c(0,0), c(1,1), c(2,2), c(0,2), c(1,1), c(2,0))))\n\nLINESTRING (0 0, 1 1, 2 2, 0 2, 1 1, 2 0)\n\nplot(ls)\n\n\n\n\n\n\n\nst_is_simple(ls)\n\n[1] FALSE\n\n\nIs the ls object valid?\n\nst_is_valid(ls)\n\n[1] TRUE\n\n\nRead more here\n\n\n\n{sf} also supports a number of spatial concepts:\n\nZ and M coordinates (Z referes to elevation and M referes to any other measure)\nEmpty geometries\nText and binary encodings (WKT and WKB)\n\n\nls # wkt\n\nLINESTRING (0 0, 1 1, 2 2, 0 2, 1 1, 2 0)\n\nls |&gt; st_as_binary() # wkb\n\n  [1] 01 02 00 00 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n [26] 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 00 40 00\n [51] 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00\n [76] 00 00 00 00 f0 3f 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 00 40 00 00 00\n[101] 00 00 00 00 00\n\n\n\n3.2.1 Operations on geometries\nOperations can be applied to a single geometry (unary), to a pair of geometries (binary) and to a set of geometries (n-ary operation).\nResults of this operations include:\n\nlogical (predicates)\na quantity (measures) area, length, distance\na new geometry (transformations) e.g. centroid, buffer, bounding box, intersection, union, etc.\n\nBinary topological relations are represented by the binary predicates. They are implementations of the Dimensionally Extended Nine-Intersection Model (DE-9IM).\n\n\n\nExamples of topological relations from Lovelace et al. (2019)\n\n\nRead more about binary predicates here.\nUnderstanding the DE-9IM relations allow you to establish your own relations. See how in section 4.2.4 of the Spatial Data Operations chapter of Lovelace et al. (2019).",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#spherical-geometries-s2",
    "href": "lessons/session_3.html#spherical-geometries-s2",
    "title": "3  R-spatial ecosystem",
    "section": "3.3 Spherical geometries (S2)",
    "text": "3.3 Spherical geometries (S2)\nThe R2 geometries explained above are defined on the plane. When we consider geometries on the sphere, we are talking about spherical geometries.\nMost of the geospatial libraries that apply spatial operations (GDAL, GEOS, etc.) do not really consider the ellipsoidal shape of the Earth. This is why the s2geometry4 library was built, to apply operations on the sphere, a better representation of the ellipsoid than the plane.\n\n\n\n\n\n\n\n\nStraight lines don’t really exist. The shortest line connecting two points is a great circle segment.\n\n\n\n\n\n\n\nWe can define a full polygon which comprises the entire surface of the Earth. Source: E. Pebesma & Bivand (2023)\n\n\n\n\n\n\n\nBounding boxes and rectangles crossing the antimeridean and validity on the sphere. Source: E. Pebesma & Bivand (2023)\n\n\n\n\n\n\nFigure 3.1: Particularities of spherical geometries\n\n\n\n\n3.3.1 Switching between S2 and R2\nAlthough S2 is a more accurate way of performing spatial operations, not every operation is implemented fully yet. To switch between using GEOS (R2) or s2 you can do:\n\nsf_use_s2(FALSE)\n\nSpherical geometry (s2) switched off\n\n\n\n\n3.3.2 Operations on geodetic (unprojected) data\nWhen sf_use_s2() is FALSE, operations like st_area(), st_distance() and st_length() will compute on the geoid using GEOS instead of on the sphere, which is the default. The former is a slower computation.\nFor unary operations that receive a distance argument, such as st_buffer() the distance argument is taken in meters when sf_use_s2() is TRUE and in degrees when FALSE, which also gives a warning.\n\nIn case x has geodetic coordinates (lon/lat) and sf_use_s2() is TRUE, a numeric dist is taken as distance in meters and a units object in dist is converted to meters. In case x has geodetic coordinates (lon/lat) and sf_use_s2() is FALSE, a numeric dist is taken as degrees, and a units object in dist is converted to arc_degree (and warnings are issued). In case x does not have geodetic coordinates (projected) then numeric dist is assumed to have the units of the coordinates, and a units dist is converted to those if st_crs(x) is not NA.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#raster-arrays-and-data-cubes",
    "href": "lessons/session_3.html#raster-arrays-and-data-cubes",
    "title": "3  R-spatial ecosystem",
    "section": "3.4 Raster, arrays and data cubes",
    "text": "3.4 Raster, arrays and data cubes\n\n\n\nRaster types. Source: E. Pebesma & Bivand (2023)\n\n\nThe packages {stars} (E. Pebesma, 2024) and {terra} (Hijmans, 2024b) are the engines to handle raster datasets in R.\nDue to its performance, {terra} took a significant role in the spatial handling of raster data.\n\nlibrary(terra)\n\nterra 1.8.15\n\ntif = system.file(\"tif/L7_ETMs.tif\", package = \"stars\")\n(rast1 = rast(tif))\n\nclass       : SpatRaster \ndimensions  : 352, 349, 6  (nrow, ncol, nlyr)\nresolution  : 28.5, 28.5  (x, y)\nextent      : 288776.3, 298722.8, 9110729, 9120761  (xmin, xmax, ymin, ymax)\ncoord. ref. : SIRGAS 2000 / UTM zone 25S (EPSG:31985) \nsource      : L7_ETMs.tif \nnames       : L7_ETMs_1, L7_ETMs_2, L7_ETMs_3, L7_ETMs_4, L7_ETMs_5, L7_ETMs_6 \n\n\nNevertheless, the {stars} package is not only design to handle raster data, but mainly array representations (list of matrices), which makes it powerful for data cube representations, both as vector and raster representations.\n\nlibrary(stars)\n\nLoading required package: abind\n\n(rast2 = read_stars(tif))\n\nstars object with 3 dimensions and 1 attribute\nattribute(s):\n             Min. 1st Qu. Median     Mean 3rd Qu. Max.\nL7_ETMs.tif     1      54     69 68.91242      86  255\ndimension(s):\n     from  to  offset delta                     refsys point x/y\nx       1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE [x]\ny       1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE [y]\nband    1   6      NA    NA                         NA    NA    \n\n(rast3 = read_stars(c(tif,tif), along = \"time\"))\n\nstars object with 4 dimensions and 1 attribute\nattribute(s), summary of first 1e+05 cells:\n             Min. 1st Qu. Median    Mean 3rd Qu. Max.\nL7_ETMs.tif    47      65     76 77.3419      87  255\ndimension(s):\n     from  to  offset delta                     refsys point x/y\nx       1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE [x]\ny       1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE [y]\nband    1   6      NA    NA                         NA    NA    \ntime    1   2      NA    NA                         NA    NA    \n\n\nRaster-vector operations work well with both packages, where {terra} and {stars} can both interact with sf objects.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#further-reading",
    "href": "lessons/session_3.html#further-reading",
    "title": "3  R-spatial ecosystem",
    "section": "3.5 Further reading:",
    "text": "3.5 Further reading:\n\nSpatial data section, chapters 1-6 (E. Pebesma & Bivand, 2023)\nIntroduction to sf and stars chapter (E. Pebesma & Bivand, 2023)\nSpatial data with terra section (Hijmans, 2024a)\nSpherical geometry in sf using s2geometry vignette (E. Pebesma, 2018)\n{stars} articles in package documentation (E. Pebesma, 2024)\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_3.html#footnotes",
    "href": "lessons/session_3.html#footnotes",
    "title": "3  R-spatial ecosystem",
    "section": "",
    "text": "https://www.osgeo.org/projects/r-spatial/↩︎\nIn theory, but has not been implemented yet↩︎\nEven though a C++ implementation is in many cases faster, it is harder to understand, debug or modify.↩︎\nThe C++ s2geometry library was written by Google and is used in many of its products (e.g. Google Maps, Google Earth Engine, Bigquery GIS).↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>R-spatial ecosystem</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html",
    "href": "lessons/session_4.html",
    "title": "4  GIS: in-house and bridges",
    "section": "",
    "text": "4.1 Dedicated R packages\nThere are several packages in R that are specialised in particular spatial analysis methods so that you can do any analysis in R directly without resorting to external software. This is by all means not an exhaustive list of all the spatial capabilities in R, but just a sample to get you started.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>GIS: in-house and bridges</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#dedicated-r-packages",
    "href": "lessons/session_4.html#dedicated-r-packages",
    "title": "4  GIS: in-house and bridges",
    "section": "",
    "text": "4.1.1 Earth observation analytics and remote sensing\nRemote sensing and Earth observation has had a big boost recently, especially since the ability to work with data out-of-memory1. Several workflows have become available to work with EO data within R to harness the statistical and visualisation capabilities of the programming language. Further, packages that allow retreival of EO data from cloud services are also available.\n\nI. Statistical modelling and machine learning\nSeveral packages are available to work with raster data as we saw last session, including {stars} and {terra}. One of the main use cases of raster data is to perform machine learning or statistical modelling.\nResources available:\n\nHow to perform statisticall modelling with {stars}\nBasics of remote sensing and classification workflow with {terra}\n\n\n\nII. Cloud data and on-demand data cubes\nWith the advent of common standards and specifications such as the Spatio Temporal Asset Catalog (STAC), accessing data from the cloud has become much easier. Once data can be accessed in an standardised way, working with on-demand data cubes locally becomes a much easier process.\nThe package {rstac} provides the workforce to fetch STAC data. This package is the basis for other packages workflows to download data, to create data cubes, or to do it all at once.\n Here you will find the package documentation.\nAnother interesting package is {rsi}, which stands for remote sensing indices. The package basically obtains data using {rstac} but also connects to the Awesome Spectral Indices catalogue to fetch standardised ways to compute popular spectral indices on your data.\n Resources for {rsi}:\n\nPackage documentation\nBlogpost: An overview of the rsi R package for retrieving satellite imagery and calculating spectral indices by Rydzik (2024)\n\nFinally, the creation of on-demand data cubes is taken care of in R using the {gdalcubes} package. With this package you can create data cubes from cloud resources or local files, apply data cube operations (apply functions over dimensions, filtering, computing statistics with reductions), extract time series, create training data for machine learning.\n Resources for {gdalcubes}:\n\nPackage documentation\nWorkshop: Analyzing satellite image collections on public cloud platforms with R\n\n\n\nIII. All-in-one solution\nTo concentrate all the efforts of fetching data from the cloud, creating on-demand data cubes, and performing statistical modelling or applying machine learning algorithms to the data, the {sits} package was created. It build upon the packages shown above and it can be seen as an all-in-one solution that simplifies the usage of satellite imagery time series. The main focus is of course on time series analysis, therefore taking the time component into account for the modelling.\nA typical workflow in {sits} would look like this:\n\n\n\nUsing time series for land classification. Source: Câmara et al. (2023)\n\n\n Resources for {sits}:\n\nBook: sits: Satellite Image Time Series Analysis on Earth Observation Data Cubes\n\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\n\nWe will explore the {gdalcubes} package in the hands-on part of this section. To do so, we follow the example from the STAC across Languages.\n\nInstall the packages.\n\n\ninstall.packages(\"rstac\")\ninstall.packages(\"gdalcubes\")\n\n\nCall the necessary libraries\n\n\nlibrary(rstac)\nlibrary(gdalcubes)\nlibrary(sf)\nlibrary(tidyverse)\n\n\nSet STAC collection\n\n\napi_url = \"https://earth-search.aws.element84.com/v1\"\nclient = stac(api_url)\ncollections(client) |&gt; get_request()\n\n\nDefine query variables\n\n\n# collection ID\ncollection = 'sentinel-2-l2a'\n# coordinates\nlon = # add your longitude coordinate of interest\nlat = # add your latitude coordinate of interest\npoint = st_point(c(lon, lat))\n# date range\ntime_extent = c(\"1970-05-01\", \"1980-10-01\") # change times to your interest\ncloud_cover_min = 40\n\n\nFetch the data\n\n\nitems = client  |&gt; \n  stac_search(\n      collections = collection,\n      intersects = point, \n      datetime = paste0(time_extent,\"T00:00:00Z\", collapse = \"/\"),\n      limit = 100\n    ) |&gt; \n  post_request() |&gt; \n  items_filter(\n    filter_fn = function(x) {x$properties$`eo:cloud_cover` &lt; cloud_cover_min}\n  )\nitems_length(items)\n\n\nView items as an sf\n\n\n# we add an extra column to be able to subset the original item list\nitems_df = items_as_sf(items) |&gt; \n  mutate(fid = row_number())\n# wrap function around st_as_sf and as_tibble just for nicer printing\nst_as_sf(as_tibble(items_df))\n\n\nSet up a bounding box around lat/long coordinates\n\n\nbbox = point |&gt; \n  st_sfc(crs = 4326) |&gt; \n  st_buffer(5000, endCapStyle = \"SQUARE\") |&gt; \n  st_transform(unique(items_df$`proj:epsg`)) |&gt; \n  st_bbox()\n\n\nCreate a data cube\n\n\nassets = c(\"red\",\"green\",\"blue\",\"nir\",\"scl\")\ncol = stac_image_collection(items$features, asset_names = assets)\nextent = list(\n  t0 = time_extent[1], t1 = time_extent[2],\n  left = bbox[\"xmin\"], bottom = bbox[\"ymin\"], \n  right = bbox[\"xmax\"], top = bbox[\"ymax\"]\n)\nview = cube_view(\n  srs = paste0(\"epsg:\", unique(items_df$`proj:epsg`)),   \n  extent = extent,\n  dx = 100, dy = 100, dt = \"P1D\",\n  aggregation = \"median\",\n  resampling = \"bilinear\"\n)\n# Create a cloud mask\ns2_mask = image_mask(\"scl\", values = c(3,8,9))\ncube = raster_cube(col, view, mask = s2_mask)\ncube\n\n\nCompute the NDVI\n\n\ncube_ndvi = raster_cube(col, view) |&gt; \n  select_bands(c(\"red\",\"nir\")) |&gt; \n  apply_pixel(c(\"(nir-red)/(nir+red)\"), names=\"NDVI\") \n\n\nVisualise the data\n\n\ngdalcubes_options(parallel = 4, cache = TRUE) \n## Perform an RGB composition\nrgb = cube |&gt; \n    select_bands(c(\"blue\",\"green\",\"red\")) |&gt; \n    reduce_time(c(\"median(blue)\", \"median(green)\", \"median(red)\")) \nrgb |&gt; \n    plot(rgb = 3:1) \n\n## Visualise monthly NDVI values\ncube_ndvi |&gt; \n  select_bands(\"NDVI\") |&gt; \n  aggregate_time(\"P1M\", \"mean\") |&gt; \n  plot()\n\nEXTRA: turn this workflow into a function that takes as parameters the lat, long and time inputs. It should output either the RGB plot or the NDVI plots depending on another parameter given by the user.\n\n\n\n\n\n\n4.1.2 Spatial statistics\nR is well know for its statistical capabilities, and spatial statistics is no exception. Several packages allow for full statistical analysis workflows like:\n\npoint pattern analysis using {spatstat}\n\nPackage resources\nChapter: Point Pattern Analysis in E. Pebesma & Bivand (2023)\n\ninterpolation and geostatistics with {gstat}\n\nChapter: Spatial Interpolation in E. Pebesma & Bivand (2023)\nPackage reference\n\nautocorrelation and spatial dependence with {spdep} and {rgeoda}\n\nChapter: Proximity and Areal Data in E. Pebesma & Bivand (2023)\nChapter: Measures of Spatial Autocorrelation in E. Pebesma & Bivand (2023)\n{rgeoda}package documentation\n{spdep} package documentation\nTidyverse friendly package {sfdep} documentation\n\n… many others (see further reading)\n\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\n\nHere we will perform some exploratory data analysis as shown in the documentation of the {rgeoda} package. This is based on the tutorial on the {rgeoda} package website.\n\nInstall packages\n\n\ninstall.packages(\"rgeoda\")\ninstall.packages(\"patchwork\")\ninstall.packages(\"sfdep\")\n\n\nLoad packages\n\n\nlibrary(sfdep)\nlibrary(rgeoda)\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(patchwork)\n\n\nView the data to analyse\n\n\nplot(guerry)\n\n\nCompute local indicators of spatial association (LISA) for the variable “Population per Crime against persons”\n\n\nqueen_w = queen_weights(guerry)\nlisa = rgeoda::local_moran(queen_w,  guerry['crime_pers'])\n\n\nCompute LISA clusters and p-values - Locan Moran\n\n\nguerry_lisa = guerry |&gt; \n  mutate(\n    lisa_clusters = as.factor(lisa_clusters(lisa)),\n    lisa_p = lisa_pvalues(lisa)\n  )\n\n\nCreate a Local Moran and significance map\n\n\n## Local Moran\nlisa_colors = lisa_colors(lisa)\nlisa_labels = lisa_labels(lisa)\n\nmoran = ggplot(guerry_lisa) +\n  geom_sf(aes(fill = lisa_clusters)) +\n  scale_fill_manual(\"\", values = lisa_colors, labels = lisa_labels) +\n  ggtitle(glue::glue(\"Local Moran Map of crime_pers\")) +\n  theme_void()\n\n## Significance\np_labels = rev(c(\"Not significant\", \"p &lt;= 0.05\", \"p &lt;= 0.01\", \"p &lt;= 0.001\"))\np_colors = rev(c(\"#eeeeee\", \"#84f576\", \"#53c53c\", \"#348124\"))\np_th = c(0, 0.001, 0.01, 0.05, 1)\n\nsign = ggplot(guerry_lisa) +\n  geom_sf(aes(fill = cut(lisa_p, p_th))) +\n  scale_fill_manual(\"\", values = p_colors, labels = p_labels) +\n  ggtitle(glue::glue(\"Significance Map of crime_pers\")) +\n  theme_void()\n\nmoran + sign\n\nEXTRA: turn this workflow into a function that accepts the variable to compute the LISA analysis as input and outputs the final plots.\n\n\n\n\n\n4.1.3 Spatial network analysis\nWorking with spatial networks in R used to be a bit of a difficult taks before the package {sfnetworks} arrived. The aim of the package is to bridge between {sf} and {tidygraph} a tidy wrapper of the C++ {igraph} library which is used very often for network analysis.\nWith {sfnetworks} you can perform several tasks such as:\n\ncreating networks from points and lines\nnetwork cleaning\nfinding shortest paths\nroute optimisation\nclosest facility analysis\ncreating catchment areas\nzoning networks based on their connectivity\n…\n\nIt started as an assignment for an R course in an effort to find an open source solution to the ArcGIS network analysis capabilities and is now downloaded over 2 thousand times a month!\n I recommend you to work with the development version (here are the docs).\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\n\nWe will create a shortest facility analysis workflow with {sfnetworks}. This is mostly based on the package documentation, specially the vignette: Routing on spatial networks\n\nInstall packages\n\n\nremotes::install_github(\"luukvdmeer/sfnetworks\")\ninstall.packages(\"tidygraph\")\ninstall.packages(\"ggraph\")\ninstall.packages(\"dodgr\")\n\n\nCall the libraries\n\n\nlibrary(sf)\nlibrary(sfnetworks)\nlibrary(tidygraph)\nlibrary(tidyverse)\nlibrary(ggraph)\nlibrary(dodgr)\n\n\nCreate an undirected spatial network and visualise it\n\n\nsfn = as_sfnetwork(roxel, directed = FALSE) |&gt; \n  st_transform(3035)\nplot(sfn)\n\n\nCreate random facilities and sites, map them to network indices\n\n\nset.seed(9284)\nbbox = st_convex_hull(st_combine(sfn))\nrdm_fac = st_sample(bbox, 5) \n## assign node values for plotting\nrdm_fac_nodes = rdm_fac |&gt; \n  st_as_sf() |&gt; \n  mutate(from = st_nearest_feature(rdm_fac, st_as_sf(sfn, \"nodes\")))\nrdm_sites = st_sample(bbox, 50)\n\n\nCompute shortest paths between facilities and their closest sites\n\n\npaths = st_network_paths(\n  sfn,\n  from = rdm_fac,\n  to = rdm_sites,\n  # use dodgr for many to many calculations\n  router = \"dodgr\"\n) |&gt; \n  group_by(to) |&gt; \n  filter(cost == min(cost))\n\n\nVisualise the shortest trip to the closes facility\n\n\nggraph(sfn, layout = \"sf\") +\n  geom_edge_sf(color = \"grey\") +\n  geom_node_sf(color = \"grey\") +\n  geom_sf(\n    data = paths,\n    aes(color = as.factor(from)),\n    linewidth = 1,\n    show.legend = FALSE\n  ) +\n  geom_sf(data = rdm_sites, color = \"black\", size = 1) +\n  geom_sf(\n    data = rdm_fac_nodes, \n    aes(fill = as.factor(from)),\n    size = 3,\n    pch = 21,\n    show.legend = FALSE\n  ) +\n  theme_void()\n\nEXTRA: turn this workflow into a function that receives the facilities, the sites and the network as inputs and outputs the final plot.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>GIS: in-house and bridges</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#bridges-to-external-software",
    "href": "lessons/session_4.html#bridges-to-external-software",
    "title": "4  GIS: in-house and bridges",
    "section": "4.2 Bridges to external software",
    "text": "4.2 Bridges to external software\nOf course, you can also connect to external GIS software to perform operations in R. Why would you want to do that? One good reason is to automate your workflows. Instead of following a click, click, click sequence, you can have your process in a coded written form that allows you to remember what you did as it is written and documented, but also perform the same process over and over via automation.\n\n4.2.1 QGIS\nOne of the best bridges to GIS with R out there is the {qgisprocess} package, which wraps around the “qgis process” command line. There is also a {qgis} package with the same idea but does a function per algorithm. It does not only give you access to native QGIS processing tools but also to any other add-on you have made available via your QGIS installation including plug-ins. That means, GRASS GIS, GDAL, SAGA are fully available to you via inside R with one package!\n Resources to bridge with QGIS\n\n{qgisprocess} package documentation\n{qgis} package documentation\nSection in Bridges to GIS software in Lovelace et al. (2019)\nPresentation at UseR! 2024 by Floris Vanderhaeghe for more info on {qgis} and {qgisprocess}\n\nNaturally, for this to work, you will need a QGIS installation. The package will try to find your installation automatically on your first run. However, you can also pass a custom path if you have multiple installations.\nDepending on your QGIS configuration, you will have access to different providers. You can look at what is available to you with qgis_providers().\n\n\n\n\n\n\n4.2.2 SAGA GIS\nYou also have individual bridges to GIS software naturally. If you are interested in geomorphology and hydrology, you might be very familiar with SAGA GIS. You can access SAGA algorithms via QGIS, but if you don’t have that linked or if you rather use a package with less dependencies, then {Rsagacmd} is for you. There is also the {RSAGA} package, however, this does not have so good documentation, and its development seems a bit paused.\n Resources for SAGA GIS bridges with R\n\nPackage documentation for {Rsagacmd}\nSection in Bridges to GIS software in Lovelace et al. (2019)\nThe GitHub repository of the {RSAGA} package\nA package I built to automise my workflows based on {RSAGA}\n\nAgain, you will need to have a SAGA GIS installation or point the package to the installation path of the SAGA GIS version you would like to use.\n\n\n4.2.3 GRASS GIS\nDoes anyone know what GRASS2 stands for?\nGRASS GIS has been around since the 80s and is one of the most powerful GIS out there. It has been ahead of its time for so long and it keeps up-to-date with current GIS trends. Its community of developers and users is also thriving, even having annual workshops that allow the further development of the tools supported.\nIt is a core part of the OSGeo suite of sofware, available in loads of languages, has really good cloud-support and as one of the core members, Vero Andreo always likes to say: it rocks!\n Resources to work with GRASS GIS\n\n{rgrass} package documentation\nTutorial: Get started with GRASS & R: the rgrass package by Andreo (2024)\nPresentation at UseR! 2024 by Vero Andreo (core member of GRASS GIS)\nSection in Bridges to GIS software in Lovelace et al. (2019)\nModernizing the R-GRASS interface: confronting barn-raised OSGeo libraries and the evolving R.*spatial package ecosystem by R. Bivand (2022)\n\nNaturally, you will need an installation of GRASS to be able to run the algorithms with this package.\n\n\n4.2.4 Google Earth Engine (GEE)\nBindings to GEE are available via the {rgee} package. The efforts towards this connection were driven by a former student here at PLUS! It does not only have now the connection to GEE but also functions that build on top of it and a book with good documentation.\n\n\n\n\n\n\n\n\nGEE binding\n\n\n\n\n\n\n\nExtra functions\n\n\n\n\n\n\n\nBook\n\n\n\n\n\n\nFigure 4.1: RGEE package bundle\n\n\n\nThis bridge of course requires you to have a Google Earth Engine account that will allow you to authenticate. The documentation of the package has all the required steps to get started.\n\n\n4.2.5 R-ArcGIS Bridge\nESRI has also made efforts to connect to open source software. You already know how to connect ArcGIS to Python, using the arcpy interface. For R, ESRI has created a bundle of packages that, when you have ArcGIS Pro and a valid license, you can use to run their geoprocessing tools.\n Here you can find the documentation to install and quick start with these packages.\n\n\n\n\n\n\nDisclaimer\n\n\n\nI will not support your use of proprietary software in this course, but if you are interested and even if you would like to use it in your project, feel free to do so.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>GIS: in-house and bridges</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#hands-on",
    "href": "lessons/session_4.html#hands-on",
    "title": "4  GIS: in-house and bridges",
    "section": "4.3 Hands-on",
    "text": "4.3 Hands-on\n\n\n\n\n\n\nREADME\n\n\n\nPick one of the “💻 Code at Work: Your Turn to Execute” sections you are most interested in and work through the code.\nTry to understand what the functions are doing, read the docs and get familiar with the packages and workflows.\nThere is an extra task at the end of each to automate the workflow by wrapping it in a function. Make sure to do this step, as we will use the function you create next class.\n\nExploring other packages\nIf you feel like exploring other packages outside of the samples I gave or one of the bridges to external GIS software, feel free to do so. Use the materials provided under each section!\nI recommend to play with the bridges if you already have the software installed and you are familiar with it, otherwise it might take too long for today’s class. You would also need to have a workflow inside a function by the end of the class.\nYou don’t need to submit today’s work, but save it for next class!",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>GIS: in-house and bridges</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#further-reading",
    "href": "lessons/session_4.html#further-reading",
    "title": "4  GIS: in-house and bridges",
    "section": "4.4 Further reading:",
    "text": "4.4 Further reading:\n\nModels for spatial data section, chapters 10-15 (E. Pebesma & Bivand, 2023)\nStatistical learning chapter (Lovelace et al., 2019)\nBridges to GIS software chapter (Lovelace et al., 2019)\nRemote sensing in R discussion on R-Spatial organization on GitHub\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>GIS: in-house and bridges</span>"
    ]
  },
  {
    "objectID": "lessons/session_4.html#footnotes",
    "href": "lessons/session_4.html#footnotes",
    "title": "4  GIS: in-house and bridges",
    "section": "",
    "text": "R has limited memory issues and working with large raster datasets used to be difficult.↩︎\nGeographic Resources Analysis Support System↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>GIS: in-house and bridges</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html",
    "href": "lessons/session_5.html",
    "title": "5  R package development",
    "section": "",
    "text": "5.1 R packages\nSo why should you write a package?\nPackage forms\nThe set of files you get in your computer when you install a package are different to the ones you work with when you develop its source code. When you build your package, it is compressed into a single file called a bundle with extension .tar.gz. The way CRAN distributes packages is in their binary form. This is also a single file but unlike a bundle, it is platform specific.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html#r-packages",
    "href": "lessons/session_5.html#r-packages",
    "title": "5  R package development",
    "section": "",
    "text": "An R package is the fundamental unit of shareable code1.\n\n\n\nto share your code with others\nto share data with others (e.g. {spData})\nto automate your workflows (e.g. {loreabad6::terrain})\nto document your work (using vignettes, e.g. Loiseau et al. (2020) with {ecorar})\nto become a better programmer!\n\n\n\n\n\n\n\n\n\nFigure 5.1: Package forms: source vs. bundled vs. binary. Source: Hadley Wickham (2023)",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html#basic-r-package-structure",
    "href": "lessons/session_5.html#basic-r-package-structure",
    "title": "5  R package development",
    "section": "5.2 Basic R package structure",
    "text": "5.2 Basic R package structure\n\n\n\n\n\n\nFigure 5.2: Package development - basic structure by Meyer (2022)",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html#requirements-and-good-practice",
    "href": "lessons/session_5.html#requirements-and-good-practice",
    "title": "5  R package development",
    "section": "5.3 Requirements and good practice",
    "text": "5.3 Requirements and good practice\nWe will go through some important elements of an R package and some advice and good practice for package development. This is by all means not a comprehensive list. For a better overview and also to get much more in depth into package development, you have the “R Packages” book by Hadley Wickham (2023).\n\n5.3.1 Metadata\nInformation on your package is stored in the package metadata. The DESCRIPTION file is the place where you will find the name of the package, its description, maintainers, version, dependencies, license, etc.\n\n\nA DESCRIPTION file in the wild.\n\n\n\nPackage: mypackage\nTitle: What the Package Does (One Line, Title Case)\nVersion: 0.0.0.9000\nAuthors@R: \n    person(\"First\", \"Last\", , \"first.last@example.com\",\n    role = c(\"aut\", \"cre\"))\nDescription: What the package does (one paragraph).\nLicense: `use_mit_license()`, `use_gpl3_license()` or \n    friends to pick a license\nEncoding: UTF-8\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.3.2\n\n\nFigure 5.3: Basic DESCRIPTION file structure. Source: Hadley Wickham (2023).\n\n\n\n\n\n\n\n\n\nA note on Licenses\n\n\n\nFrom Lucas van der Meer workshop on R package creation:\n\nEvery released open-source project should have a license! Without a license, the default copyright laws apply, meaning that you retain all rights to your source code and no one may reproduce, distribute, or create derivative works from your work. Also, a license specifies that the software is released without any kind of warranty. Your are basically telling people: “Do with it what you want, but don’t sue me if anything goes wrong!”. Many licenses will also require people to attribute you once they copy parts of your code.\n\nThis page has a good overview of Licenses to help you choose one for your project.\n\n\n\n\n5.3.2 Tests\nUnit testing is a way to validate expected behavior of isolated source code. Integration testing is a way to test multiple parts of a software system as a group. In whatever form, testing is a vital for package development as it ensures your code does what you want it to do.\n\n\n\nTesting gives you the following benefits: - fewer bugs - better code structure - robust code\n The package {testthat} is your companion for R test writing.\n\n\n5.3.3 Documentation\nYou have learned that when you do ?functionname you can access the help page of a specific function in a package.\n\n\nA documented function in the wild.\n\n?sfnetworks::st_network_travel\n\nWhen you develop a package, writing this documentation is your job! 🎉\nAs you just saw, your code and your documentation are located in the same R file. That way, if you do any changes to your function, you will (hopefully) remember to update the documentation too!\n The package {roxygen2} will help you write documentation.\nPackage website\nWriting documentation for your functions is going to be a very good basis for you to build a website for your package.\n\n\nA documented function part of the package website… in the wild.\nYour website can also host your package vignettes (which are also part of the package itself). Vignettes are useful to show the basic functionalities of your package, specially if there are certain functions that are used together for a specific workflow. They can be written as a Quarto article (which you are familiar with already!). They are shown as articles on the website of the package.\n The package {pkgdown} will help you build your package website.\n\n\n5.3.4 Distribution\nShould my package go to CRAN?\nCRAN as you know is the repository for R packages. Here, your package will be reviewed by other people before its first release. This can be a bit of a longer process since some minimum requirements are expected. These include that your package passes checks in different R versions and OS platforms, that your examples, vignettes, tests run completely smooth without errors, etc.\nOnce accepted, you will have certain responsibilities as package maintainer. CRAN runs automatic checks of your package, and if for some reason your package does not pass these checks, you will get a notice to fix the errors or your package will not be any more on CRAN. The usual time is two weeks.\nUsually, packages that go to CRAN are those that provide something novel and new to the ecosystem of available packages. If you have created a package to reproduce a very specific workflow for your project, or to accompany a research paper, this would typically not be submitted to CRAN. Those packages are usually in other type of repositories like GitHub.\nVersion control for R packages\n\n\n\n\n\n\nFigure 5.4: Basic git workflow by Allison Horst\n\n\n\nYou are already aware, through the various hints and practicals in the previous sessions, that GitHub or other platforms for version control are commonly used to host R packages. Version control is commonly used in software development to keep track of the changes one does to their code, and to easily revert to previous versions when something breaks.\nMost R packages have a GitHub or GitLab repository where the development version of the work is hosted, while also being submitted to CRAN. Having your package on GitHub or any other platform makes it easier for other people to browse the code, and is also a useful tool to collect issues or open up discussions around the package. In addition, tools like GitHub pages allow you to host the documentation of your package in a fairly easy manner.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html#your-first-r-package",
    "href": "lessons/session_5.html#your-first-r-package",
    "title": "5  R package development",
    "section": "5.4 Your first R package!",
    "text": "5.4 Your first R package!\nIn this section, you will be creating your first (maybe?) R package. We will call this package yournameR, so for me it will be lorenaR.\nWe will be using the function you wrote last week as the R code to package, so make sure to have it on hand.\n\n\n\n\n\n\n💻 Code at Work: Your Turn to Execute\n\n\n\n\nInstall the relevant R packages\n\n\ninstall.packages(\"devtools\")\ninstall.packages(\"pkgdown\")\n\n\nCreate a new RStudio project with a package structure\n\n\nGo to File/New Project\nSelect New Directory -&gt; R Package\nAdd your package name, select a directory to save (avoid a directory that is already a RStudio project).\n\nYou can alternative create this from the console using devtools::create_package(\"path_to_dir\")\n\nLoad the necessary packages in the new RStudio session\n\n\nlibrary(devtools)\nlibrary(usethis) # installed with devtools\nlibrary(pkgdown)\n\n\nEdit the DESCRIPTION file\nOpen a new R script and copy the code for your function from last session. Save it in the R/ directory.\nRun load_all() and test your function!\nAdd dependencies\n\nThe functions you wrote last week all depend on other packages. To import those libraries into your package, you can use the function below from {usethis}:\n\nuse_package(\"packagename\")\n\n\nDocument your function.\n\nYou can use markdown syntax. At the top of the R file fill in the following fields. Don’t forget to specify the functions you used from other packages in the @importFrom field\n#' Write here a title of your function\n#'\n#' Write here a short description of your function.\n#'\n#' @param name Describe here what the name parameter does. \n#'\n#' @return Describe here what the function returns.\n#'\n#' @examples\n#' Give here an example of how to use the function.\n#' \n#' @importFrom package function_name\n#'\n#' @export\n\nRun document().\n\nThis will parse your function documentation and store it in a new directory called man/. It will also automatically update your NAMESPACE file to list your function as an exported object of your package.\n\nAdd a License\n\nOnce you know which License you want to add, you can add it to your package using the {usethis} package functions use_*_license(). If you are still not versed in licensing, you can choose a permissive license, without too many restrictions (which are usually the go-to for open-source projects), such as Apache 2.0 or MIT.\n\nuse_apache_license()\n\nYou can also add the license to your README.md file with the text:\n## License\n\nCopyright 2025 [your name]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nCheck your package\n\nThe check() function will make sure that you have filled the metadata sections correctly, that you documented your functions properly, run examples, and ultimately check if the package can be installed.\nRunning check() often when developing your package is going to help you identify any bugs. When submitting your package to CRAN, your checks should be all clean!\n\nInstall your package\n\nRunning install() will allow you to install and use your package!\n\nExtras!\n\nIf you got up to here and you don’t want to go home yet, try the next tasks:\n\nWrite unit tests. You can get the basic setup using use_testthat() and use_test(yourfunctionname).\nWrite a vignette. Set it up using use_vignette(\"filename-of-the-vignette\")\nCreate a package website. You can use use_pkgdown() to set up the structure. You can view a local rendering with build_site().",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html#further-reading",
    "href": "lessons/session_5.html#further-reading",
    "title": "5  R package development",
    "section": "5.5 Further reading:",
    "text": "5.5 Further reading:\n\nThe Whole Game chapter in Hadley Wickham (2023) for a quick intro to a simple package. Read the whole book to dive deeper into R package development.\nPacakge structure and state chapter in Hadley Wickham (2023).\nLicensing chapter in Hadley Wickham (2023).\n“Sharing and organizing research products as R packages” by Vuorre & Crump (2020)\n“Understanding the Basics of Package Writing in R” by Meyer (2022)\n“Why your research deserves to be an R package” by Vreede (2023)\nPackage development cheatsheet\nCreate your first R package workshop at the Geoinformatics PhD seminar by Lucas van der Meer\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_5.html#footnotes",
    "href": "lessons/session_5.html#footnotes",
    "title": "5  R package development",
    "section": "",
    "text": "Hadley Wickham, R packages (2nd. edition)↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R package development</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html",
    "href": "lessons/session_6.html",
    "title": "6  Quarto dashboards",
    "section": "",
    "text": "6.1 What is a dashboard?\nA dashboard is a user interface that allows interaction with the content displayed. This goes beyond making a plot zoomable and have a tooltip, but it usually let’s the user customise views and change parameters to get different insights. Static dashboards provide a fixed view of data without frequent updates, while dynamic dashboards are updated frequently and allow more interaction.\nFrom a visualisation perspective, dashboards allow for further interactions with the data than what the creator of a static plot could have determined to show. It is very common to have such dashboard-like displays of spatial data, think for example of Google Earth Engine custom applications or ArcGIS dashboards and story-maps.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#what-is-a-dashboard",
    "href": "lessons/session_6.html#what-is-a-dashboard",
    "title": "6  Quarto dashboards",
    "section": "",
    "text": "6.1.1 When should I use Shiny?\nR has several tools for dashboard creation, with the most famous being Shiny. Then you might be wondering why this lesson is not about Shiny apps but rather about Quarto dashboards. Two reasons:\n\nQuarto dashboards are fairly new, so even though they might not have the popularity of Shiny, they are getting used more and more.\nQuarto dashboards are much easier to create and learn than using Shiny.\n\nThis by no means is to be interpret as a “don’t use Shiny”. Actually, the contrary. The more customisation you want to give to your dashboard and tools, the more you will be needing what Shiny apps offers. You can include Shiny inside your Quarto dashboards as a matter of fact.\n\n\n\nCriteria\nQuarto dashboards\nQuarto + Shiny\n\n\n\n\nAim\nLayout & organisation, limited interactivity\nReactivity & interactivity1\n\n\nHosting\nRuns without a server\nNeeds a server (e.g. Shinyapps.io)2\n\n\nPerformance\nFast (pre-rendered)\nSlower (dynamic computation)\n\n\nUpdates\nNeeds re-rendering\nReal time data updates possible\n\n\nAudience\nPassive viewers\nActive users\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you decide to use Shiny in your Quarto dashboard project and have problems with deploying with the server, write all the problems you encountered down. The Quarto + Shiny dashboard should still be able to built locally!",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#dashboard-basics",
    "href": "lessons/session_6.html#dashboard-basics",
    "title": "6  Quarto dashboards",
    "section": "6.2 Dashboard basics",
    "text": "6.2 Dashboard basics\nYour main guide to build a Quarto dashboard will be (surprise, surprise) the Quarto dashboard documentation. See the further reading section for more resources.\n\n\n\n\n\n\n\n\n\n\n\n\nNavigation bar\nprovides navigation between pages\n\n\nPages\nuseful to divide data for more complex stories\n\n\nCards\nfundamental unit of quarto dashboards, containers of all data elements; cards correspond to code chunks that return an output\n\n\nRows/columns\ndefine where each card is placed in the dashboard\n\n\nTabsets\ngroups of rows and columns to further divide content\n\n\nSidebars\ncollapsible vertical panels for inputs; used for filters, tick boxes, etc.\n\n\nToolbars\nhorizontal panels for inputs; used for filters, tick boxes, etc.\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.1: Dashboard components. Source: Çetinkaya-Rundel (2024)",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#packages-for-interactivity",
    "href": "lessons/session_6.html#packages-for-interactivity",
    "title": "6  Quarto dashboards",
    "section": "6.3 Packages for interactivity",
    "text": "6.3 Packages for interactivity\nMost of the packages that allow interactivity in R are based on JavaScript. This interaction is enabled in R due to the htmlwidgets tools. You will find some of the packages based on this tool under its documentation.\nYou can also link this widgets with packages such as {crosstalk}. Not every widget is “crosstalk-enabled” but maybe more and more will be available in the future.\n\n\n\n\n\nCrosstalk schema from {cubble} documentation\n\n\nHere you have a non-exhaustive overview of some of the packages that you might find most useful.",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#dashboard-example",
    "href": "lessons/session_6.html#dashboard-example",
    "title": "6  Quarto dashboards",
    "section": "6.4 Dashboard example",
    "text": "6.4 Dashboard example\n\nDashboard deployed on GitHub pages | Quarto raw file",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#publish-your-dashboard",
    "href": "lessons/session_6.html#publish-your-dashboard",
    "title": "6  Quarto dashboards",
    "section": "6.5 Publish your dashboard!",
    "text": "6.5 Publish your dashboard!\nThe easiest way (at least for me) to publish any HTML content you create with Quarto is via GitHub pages. A free account let’s you create a website from a public repository in a very easy way.\n\n6.5.1 Requirements\n\nGet a Github account\nInstall git - get some guidance here.\nConfigure git on your computer - see the steps here.\nSet up HTTPS or SSH protocols - see here - sections 9 to 11\n\n\n\n6.5.2 Step by step guide\n\nStep 1: Create a new GitHub repository\n\nGo to your GitHub account &gt; Repositories &gt; New\nGive it a name and a description and click “Create repository”\n\n\n\nStep 1: Prepare Your Quarto Project\n\nOpen RStudio and create a new Quarto project:\n\nGo to File &gt; New Project &gt; Version Control &gt; Git.\nGo back to your GitHub repository and copy the “https://…” displayed under Quick setup\n\nAdd content to your dashboard:\n\nCreate an empty index.qmd file (or create additional .qmd files).\nInclude your visualisations, tables, text, etc.\nWhen you have one single html file to show, then it is useful to call it index since this will be automatically be recognised as the landing page of your site.\nIf you have more complex websites (created e.g. with a Quarto website project), then the .qmd files are mostly organised inside a _quarto.yaml file. See more information on Quarto websites here.\n\n\n\n\nStep 3: Render Your Quarto Dashboard\n\nRender the project to generate the .html file with Render\n\n\n\nStep 4: Push Your Project to GitHub\n\nCommit and push the project to GitHub:\ngit add .\ngit commit -m \"Initial commit\"\ngit branch -M main\ngit push origin main\n\n\n\nStep 5: Configure GitHub Pages\n\nGo to your repository on GitHub.\nNavigate to Settings &gt; Pages.\nUnder Source, select:\n\nBranch: main (or your default branch).\nFolder: / (root) if your rendered files are in the root directory, or docs/ if you’ve configured Quarto to save the site in a docs folder.\n\nSave the settings. GitHub Pages will generate a public URL for your site.\n\nThis might take some time, be patient! Once the green tick shows next to the commit message, then it is ready.\n\n\n\n\nStep 6: Access Your Published Dashboard\n\nVisit the URL provided by GitHub Pages (usually https://&lt;username&gt;.github.io/&lt;repository-name&gt;).",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#further-reading",
    "href": "lessons/session_6.html#further-reading",
    "title": "6  Quarto dashboards",
    "section": "6.6 Further reading:",
    "text": "6.6 Further reading:\n\nQuarto dashboards\nQuarto dashboards video series\nQuarto dashboards with Shiny\nMastering Shiny book by Wickham (2021)\nShiny basics tutorial\nDashboards: Using R to create actionable science\nUCSB Faculty Seminar Series: Grow Your Data & Team Science Skills: Quarto dashboards\nHappy Git and GitHub for the UseR book by Jenny Bryan (2025)\nUsing Git and GitHub in RStudio cheatsheet\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "lessons/session_6.html#footnotes",
    "href": "lessons/session_6.html#footnotes",
    "title": "6  Quarto dashboards",
    "section": "",
    "text": "Key concepts for Shiny reactivity and interactivity\n\n\n\n\n\n\n\n\nAspect\nReactivity\nInteractivity\n\n\n\n\nDefinition\nInternal mechanism that updates outputs based on input changes.\nThe user’s ability to interact with the app through inputs.\n\n\nFocus\nLogic and relationships between inputs, outputs, and expressions.\nThe experience of manipulating and exploring the app.\n\n\nExample\nA plot updates automatically when an input changes.\nA user uses sliders, buttons, or checkboxes to customize the plot.\n\n\nDependency\nDefined by reactive inputs and outputs.\nEnabled by UI elements (e.g., sliders, dropdowns).\n\n\n\n↩︎\nFree for smaller projects, otherwise has paid options. See an overview of deployment options here↩︎",
    "crumbs": [
      "Lessons",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Quarto dashboards</span>"
    ]
  },
  {
    "objectID": "practicals/Practical1/Practical1-Getting-Started-R.html",
    "href": "practicals/Practical1/Practical1-Getting-Started-R.html",
    "title": "Practical 1",
    "section": "",
    "text": "Self-paced introduction to R\nIn this course you will learn the very basics of R, from installation, working with files and projects to loading and exploring your first dataset in R. It should take you around 1h30 to 2h to complete the course.",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical1/Practical1-Getting-Started-R.html#self-paced-introduction-to-r",
    "href": "practicals/Practical1/Practical1-Getting-Started-R.html#self-paced-introduction-to-r",
    "title": "Practical 1",
    "section": "",
    "text": "Go to the following link in R for the Rest of Us - Getting Started with R.\nPlease register to the course as indicated. This introductory course is free of charge.\nBy the end of the course you should receive a certificate. Upload the certificate to the Blackboard Assignment.\n\n\nPotential problems\nIf you run into issues, make sure you read the comments under the videos. It is very likely that your questions is already answered there.\nTake a look at the dealing with errors section right here as well. Make sure you read well the error messages you receive.\nIf you still run into issues, post them on the Blackboard forum for R and we will go through any problems together.\n\n\n\n\n\n\nImportant\n\n\n\nIf by some weird reason you don’t manage to complete the course by the deadline time submit some sentences with how far you got, a screenshot of your progress and the specific error you encountered.\n\n\n\n\nMore info on software installation\nLessons 2 and 3 will show you how to install R and RStudio. If you are working at the GI-Lab you should already have the software on the machines. If you plan to work on your own laptop, then I recommend learning how to install these and to make sure you have the latest versions of the software.\nYou can find more information on installation here.\n\n\n\n\n\n\nImportant\n\n\n\nPlease make sure to also install Rtools since we will need it to install packages that compile from source.",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical1/Practical1-Getting-Started-R.html#interactively-learn-r-with-swirl-optional-but-recommended",
    "href": "practicals/Practical1/Practical1-Getting-Started-R.html#interactively-learn-r-with-swirl-optional-but-recommended",
    "title": "Practical 1",
    "section": "Interactively learn R with swirl (optional but recommended)",
    "text": "Interactively learn R with swirl (optional but recommended)\nSince you have gone through the fundamentals of R already, you can now learn or freshen up your R basics interactively via the swirl package.\n\nGo to the swirl website\nFollow the instructions to start interactive R courses from the R console.\n\nYou can skip steps 1 and 2, since you did this already in the course above.\n\nCheck Step 5 for instructions to download more courses, in different languages available at the Swirl Course Network.\n\n\n\n\n\n\n\nNote\n\n\n\nThis part of the practical is optional and you don’t need to prove completion. I do recommend you to test a couple of swirl modules though since we will get full hands-on in the next session.\n\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 1"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-Base-R.html",
    "href": "practicals/Practical2/Practical2-Base-R.html",
    "title": "Practical 2",
    "section": "",
    "text": "Part One: Setup\nEach of the following R chunks will cause an error and/or do the desired task incorrectly. Find the mistake, and correct it to complete the intended action.\nlower_case &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n\nupper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n\npunctuation &lt;- c(\".\", \",\", \"!\", \"?\", \"'\", \"\"\", \"(\", \")\", \" \", \"-\", \";\", \"—\")\n\nError in parse(text = input): &lt;text&gt;:3:56: unexpected string constant\n2: \n3: upper_case &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" \"I\"\n                                                          ^\nmy_symbols &lt;- cbind(lower_case, upper_case, punctuation)\n\nError: object 'lower_case' not found\nmy_symbols &lt;- dataframe(my_symbols)\n\nError in dataframe(my_symbols): could not find function \"dataframe\"\n\nnames(my_symbols) = Symbol\n\nError: object 'Symbol' not found\nlen &lt;- length(my_symbols)\n\nError: object 'my_symbols' not found\nmy_symbols%Num &lt;- 1:len\n\nError in parse(text = input): &lt;text&gt;:1:11: unexpected input\n1: my_symbols%Num &lt;- 1:len\n              ^",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-Base-R.html#part-one-setup",
    "href": "practicals/Practical2/Practical2-Base-R.html#part-one-setup",
    "title": "Practical 2",
    "section": "",
    "text": "Create vectors containing the upper case letters, lower case letters, and some punctuation marks.\n\n\n\nMake one long vector containing all the symbols.\n\n\n\nTurn the my_symbols vector into a data frame, with the variable name “Symbol”\n\n\n\nFind the total number of symbols we have in our data frame.\n\n\n\nCreate a new variable in your dataframe that assigns a number to each symbol.",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-Base-R.html#part-two-decoding-the-secret-message.",
    "href": "practicals/Practical2/Practical2-Base-R.html#part-two-decoding-the-secret-message.",
    "title": "Practical 2",
    "section": "Part Two: Decoding the secret message.",
    "text": "Part Two: Decoding the secret message.\nThis chunk (which should NOT have errors) will load up the encoded secret message as a vector:\n\ntop_secret &lt;- read.csv(\n  \"https://raw.githubusercontent.com/loreabad6/app-dev-gis/main/practicals/Practical2/Secret_Code_AppDev\", \n  header = TRUE)$x\n\nBy altering this top secret set of numbers, you will be able to create a message. Write your own code to complete the steps below.\n\nAdd 14 to every number (already done for you 😉)\n\n\ntop_secret &lt;- top_secret + 14\n\n\nMultiply every number by 18, then subtract 257.\n\n\n# write your solution to prompt 1\n\n\nExponentiate every number. (That is, do e^[number].)\n\n\n# write your solution to prompt 2\n\n\nSquare every number.\n\n\n# write your solution to prompt 3\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nHeadquarters has informed you that at this stage of decoding, there should be 1053 numbers in the secret message that are below 17.\n\n\nHint: This is what is called a “relational” comparison, where you compare an object to a number and R will give you a vector of TRUEs and FALSEs based on whether the comparison is / is not met. You can then use these TRUEs and FALSEs as numbers, since TRUE = 1 and FALSE = 0 in R land. This is called a Boolean variable type.\n\n# Write code to verify that there are 1053 numbers with values **below** 17\n\n\nTurn your vector of numbers into a matrix with 5 columns.\n\n\n# write your solution to prompt 4\n\n\nSeparately from your top_secret numbers, create a new vector called “evens” of all the even numbers between 1 and 428. That is, “evens” should contain 2, 4, 6, 8 …, 428.\n\n\n# write your solution to prompt 5\n\n\nSubtract the “evens” vector from the first column of your secret message matrix.\n\n\n# write your solution to prompt 6\n\n\nSubtract 100 from all numbers 18-24th rows of the 3rd column.\n\n\n# write your solution to prompt 7\n\n\nMultiply all numbers in the 4th and 5th column by 2.\n\n\n# write your solution to prompt 8\n\n\nTurn your matrix back into a vector.\n\n\n# write your solution to prompt 9\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nHeadquarters has informed you that at this stage of decoding, all numbers in indices 1000 and beyond are below 70.\n\n\nHint: Use a relational comparison similar to what you used in the last checkpoint, but here you will need to subset values from your vector! It may be helpful to think of below 100 as not equal to or greater than 70.\n\n# Write code to verify that indices 1000 and beyond have values **below** 70\n# should be 0!\n\n\nTake the square root of all numbers in indices 38 to 465.\n\n\n# write your solution to prompt 10\n\n\nRound all numbers to the nearest whole number.\n\n\n# write your solution to prompt 11\n\n\nReplace all instances of the number 39 with 20.\n\n\n# write your solution to prompt 12\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nHeadquarters has informed you that your final message should have 820 even numbers.\n\n\nHint: Checking for divisibility is an interesting operation that isn’t done much in R. Modulus is the operation you are interested in, where you are checking for whether the numbers are divisible by 2, with no remainder. See what you can find about modulus in R!\n\n# Code to verify how many even numbers are in your top_secret vector\n# Should be 820!",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical2/Practical2-Base-R.html#part-3-the-secret-message",
    "href": "practicals/Practical2/Practical2-Base-R.html#part-3-the-secret-message",
    "title": "Practical 2",
    "section": "Part 3: The secret message!",
    "text": "Part 3: The secret message!\nUse your final vector of numbers as indices for my_symbols to discover the final message!\nHint: to make your solution more legible, checkout the function cat(), you can access the help file by typing ?cat on your console.\n\n# write code to decode the message\n\nGoogle the message, if you do not recognize it, and find its title and author.\n\n\n\n\n\n\nSolution 🎉\n\n\n\nWrite the title and author here!\n\n\nUpload the .qmd doc and the rendered html to Blackboard (don’t forget to add all your teammates names!). The first team receives an extra point each in class participation 🏃\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 2"
    ]
  },
  {
    "objectID": "practicals/Practical3/Practical3-Writing-Functions.html",
    "href": "practicals/Practical3/Practical3-Writing-Functions.html",
    "title": "Practical 3",
    "section": "",
    "text": "Part One: Create your functions\nMany of the functions have been started for you below, but none of them are complete as-is.\nTest it by running the code below the function.\ndivide_and_round &lt;- function(nums){\n  \n  my_min &lt;- min(nums, na.rm = TRUE)\n  divided &lt;- nums/my_min\n  \n}\n\n\ntest &lt;- c(1:5, NA)\n\ndivide_and_round(test)\nno_nines_or_twelves &lt;- function(nums){\n  \n  check &lt;- !(nums %% 9 == 0 | nums %% 12 == 0)\n  \n}\n\ntest &lt;- c(1:10*5, NA)\n\nno_nines_or_twelves(test)\nInclude an optional argument called “start” which lets you choose where to start skipping; that is, if start = 1, we return the 1st value, 3rd, 5th, etc. and if start = 2, we return the 2nd, 4th, 6th, etc.\nevery_other &lt;- function(vec){\n  \n  if(start == 2){\n\n    \n  } else if(start == 1) {\n    \n    \n    \n    \n  }\n  \n}\n\ntest &lt;- c(1:10)\n\nevery_other(test)\n\nError in start == 2: comparison (==) is possible only for atomic and list types\n\nevery_other(test, start = 2)\n\nError in every_other(test, start = 2): unused argument (start = 2)\nBe sure to test your function.\nshorten &lt;- function(){\n\n  \n}",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical3/Practical3-Writing-Functions.html#part-one-create-your-functions",
    "href": "practicals/Practical3/Practical3-Writing-Functions.html#part-one-create-your-functions",
    "title": "Practical 3",
    "section": "",
    "text": "Write a function called divide_and_round(), which takes a number or vector of numbers, divides them all by their smallest value, and rounds the results to the nearest whole number.\n\n\n\n\nWrite a function called no_nines_or_twelves(), which takes a number or vector of numbers and returns TRUE if the number is NOT divisible by 9 or 12, FALSE otherwise.\n\n\n\nWrite a function called every_other() which takes a vector and returns every other value in the vector.\n\n\n\n\n\n\n\nHint 🔍\n\n\n\nYou could achieve this with a for-loop but there are definitely more efficient ways to do it!\n\n\n\n\n\nWrite a function called shorten() which takes a vector and keeps dropping the first value, until the sum of the vector is less than 350 Return the remaining values.\n\n\n\n\n\n\n\nHint 🔍\n\n\n\nYou probably want to either use the cumsum() function, or write a while() loop.",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical3/Practical3-Writing-Functions.html#part-two-your-functions-are-the-key",
    "href": "practicals/Practical3/Practical3-Writing-Functions.html#part-two-your-functions-are-the-key",
    "title": "Practical 3",
    "section": "Part Two: Your functions are the key",
    "text": "Part Two: Your functions are the key\n\nOnce you have written your four functions correctly, run the following code:\n\n\nmy_vec &lt;- c(39, 1.87, 48, 11, 8, 45, 21, 5, 12, 33, 9, 11, 108, 4, 18, 5, 16, 17, 8, 48, 27, 24, 4, 22, 12, 27, 23, 46, 42, 35, 15, 34, 36, 26, 18, 10, 18.21, 72.04, 36.9, 41.81, 29, 89.75, 34.03, 20.18, 48.74, 15.76, 31.86, 83.6, 43.55, 39.99, 23.55, 8.54, 24.71, 22.02, 9.71, 62.14, 35.46, 16.61, 15.66, 21.29, 30.52, 201.07, 45.81, 7.85, 30.13, 34.14, 22.62, 10.2, 6.02, 30.12, 10.64, 31.72, 24.57, 14.43, 43.37, 89.93, 44.72, 51.32, 13.62, 45.56, 22.96, 7.05, 29.99, 41.38, 26.59, 23.04, 19.82, 50.73, 39.56, 43.79, 30.22, 85.85, 5.78, 78.85, 29.52, 66.27, 44.06, 27.28, 24.43, 64.32, 3.35, 67.45, 46.72, 48.44, 48.65, 33.3, 40.28, 19.04)\n\nmy_vec &lt;- every_other(my_vec, start = 2)\n\nError in every_other(my_vec, start = 2): unused argument (start = 2)\n\nmy_vec &lt;- divide_and_round(my_vec)\nmy_vec &lt;- every_other(my_vec, start = 1)\n\nError in every_other(my_vec, start = 1): unused argument (start = 1)\n\nmy_vec &lt;- shorten(my_vec)\n\nError in shorten(my_vec): unused argument (my_vec)\n\nmy_vec &lt;- my_vec[no_nines_or_twelves(my_vec)]\n\nmy_vec &lt;- sort(my_vec)\n\nmy_vec\n\n  [1]   1.000000   1.791444   2.139037   2.139037   2.673797   2.673797\n  [7]   3.090909   3.219251   3.770053   4.197861   4.278075   4.278075\n [13]   4.566845   4.812834   5.192513   5.347594   5.454545   5.689840\n [19]   5.882353   5.882353   6.417112   6.417112   7.283422   7.716578\n [25]   8.021390   8.374332   8.427807   8.556150   8.882353   9.090909\n [31]   9.625668   9.625668   9.737968  10.181818  10.598930  10.791444\n [37]  11.229947  11.385027  11.764706  11.775401  12.096257  12.278075\n [43]  12.299465  12.320856  12.593583  12.834225  13.064171  13.139037\n [49]  13.213904  13.903743  14.219251  14.438503  14.438503  14.588235\n [55]  15.508021  15.786096  16.037433  16.106952  16.112299  16.160428\n [61]  16.320856  16.962567  17.037433  17.647059  17.807487  18.181818\n [67]  18.197861  18.256684  18.716578  18.962567  19.251337  19.732620\n [73]  20.855615  21.155080  21.385027  21.540107  22.128342  22.358289\n [79]  22.459893  23.192513  23.288770  23.417112  23.561497  23.914439\n [85]  24.064171  24.363636  24.497326  24.598930  24.983957  25.668449\n [91]  25.668449  25.903743  26.016043  26.064171  27.128342  27.443850\n [97]  33.229947  34.395722  35.438503  36.069519  38.524064  42.165775\n[103]  44.705882  45.909091  47.994652  48.090909  57.754011 107.524064\n\n\nIf you have done everything correctly, your final vector will be six numbers long. Google these six numbers to find a TV show as your final answer.\n\n\n\n\n\n\nSolution 🎉\n\n\n\nWrite the name of the TV show here.\n\n\nUpload the .qmd doc and the rendered html to Blackboard (don’t forget to add all your teammates names!). The first team receives an extra point each in class participation 🏃\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 3"
    ]
  },
  {
    "objectID": "practicals/Practical4/Practical4-DataViz.html",
    "href": "practicals/Practical4/Practical4-DataViz.html",
    "title": "Practical 4",
    "section": "",
    "text": "Data visualisation packages",
    "crumbs": [
      "Practicals",
      "Practical 4"
    ]
  },
  {
    "objectID": "practicals/Practical4/Practical4-DataViz.html#data-visualisation-packages",
    "href": "practicals/Practical4/Practical4-DataViz.html#data-visualisation-packages",
    "title": "Practical 4",
    "section": "",
    "text": "{ggplot2}\nPart of the tidyverse, ggplot2 is one of the go to packages for data visualisation in R.\nThere are plenty of tutorials out there on how to use ggplot2 for your data visualisation. Here is a very nice one by Cedric Scherer and another three-part one focused on maps by Mel Moreno and Mathieu Basille.\nYou will find native support to plot both sf (geom_sf()) and stars (raster; geom_stars()) objects.\nChoosing ggplot will allow you to use some of its many extensions. For example, the package {ggtext} let’s you customise colors in the text in your plot. For spatial elements such as north arrows and scales you can check out {ggspatial}.\nTo save your ggplot you can use the following:\n\nmymap = ggplot() +\n  geom_sf(...) +\n  theme(...)\n\nggsave(filename = \"path/to/your/plot/location/mymap.png\", plot = mymap,\n       width = 15, height = 10, units = \"cm\", dpi = 300) # adjust as necessary\n\n\n\n{tmap}\nAn R package for drawing thematic maps. This package tries to follow on the grammar of graphics principles of {ggplot2} but also provides a bit more flexibility. I personally use it for its versatility in switching between static and interactive, for its ease to build facet plots with free spatial axes and for the thought they put in particular cartography principles.\nVersion 4.0 has been cooking for a while and you will find the documentation here. You will also find a guide for making maps with {tmap} in the Geocomputation with R book.\nTo save your tmap you can use the following:\n\nmymap = tm_shape() +\n  tm_fill()\n\ntmap_save(tm = mymap, filename = \"path/to/your/plot/location/mymap.png\",\n       width = 15, height = 10, units = \"cm\", dpi = 300) # adjust as necessary\n\n\n\nBase R\nAlthough not the easiest to customise, you can definitely make nice maps using base R. Can you also make ugly maps with it?\nYou will find some basics on plotting sf objects in the {sf} plotting vignette in the package documentation here.\nTo save your plot to disk you can use the following code:\n\npng(filename = \"path/to/your/plot/location/mymap.png\",\n    width = 15, height = 10, units = \"cm\") # adjust as necessary\n\nplot(...) # the code for your plot goes here\n\ndevice.off()\n\nWith this code your plot will not render on the RStudio viewer but directly on the file you created. I recommend you to wrap your plot() code at the complete end, once you are done with your editing.",
    "crumbs": [
      "Practicals",
      "Practical 4"
    ]
  },
  {
    "objectID": "practicals/Practical4/Practical4-DataViz.html#data-packages",
    "href": "practicals/Practical4/Practical4-DataViz.html#data-packages",
    "title": "Practical 4",
    "section": "Data packages",
    "text": "Data packages\n\n{rnaturalearth}\nNatural Earth is a public domain map dataset including vector country and other administrative boundaries. With the package you can access the data easily within R and load it as an sf object. See the package documentation here.\n\n\n{osmdata}\nTo fetch data from OpenStreetMap you can use this package. Check the documentation on how to query data for your area here.\n\n\n{elevatr}\nTo get elevation data you can use this package. See the package vignettes here and the GitHub repository here",
    "crumbs": [
      "Practicals",
      "Practical 4"
    ]
  },
  {
    "objectID": "practicals/Practical4/Practical4-DataViz.html#gallery",
    "href": "practicals/Practical4/Practical4-DataViz.html#gallery",
    "title": "Practical 4",
    "section": "Gallery",
    "text": "Gallery\n\n\n\n\n\n\n\n\nAngelica Moreno - South American countries\n\n\n\n\n\n\n\nEmanuel Farias - Ostrich Osterreich - DEM\n\n\n\n\n\n\n\nEmanuel Farias - Ostrich Osterreich - Rivers\n\n\n\n\n\n\n\n\n\nJoshua Magotang - Map of Russia\n\n\n\n\n\n\n\nMax Schneeberger - Trumps view from Space\n\n\n\n\n\n\n\nMia Huebner - Alligators in the US\n\n\n\n\n\n\n\n\n\nSaeed Ullah - COVID vaccinations\n\n\n\n\n\n\n\nSaule Amambayeva - Wooorld map\n\n\n\n\n\n\n\nYana Nikolova - A map (of trees)\n\n\n\n\n\n\nFigure 1: Ugly maps!\n\n\n\n\n\n\n\nUses {ggspatial} for scale and north arrow, plays with text size and color, applied different projection\n\n\nUses {magick} to overlap an image to the generated map\n\n\nUses {magick} to overlap an image to the generated map\n\n\nApplies a projection that distorts Russia, changes parameters from geoms and theme\n\n\nExplores {ggplot2} parameters, applies custom palettes, changes projection for distortion\n\n\nGenerates random data, distorts the map with a polar projection, uses rivers and lakes in a distorted way so they don’t match the map, changes parameters in geoms and theme\n\n\nRed-green palette, uses geodetic coordinates\n\n\nChanges parameters in geoms and theme, changes coordinates to generate distortion\n\n\nUses the {tmap} package and explores the different customisation possibilities, removes x axis text\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 4"
    ]
  },
  {
    "objectID": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html",
    "href": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html",
    "title": "Practical 5",
    "section": "",
    "text": "Part 1: Data import\nIn this section we will load a spatial dataset of mountain huts into R and clean it before using it in the next section.\nWe can use the sf package to load data into R. In the background, sf will use GDAL to identify the driver to properly load the data. As you will see, you can load data directly from an URL but also local files.\nlibrary(sf)\nhuts = read_sf(\"https://github.com/loreabad6/app-dev-gis/raw/refs/heads/main/data/p5_huts.gpkg\")\nNow we will start our data wrangling and cleaning workflows. For this we will use packages from the tidyverse but you can use base R or data.table if you have experience and feel more familiar with those.\nlibrary(tidyverse)\nsf is designed to work with base R but also with tidy workflows, so we can directly use tidyverse verbs to wrangle the data.\nIf we glimpse into the data we can have an idea of what we are dealing with.\nhuts |&gt; \n  glimpse()\nNow that is a long file! You might have noticed some interesting patterns here and there, but what gives this data away is the first column: osm_id.\nNow if this is a spatial file, where are the coordinates? Take a look at the last column of the data: geom.\nhuts$geom\nThese are basically the locations of our huts, and sf already knows to look for those coordinates in this column.\nTo have a quick view of where your data is located, you can use the mapview() function from the {mapview} package.\nlibrary(mapview)\nmapview(huts)",
    "crumbs": [
      "Practicals",
      "Practical 5"
    ]
  },
  {
    "objectID": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-1-data-import",
    "href": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-1-data-import",
    "title": "Practical 5",
    "section": "",
    "text": "Note how loading the sf library also links the underlying software to your R session: GDAL, GEOS, PROJ.\nsf_use_s2(TRUE) is also active which means that sf will use spherical geometries. Read more about it here and here.\n\n\nYou will see that 9 packages have been now attached to your workspace by calling the library(tidyverse) package bundle. You don’t need to worry about the “conflicted packages”, it is a warning to let you know there are functions in loaded packages with the same names.",
    "crumbs": [
      "Practicals",
      "Practical 5"
    ]
  },
  {
    "objectID": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-2-data-cleaning",
    "href": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-2-data-cleaning",
    "title": "Practical 5",
    "section": "Part 2: Data cleaning",
    "text": "Part 2: Data cleaning\nIf you are interested in how to query data from OSM with R you can check the code I used here as well as the documentation for osmdata for small queries and osmextract for larger queries.\nSo now you know this is OpenStreetMap data. If you have ever worked with OSM data before you will know that their nodes have several tags with their properties attached to them. When querying the data with R, you will get in this case the queried huts in each row with all the tags in different columns forming a data frame.\nUsing this messy data you will be wrangling and tidying a bit so that you can work with a more manageable dataset in the next section.\n\n\n\n\n\n\nInfo\n\n\n\nFrom now on, each of the code chunks below will cause and error and/or will do the desired task incorrectly. (Even the chunks that run without error are not correct!) You will need to find the mistake, and correct it, to complete the intended action.\n\n\nYou will see a big amount of NA values in the huts data. That is because not all OSM tags are filled for every mountain hut, but if one hut has it, then it is included in the dataset.\n\nLet’s reduce the number of variables in the dataset. Let’s narrow the dataset to:\n\n\nName of the hut\nElevation of the hut\nCapacity (no. of beds)\nAmenity (is it a restaurant, a bar, a self-service hut?)\nOperator of the hut (Alpenverein, Naturfreunde, etc.)\nLocation of the hut (the coordinates)\n\n\nhuts_clean = huts &gt; \n  select(name, ele, capacity, beds, amenity, cuisine, operator)\nhuts_clean\n\n\n\n\n\n\n\nTip\n\n\n\nTake a close look at the result of your selection, are all the columns that you asked for there? What about the geom column? Did you ask for it? Is it anyway there? Let’s try to get rid of it.\n\n# THIS CHUNK HAS NO ERROR!!!!\nhuts_clean |&gt; select(-geom)\n\nOh no! It is still there! Well, that is because of how sf objects work. The geometry column is a “sticky” column, meaning that it cannot be dropped with tidyverse verbs. But, we want to work with spatial data, so we are not really going to remove that column. 😉\n\n\n\n\nIf you really want to remove the column you would need to do something like st_drop_geometry(huts_clean) or st_geometry(huts_clean) = NULL.\n\n\nNow, let’s adjust the proper variables to be numeric. We use the mutate() function which helps you change existing columns (if you save the result with the same column name) or to create new columns (by giving it a new column name).\n\n\nhuts_clean = huts_clean |&gt; \n  mutate(\n    ele = numeric(ele),\n    capacity = numeric(capacity),\n    beds = numeric(beds)\n  )\n\n\nWe will next create a new variable called “capacity_overall”. This column will combine the columns “capacity” and “beds”. When there is no capacity value, then the beds value will be taken. Otherwise the capacity value is taken. If both columns are NA, then the column will also have an NA. For this we can use the function case_when() inside the mutate() function.\n\n\nhuts_clean = huts_clean |&gt; \n  capacity_overall = case_when(is.na(capacity) ~ beds, TRUE ~ capacity)\n\n\nConsidering that the huts are located in Europe, we can project the data from WGS84 to a more appropriate CRS. Let’s use the European Equal Area “EPSG:3035”.\n\n\nhuts_clean = huts_clean |&gt; \n  st_set_crs(\"EPSG:3035\")\n\n\nFinally, note how we started each code chunk with: huts_clean = huts_clean |&gt;.\n\nThat is very redundant and can cause you trouble if you are recreating your object over and over again.\nWe can pipe all these steps together to have one single workflow for data cleaning. In the code chunk below, combine the (fixed!) code.\n\nhuts_clean = huts # add your fixed code here...\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nUp to this point, your clean dataset should have 4.6% of the number of columns in the original dataset.\n\n\n\n# Write code to verify that your huts_clean dataset has 4.6% \n# of the number of columns in the huts dataset",
    "crumbs": [
      "Practicals",
      "Practical 5"
    ]
  },
  {
    "objectID": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-3-enrich-your-data",
    "href": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-3-enrich-your-data",
    "title": "Practical 5",
    "section": "Part 3: Enrich your data",
    "text": "Part 3: Enrich your data\nSo far we have used only wrangling and cleaning functions. Now, we are going to enrich our dataset with other spatial datasets.\n\n\n\n\n\n\nInfo\n\n\n\nIn this section, you will get a series of instructions, you should implement code to get there.\n\n\n\nThe huts are located in different regions. You have a regions dataset here: https://github.com/loreabad6/app-dev-gis/raw/refs/heads/main/data/p5_regions.gpkg. Load the data using the sf package.\n\n\nregions = # load the data with the sf package. We did this before in Part 1.\n\n\nNow, we will perform a spatial join of the “huts_clean” data and the “regions” data. For this you can use the function st_join(). Remember you can check for function documentation by typing ?st_join on the console.\n\nHint: you most likely get an error when you first try to do your join. READ THE ERROR MESSAGE CAREFULLY! What does it tell you?\n\n# Write code using the st_join function to join in the information on \n# the regions dataset to the huts_clean dataset. \nhuts_enrich = huts_clean |&gt; \n  st_join(...)\n\n\n\nNote that the default join predicate used is st_intersects. For point data, any other predicate does not really make sense, but when joining other type of data (polygons or lines), you can use other type of predicates e.g. st_covered_by.\n\nNow let’s add some data about maximum temperature. For this you will find a .tif file here: https://github.com/loreabad6/app-dev-gis/raw/refs/heads/main/data/AUT_wc2.1_30s_tmax.tif. You can load this raster dataset using the rast() function from the {terra} package.\n\n\n\nNote how when you load {terra} you get a conflict warning. There is another package {tidyr} from the tidyverse with a function extract(). We will be using that function, so when we call it, we will use terra::extract() to be specific.\nThe maximum temperature dataset is from Wordclim data. To download it with R, I used the package {geodata} and the function worldclim_country(). See the script here.\n\nlibrary(terra)\ntmax = rast()\ntmax\n\n\n\nNotice, how this dataset is printed. Raster datasets in R are represented as matrices and arrays (remember Practical 2?). The print method is a specific way to print objects from the terra package.\n\nNote that there are 12 layers in this dataset. These correspond to the 12 months in the year. We can change the names of the layers with:\n\n\n# you don't need to change anything here!\nnames(tmax) = month.abb\n\n\nWe are interested in the winter months (Dec, Jan, Feb, Mar). Let’s get the mean tmax for these months.\n\n\ntmax_mean = mean(tmax[[c(...)]]) # add the winter months to subset.\n\n\n\nTo subset layers with a terra object we use [[. The mean() function applied to terra objects returns another raster. It applies the function per pixel. In this way you can do raster algebra!\n\nNow, let’s actually add the temperature information to the hut dataset. We can use the terra::extract() function to do this.\n\n\n# We need to add the `terra::` in front of the function \n# because ofthe conflict with the package tidyr\n# The first argument is the raster object and \n# the second one can be an sf object.\n# You can include the huts_enrich object here.\ntmax_mean_huts = terra::extract()\n\nIf you print this data you will notice that this is a data frame with the exact number of points as the sf object. The order is the same as the one in your dataset. Therefore, you can add this information directly as a new column to the “huts_enrich” dataset.\n\n\nDid you get a warning? Even if you did not transform your temperature to the correct CRS, the transformation was done internally by {terra}.\n\n# add the winter mean tmax here, note that it is the second column in the data\nhuts_enrich = huts_enrich |&gt; \n  mutate(tmax_winter = ) \n\n\n\n\n\n\n\nCheckpoint\n\n\n\nUp to this point, your enriched dataset should have mean “tmax” temperatures between -10.15 °C and 4.2 °C.\n\n\n\n# Write code to verify that the tmax_winter column in \n# the huts_enrich dataset ranges between -10.15 and 4.20",
    "crumbs": [
      "Practicals",
      "Practical 5"
    ]
  },
  {
    "objectID": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-4-find-the-dream-winter-hut",
    "href": "practicals/Practical5/Practical5-Spatial-Data-Analysis.html#part-4-find-the-dream-winter-hut",
    "title": "Practical 5",
    "section": "Part 4: Find the dream winter hut!",
    "text": "Part 4: Find the dream winter hut!\nRemember Lucia? She is very excited to find the perfect hut for her. Now that you have a clean and enriched dataset, you can help her find it!\nHere are her requirements:\n\nThe hut should be at a good enough altitude so that she can have some snow for skiing, she thinks huts above 800 m should be snowy enough!\nTemperature is also an important factor for good snow conditions. The maximum temperature shouldn’t be higher than 0 °C on average over the winter months.\nLucia is from Argentina, and currently is getting a new passport, so she can’t leave Austria.\nShe wants to stay in a small hut, nothing with too many other guests, but she doesn’t want to be completely alone either. Something between 10 and 50 overall capacity sounds good for her.\nShe needs to be sure she can actually eat at the hut, are there huts with restaurants?\nIt’s her first winter in Salzburg, so she surely needs to try some regional cuisine!\nShe has an Austrian Alpine Club membership (ÖAV) and she would be happy to make use of its benefits. Is there a hut that is operated by the ÖAV? Hint: you can detect a string with str_detect().\n\nUse your huts_enrich object and filter for Lucia’s requirements. After filtering, you should have only one hut as a result.\n\nresult = huts_enrich |&gt; \n  filter(...) \n\nWhere is the hut located? Make an interactive map!\n\nmapview(result)\n\n\n\n\n\n\n\nSolution 🎉\n\n\n\nWrite the name and region of the hut here!\n\n\nUpload the .qmd doc to Blackboard (don’t forget to add all your teammates/your name(s)!). The first team receives an extra point each in class participation 🏃\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Practical 5"
    ]
  },
  {
    "objectID": "misc/x_error-handling.html",
    "href": "misc/x_error-handling.html",
    "title": "Dealing with errors",
    "section": "",
    "text": "Advice for dealing with errors\nErrors can be sneaky - check results often\nIf a chunk of code runs smoothly without giving you any error or warnings this does not necessarily mean it accomplished the desired task.\nIt is a good habit to check the results of your code every time you finish a task.\nTwo heads are better than one\nIt can be hard to spot bugs in code that you wrote.\nWork with those around you - if something goes wrong, ask a friend to take a peek at your code and see if any glaring errors (like syntax error) pop out.\nExplain your code out loud\nThe best way to troubleshoot a sneaky but is to explain out loud each step of your code, and what you hoped to accomplish.\nIf you are alone, try Rubber Duck Debugging!\nGoogle is your friend\nThe whole of the internet is at your disposal! Use it early, use it often.\nSome tricks:",
    "crumbs": [
      "Practicals",
      "Dealing with errors"
    ]
  },
  {
    "objectID": "misc/x_error-handling.html#advice-for-dealing-with-errors",
    "href": "misc/x_error-handling.html#advice-for-dealing-with-errors",
    "title": "Dealing with errors",
    "section": "",
    "text": "In the text before the code chunk, make sure to briefly state what the point of the chunk is. This will remind later readers - which might be your future self! - what the desired output is.\nIf you created a new object, take a look at it, either by clicking its name in your Environment tab or by typing its name into the console. Make sure it looks about how you expect.\nIf you created or updated a data frame, make sure your edits did what you hoped. Use the Environment or the head() function to investigate your changes.\n\n\n\n\n\n\n\n\n\n\n\nCopy-paste the exact error message into Google. Chances are, somebody else had a similar problem and got a similar message.\nInclude package names in your search terms. For example, “bar plot in ggplot” is a better search than “bar plot in R”.\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Practicals",
      "Dealing with errors"
    ]
  },
  {
    "objectID": "final-project.html",
    "href": "final-project.html",
    "title": "Final project",
    "section": "",
    "text": "General information\nSee the information given on Blackboard.",
    "crumbs": [
      "Final project"
    ]
  },
  {
    "objectID": "final-project.html#r-project",
    "href": "final-project.html#r-project",
    "title": "Final project",
    "section": "R project",
    "text": "R project\nR Projects can either be delivered as:\n\nOption A. Quarto reproducible workflow\n\nA spatial analysis reproducible workflow.\nBe sure to use the Quarto functionalities to add documentation and explanations of your workflow alongside code and output\nYou can choose the topic you want to work on, including other projects you have implemented in other courses and programming languages and “translating” them to R\nYou should include at least one visual element (interactive map, static map, graphs and plots, tables)\n\n\n\n\n\n\n\nSubmission on Blackboard\n\n\n\n\nQuarto document (.qmd) file\n\nMake sure to include any data not publicly accessible\nThe .qmd file should be fully reproducible\n\nReport including:\n\ntwo line description of your work\na link to the published Quarto document on a website (hosted on GitHub)\nan AI use disclaimer\na contribution section when working in groups:\n\nspecify for all group members: 1) How much they contributed (every group member has to contribute at least 40% of the entire work) and 2) What they contributed (programming, documentation, …)\n\n\n\n\n\n\n\nOption B. R package\n\nAutomate a spatial analysis workflow. Think of a task that you often have to do an automate it by organising your R code in a package\nThe package should be released on GitHub and should have at least one vignette explaining the main functionalities\n\n\n\n\n\n\n\nSubmission on Blackboard\n\n\n\n\nReport including:\n\ntwo line description of your work\na link to the GitHub repository with your package and at least one vignette\n\nthe package should be possible to install locally using remotes::install_github()\n\nan AI use disclaimer\na contribution section when working in groups:\n\nspecify for all group members: 1) How much they contributed (every group member has to contribute at least 40% of the entire work) and 2) What they contributed (programming, documentation, …)\n\n\n\n\n\n\n\nAbout the use of AI\nUsing AI in this course is not discouraged if it helps you understand code or discover new ways of doing a task. Think of AI as an extended version of googling your issues or a Stack Overflow entry. However, beware to always test the code that you receive as an output, and also think about the logic that the AI tool follows. I expect that you learn from this course as much as possible, and copy pasting solutions generated by a LLM without critical thinking is unfortunately not going to meet those expectations.\n\n\n\n\n\n\nWarning\n\n\n\nIf you select a final project using R, please add a disclaimer section explaining if you used AI for the completion of the project and how you used it.",
    "crumbs": [
      "Final project"
    ]
  },
  {
    "objectID": "final-project.html#ideas-with-an-extra-twist",
    "href": "final-project.html#ideas-with-an-extra-twist",
    "title": "Final project",
    "section": "Ideas with an extra twist:",
    "text": "Ideas with an extra twist:\n\nQuarto report ideas\n\nMulti-language Quarto file to compare and benchmark spatial analyses in R and Python.\n\nSee an example of a R and Python combined workflow here (raw .qmd file here)\n\nQuarto dashboard with interactive maps to visualise the results of spatial analysis or an interesting dataset.\n\nSee an example of a R spatial dashboard here\n\n\n\n\nR package ideas\nR packages should have at least one vignette explaining main functionalities\n\nAn R package to automate a workflow normally performed in QGIS/GRASS/SAGA-GIS/etc.\n\nCalculating terrain derivatives\nComputing zonal statistics\n\nAn R package to interface the sen2cube.at API.\n\nSee a first attempt here: https://github.com/Sen2Cube-at/sen2cubeR\n\nAn R package to run the NetAScore toolbox\n\nCalling docker within R with the CLI\nhttps://github.com/plus-mobilitylab/netascore\n\n\n\n\n\n\nAllaire, J., & Dervieux, C. (2024). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass package. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from satellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes from satellite image collections with the gdalcubes library. Data, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based processing of satellite image collections in r using STAC, COGs, and on-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023). Mapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine API. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point patterns: Methodology and applications with R. Chapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing spatial point patterns. Journal of Statistical Software, 12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of gibbs point process models and their implementation. Journal of Statistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting barn-raised OSGeo libraries and the evolving r.*spatial package ecosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical information system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes, statistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied spatial data analysis with R, second edition. Springer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets for spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of global and local indicators of spatial association. TEST, 27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade, P., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on Earth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a). Qgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b). R package qgisprocess: Use QGIS processing algorithms. Version 0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r objects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal interpolation using gstat. The R Journal, 8, 204–218. https://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with lubridate. Journal of Statistical Software, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly Media.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable geospatial data analysis. Big Data in Agriculture - 2020 Convention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started | happy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data analysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M., Maitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez, L., Thuiller, W., & Violle, C. (2020). Global distribution and conservation status of ecologically rare mammal and bird species. Nature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite imagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite imagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation. Transport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map data from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in r. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr: Distances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for simple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS software. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector data cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S: The gstat package. Computers & Geosciences, 30, 683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and spatio-temporal geostatistical modelling, prediction and simulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph manipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in s and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and nonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine multidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A comparative case study with areal data. Geographical Analysis, 54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R Package for Retrieving Satellite Imagery and Calculating Spectral Indices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L., Carvalho, A., & Ferreira, K. (2021). Satellite image time series analysis for big earth observation data. Remote Sensing, 13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits: Satellite image time series analysis for earth observation data cubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024). Rstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., & Ferreira, K. (2021). Rstac: An r package to access spatiotemporal asset catalog satellite imagery. 2021 IEEE International Geoscience and Remote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make dealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive partitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025). Sfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r package. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing research products as r packages. Behavior Research Methods, 53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R reference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R Journal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC Press.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical variables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common string operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the tidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D., François, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M., Pedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J., Robinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024). Usethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T. (2024). ggplot2: Create elegant data visualisations using the grammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024). roxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming tools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S. (2024). Pkgdown: Make static HTML documentation for a package. https://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read rectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022). Devtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy messy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in R. In V. Stodden, F. Leisch, & R. D. Peng (Eds.), Implementing reproducible computational research. Chapman; Hall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr (2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/",
    "crumbs": [
      "Final project"
    ]
  },
  {
    "objectID": "refs/references.html",
    "href": "refs/references.html",
    "title": "References",
    "section": "",
    "text": "Allaire, J., & Dervieux, C. (2024). Quarto: R interface to\nquarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAndreo, V. (2024). Get started with GRASS & r: The rgrass\npackage. https://grass-tutorials.osgeo.org/content/tutorials/get_started/fast_track_grass_and_R.html.\n\n\nAppel, M. (2024). Gdalcubes: Earth observation data cubes from\nsatellite image collections. https://github.com/appelmar/gdalcubes\n\n\nAppel, M., & Pebesma, E. (2019). On-demand processing of data cubes\nfrom satellite image collections with the gdalcubes library.\nData, 4(3). https://www.mdpi.com/2306-5729/4/3/92\n\n\nAppel, M., Pebesma, E., & Mohr, M. (2021). Cloud-based\nprocessing of satellite image collections in r using STAC, COGs, and\non-demand data cubes. https://r-spatial.org/r/2021/04/23/cloud-based-cubes.html\n\n\nAppelhans, T., Detsch, F., Reudenbach, C., & Woellauer, S. (2023).\nMapview: Interactive viewing of spatial data in r. https://github.com/r-spatial/mapview\n\n\nAybar, C. (2023). Rgee: R bindings for calling the earth engine\nAPI. https://github.com/r-spatial/rgee/\n\n\nBaddeley, A., Rubak, E., & Turner, R. (2015). Spatial point\npatterns: Methodology and applications with R.\nChapman; Hall/CRC Press. https://www.routledge.com/Spatial-Point-Patterns-Methodology-and-Applications-with-R/Baddeley-Rubak-Turner/p/book/9781482210200/\n\n\nBaddeley, A., & Turner, R. (2005). spatstat: An R package for analyzing\nspatial point patterns. Journal of Statistical Software,\n12(6), 1–42. https://doi.org/10.18637/jss.v012.i06\n\n\nBaddeley, A., Turner, R., Mateu, J., & Bevan, A. (2013). Hybrids of\ngibbs point process models and their implementation. Journal of\nStatistical Software, 55(11), 1–43. https://doi.org/10.18637/jss.v055.i11\n\n\nBivand, R. (2022). Modernizing the r-GRASS interface: Confronting\nbarn-raised OSGeo libraries and the evolving r.*spatial package\necosystem. https://rsbivand.github.io/foss4g_2022/modernizing_220822.html.\n\n\nBivand, R. (2024a). Rgrass: Interface between GRASS geographical\ninformation system and r. https://rsbivand.github.io/rgrass/\n\n\nBivand, R. (2024b). Spdep: Spatial dependence: Weighting schemes,\nstatistics. https://github.com/r-spatial/spdep/\n\n\nBivand, R. S., Pebesma, E., & Gómez-Rubio, V. (2013). Applied\nspatial data analysis with R, second edition.\nSpringer, NY. https://asdar-book.org/\n\n\nBivand, R., Nowosad, J., & Lovelace, R. (2024). spData: Datasets\nfor spatial analysis. https://jakubnowosad.com/spData/\n\n\nBivand, R., & Wong, D. W. S. (2018). Comparing implementations of\nglobal and local indicators of spatial association. TEST,\n27(3), 716–748. https://doi.org/10.1007/s11749-018-0599-x\n\n\nCâmara, G., Simoes, R., Souza, F., Pelletier, C., Sanchez, A., Andrade,\nP., Ferreira, K., & Queiroz, G. (2023). sits: Satellite image time series analysis on\nEarth observation data cubes. https://e-sensing.github.io/sitsbook/index.html\n\n\nÇetinkaya-Rundel, M. (2024). Quarto dashboards video series. https://quarto.org/docs/blog/posts/2024-11-22-dashboards-workshop/.\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024a).\nQgisprocess: Use QGIS processing algorithms. https://r-spatial.github.io/qgisprocess/\n\n\nDunnington, D., Vanderhaeghe, F., Caha, J., & Muenchow, J. (2024b).\nR package qgisprocess: Use QGIS processing algorithms. Version\n0.4.1. https://r-spatial.github.io/qgisprocess/\n\n\nEddelbuettel, D. (2024). Digest: Create compact hash digests of r\nobjects. https://github.com/eddelbuettel/digest\n\n\nGräler, B., Pebesma, E., & Heuvelink, G. (2016). Spatio-temporal\ninterpolation using gstat. The R Journal, 8, 204–218.\nhttps://journal.r-project.org/archive/2016/RJ-2016-014/index.html\n\n\nGrolemund, G., & Wickham, H. (2011). Dates and times made easy with\nlubridate. Journal of Statistical\nSoftware, 40(3), 1–25. https://www.jstatsoft.org/v40/i03/\n\n\nHadley Wickham, J. B. (2023). R packages (2nd ed.). O’Reilly\nMedia.\n\n\nHijmans, R. J. (2020). Terra and luna: New r packages scalable\ngeospatial data analysis. Big Data in Agriculture - 2020\nConvention. https://www.youtube.com/watch?v=5b2xhqlH49I&t=690s\n\n\nHijmans, R. J. (2024a). Spatial data science with R and terra. https://rspatial.org/index.html.\n\n\nHijmans, R. J. (2024b). Terra: Spatial data analysis. https://rspatial.org/\n\n\nJenny Bryan, J. H., the STAT 545 TAs. (2025). Let’s git started |\nhappy git and GitHub for the useR. https://happygitwithr.com/.\n\n\nLi, X., & Anselin, L. (2024). Rgeoda: R library for spatial data\nanalysis. https://github.com/geodacenter/rgeoda/\n\n\nLoiseau, N., Mouquet, N., Casajus, N., GreniÃ©, M., GuÃ©guen, M.,\nMaitner, B., Mouillot, D., Ostling, A., Renaud, J., Tucker, C., Velez,\nL., Thuiller, W., & Violle, C. (2020). Global distribution and\nconservation status of ecologically rare mammal and bird species.\nNature Communications, 11(1). https://doi.org/10.1038/s41467-020-18779-w\n\n\nLovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation\nwith R. CRC Press.\n\n\nMahoney, M. (n.d.). Rsi: Efficiently retrieve and process satellite\nimagery (Version 0.2.0.9000). https://doi.org/10.5281/zenodo.10926857\n\n\nMahoney, M. (2024). Rsi: Efficiently retrieve and process satellite\nimagery. https://github.com/Permian-Global-Research/rsi\n\n\nMark Padgham. (2019). Dodgr: An r package for network flow aggregation.\nTransport Findings. https://doi.org/10.32866/6945\n\n\nMassicotte, P., & South, A. (2023). Rnaturalearth: World map\ndata from natural earth. https://docs.ropensci.org/rnaturalearth/\n\n\nMeyer, C. (2022). Understanding the basics of package writing in\nr. https://cosimameyer.com/post/understanding-the-basics-of-package-writing-in-r/.\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data\nframes. https://tibble.tidyverse.org/\n\n\nPadgham, M., Petutschnig, A., & Cooley, D. (2024). Dodgr:\nDistances on directed graphs. https://github.com/UrbanAnalyst/dodgr\n\n\nParry, J., & Locke, D. (2024). Sfdep: Spatial dependence for\nsimple features. https://sfdep.josiahparry.com\n\n\nPawley, S. (2024). Rsagacmd: Linking r with the open-source SAGA-GIS\nsoftware. https://stevenpawley.github.io/Rsagacmd/\n\n\nPebesma, E. (2018). Simple Features for R:\nStandardized Support for Spatial Vector Data. The R\nJournal, 10(1), 439–446. https://doi.org/10.32614/RJ-2018-009\n\n\nPebesma, E. (2024). Stars: Spatiotemporal arrays, raster and vector\ndata cubes. https://r-spatial.github.io/stars/\n\n\nPebesma, E. (2025). Sf: Simple features for r. https://r-spatial.github.io/sf/\n\n\nPebesma, E. J. (2004). Multivariable geostatistics in S:\nThe gstat package. Computers & Geosciences, 30,\n683–691.\n\n\nPebesma, E., & Bivand, R. (2023). Spatial\nData Science: With applications in R. Chapman and\nHall/CRC. https://doi.org/10.1201/9780429459016\n\n\nPebesma, E., & Graeler, B. (2024). Gstat: Spatial and\nspatio-temporal geostatistical modelling, prediction and\nsimulation. https://github.com/r-spatial/gstat/\n\n\nPedersen, T. L. (2024). Tidygraph: A tidy API for graph\nmanipulation. https://tidygraph.data-imaginist.com\n\n\nPinheiro, J. C., & Bates, D. M. (2000). Mixed-effects models in\ns and s-PLUS. Springer. https://doi.org/10.1007/b98882\n\n\nPinheiro, J., Bates, D., & R Core Team. (2024). Nlme: Linear and\nnonlinear mixed effects models. https://svn.r-project.org/R-packages/trunk/nlme/\n\n\nPlate, T., & Heiberger, R. (2024). Abind: Combine\nmultidimensional arrays.\n\n\nR Core Team. (2024). R: A language and environment for statistical\ncomputing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRoger Bivand. (2022). R packages for analyzing spatial data: A\ncomparative case study with areal data. Geographical Analysis,\n54(3), 488–518. https://doi.org/10.1111/gean.12319\n\n\nRydzik, M. (2024, January 10). An Overview of the RSI R\nPackage for Retrieving Satellite Imagery and Calculating Spectral\nIndices. https://geocompx.org/post/2024/rsi-bp1/\n\n\nSimoes, R., Camara, G., Queiroz, G., Souza, F., Andrade, P., Santos, L.,\nCarvalho, A., & Ferreira, K. (2021). Satellite image time series\nanalysis for big earth observation data. Remote Sensing,\n13(13), 2428. https://doi.org/10.3390/rs13132428\n\n\nSimoes, R., Camara, G., Souza, F., & Carlos, F. (2024). Sits:\nSatellite image time series analysis for earth observation data\ncubes. https://github.com/e-sensing/sits/\n\n\nSimoes, R., Carvalho, F., & Brazil Data Cube Team. (2024).\nRstac: Client library for SpatioTemporal asset catalog. https://brazil-data-cube.github.io/rstac/\n\n\nSimoes, R., Souza, F., Zaglia, M., Queiroz, G. R., Santos, R., &\nFerreira, K. (2021). Rstac: An r package to access spatiotemporal asset\ncatalog satellite imagery. 2021 IEEE International Geoscience and\nRemote Sensing Symposium IGARSS, 7674–7677. https://doi.org/10.1109/IGARSS47720.2021.9553518\n\n\nSpinu, V., Grolemund, G., & Wickham, H. (2023). Lubridate: Make\ndealing with dates a little easier. https://lubridate.tidyverse.org\n\n\nTherneau, T., & Atkinson, B. (2023). Rpart: Recursive\npartitioning and regression trees. https://github.com/bethatkinson/rpart\n\n\nvan der Meer, L., Abad, L., Gilardi, A., & Lovelace, R. (2025).\nSfnetworks: Tidy geospatial networks. https://luukvdmeer.github.io/sfnetworks/\n\n\nVreede, B. (2023). Why your research deserves to be an r\npackage. https://blog.esciencecenter.nl/why-your-research-deserves-to-be-an-r-package-3737a73501c.\n\n\nVuorre, M., & Crump, M. J. C. (2020). Sharing and organizing\nresearch products as r packages. Behavior Research Methods,\n53(2), 792â802. https://doi.org/10.3758/s13428-020-01436-x\n\n\nWatson, S. S. (n.d.). A Julia-Python-R\nreference sheet. Retrieved November 21, 2024, from https://docslib.org/doc/2547802/julia-python-r-cheatsheet\n\n\nWickham, H. (2011). Testthat: Get started with testing. The R\nJournal, 3, 5–10. https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software,\n59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data\nanalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org\n\n\nWickham, H. (2019). Advanced R (p. 588). CRC\nPress.\n\n\nWickham, H. (2021). Mastering shiny. \"O’Reilly Media, Inc.\".\n\n\nWickham, H. (2023a). Forcats: Tools for working with categorical\nvariables (factors). https://forcats.tidyverse.org/\n\n\nWickham, H. (2023b). Stringr: Simple, consistent wrappers for common\nstring operations. https://stringr.tidyverse.org\n\n\nWickham, H. (2023c). Tidyverse: Easily install and load the\ntidyverse. https://tidyverse.tidyverse.org\n\n\nWickham, H. (2024). Testthat: Unit testing for r. https://testthat.r-lib.org\n\n\nWickham, H., Averick, M., Bryan, J., Chang, W., McGowan, L. D.,\nFrançois, R., Grolemund, G., Hayes, A., Henry, L., Hester, J., Kuhn, M.,\nPedersen, T. L., Miller, E., Bache, S. M., Müller, K., Ooms, J.,\nRobinson, D., Seidel, D. P., Spinu, V., … Yutani, H. (2019). Welcome to\nthe tidyverse. Journal of Open Source\nSoftware, 4(43), 1686. https://doi.org/10.21105/joss.01686\n\n\nWickham, H., Bryan, J., Barrett, M., & Teucher, A. (2024).\nUsethis: Automate package and project setup. https://usethis.r-lib.org\n\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for\ndata science (2nd ed.). O’Reilly Media.\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K.,\nWilke, C., Woo, K., Yutani, H., Dunnington, D., & van den Brand, T.\n(2024). ggplot2: Create elegant data visualisations using the\ngrammar of graphics. https://ggplot2.tidyverse.org\n\n\nWickham, H., Danenberg, P., Csárdi, G., & Eugster, M. (2024).\nroxygen2: In-line documentation for r. https://roxygen2.r-lib.org/\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D.\n(2023). Dplyr: A grammar of data manipulation. https://dplyr.tidyverse.org\n\n\nWickham, H., & Henry, L. (2023). Purrr: Functional programming\ntools. https://purrr.tidyverse.org/\n\n\nWickham, H., Hesselberth, J., Salmon, M., Roy, O., & Brüggemann, S.\n(2024). Pkgdown: Make static HTML documentation for a package.\nhttps://pkgdown.r-lib.org/\n\n\nWickham, H., Hester, J., & Bryan, J. (2024). Readr: Read\nrectangular text data. https://readr.tidyverse.org\n\n\nWickham, H., Hester, J., Chang, W., & Bryan, J. (2022).\nDevtools: Tools to make developing r packages easier. https://devtools.r-lib.org/\n\n\nWickham, H., Vaughan, D., & Girlich, M. (2024). Tidyr: Tidy\nmessy data. https://tidyr.tidyverse.org\n\n\nXie, Y. (2014). Knitr: A comprehensive tool for reproducible research in\nR. In V. Stodden, F. Leisch, & R. D. Peng (Eds.),\nImplementing reproducible computational research. Chapman;\nHall/CRC.\n\n\nXie, Y. (2015). Dynamic documents with R and knitr\n(2nd ed.). Chapman; Hall/CRC. https://yihui.org/knitr/\n\n\nXie, Y. (2024). Knitr: A general-purpose package for dynamic report\ngeneration in r. https://yihui.org/knitr/",
    "crumbs": [
      "References"
    ]
  }
]